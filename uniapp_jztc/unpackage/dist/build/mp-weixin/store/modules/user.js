"use strict";const e=require("../../utils/storage.js"),t=require("../../utils/auth.js"),n={namespaced:!0,state:{userInfo:e.getUserInfo()||{},token:e.getToken()||"",isLogin:t.isLoggedIn(),loginLoading:!1},mutations:{SET_USER_INFO(t,n){t.userInfo=n,e.setUserInfo(n)},SET_TOKEN(n,o){n.token=o,e.setToken(o),n.isLogin=t.isLoggedIn()},CLEAR_LOGIN_STATE(t){t.userInfo={},t.token="",t.isLogin=!1,e.clearUserLoginState()},SET_LOGIN_LOADING(e,t){e.loginLoading=t}},actions:{async silentLogin({commit:e}){e("SET_LOGIN_LOADING",!0);try{const o=await t.silentLogin();if(o)if(o.token&&e("SET_TOKEN",o.token),o.userInfo)e("SET_USER_INFO",o.userInfo);else if(t.isLoggedIn())try{const n=await t.fetchAndSaveUserInfo();n&&e("SET_USER_INFO",n)}catch(n){}return e("SET_LOGIN_LOADING",!1),o}catch(o){return e("SET_LOGIN_LOADING",!1),Promise.reject(o)}},async login({commit:e}){e("SET_LOGIN_LOADING",!0);try{const n=await t.fullLogin();return n&&(n.token&&e("SET_TOKEN",n.token),n.userInfo&&e("SET_USER_INFO",n.userInfo)),e("SET_LOGIN_LOADING",!1),n}catch(n){return e("SET_LOGIN_LOADING",!1),Promise.reject(n)}},async getUserInfo({commit:n,state:o}){try{const s=await t.fetchAndSaveUserInfo();if(s&&(s.id&&!s.clientId&&(s.clientId=s.id),n("SET_USER_INFO",s),!o.isLogin&&(s.clientId||s.id))){const t=e.getToken();t&&n("SET_TOKEN",t)}return s}catch(s){return 401===s.code&&n("CLEAR_LOGIN_STATE"),Promise.reject(s)}},logout({commit:e}){t.logout(),e("CLEAR_LOGIN_STATE")}},getters:{isLoggedIn:e=>e.isLogin,userInfo:e=>e.userInfo,token:e=>e.token}};exports.user=n;
