{"version":3,"file":"login.js","sources":["utils/login.js"],"sourcesContent":["import store from '@/store'\r\n\r\n/**\r\n * 执行微信登录流程\r\n * 1. 获取微信code\r\n * 2. 获取用户信息(需用户授权)\r\n * 3. 调用后端登录接口\r\n * 4. 保存token和用户信息\r\n * @returns {Promise<Object>} 登录结果\r\n */\r\nexport const wxLogin = () => {\r\n  return new Promise((resolve, reject) => {\r\n    // 显示加载提示\r\n    uni.showLoading({\r\n      title: '登录中...',\r\n      mask: true\r\n    })\r\n\r\n    // 获取微信登录凭证\r\n    uni.login({\r\n      provider: 'weixin',\r\n      success: async (loginRes) => {\r\n        if (loginRes.code) {\r\n          try {\r\n            // 获取用户信息\r\n            const userInfoRes = await getUserProfile()\r\n            \r\n            // 调用后端登录接口\r\n            const loginData = {\r\n              code: loginRes.code,\r\n              userInfo: userInfoRes.userInfo\r\n            }\r\n            \r\n            // 调用store中的登录action\r\n            const result = await store.dispatch('user/login', loginData)\r\n            \r\n            uni.hideLoading()\r\n            resolve(result)\r\n          } catch (error) {\r\n            uni.hideLoading()\r\n            uni.showToast({\r\n              title: '登录失败: ' + (error.message || '未知错误'),\r\n              icon: 'none'\r\n            })\r\n            reject(error)\r\n          }\r\n        } else {\r\n          uni.hideLoading()\r\n          uni.showToast({\r\n            title: '获取微信登录凭证失败',\r\n            icon: 'none'\r\n          })\r\n          reject(new Error('获取微信登录凭证失败'))\r\n        }\r\n      },\r\n      fail: (error) => {\r\n        uni.hideLoading()\r\n        uni.showToast({\r\n          title: '微信登录失败',\r\n          icon: 'none'\r\n        })\r\n        reject(error)\r\n      }\r\n    })\r\n  })\r\n}\r\n\r\n/**\r\n * 获取用户信息\r\n * @returns {Promise<Object>} 用户信息\r\n */\r\nconst getUserProfile = () => {\r\n  return new Promise((resolve, reject) => {\r\n    uni.getUserProfile({\r\n      desc: '用于完善会员资料',\r\n      success: (res) => {\r\n        resolve(res)\r\n      },\r\n      fail: (err) => {\r\n        reject(err)\r\n      }\r\n    })\r\n  })\r\n}\r\n\r\n/**\r\n * 判断是否已登录\r\n * @returns {Boolean} 是否已登录\r\n */\r\nexport const isLoggedIn = () => {\r\n  return store.getters['user/isLoggedIn']\r\n}\r\n\r\n/**\r\n * 检查登录状态，如果未登录则跳转到登录页面\r\n * @param {Function} successCallback 登录成功回调\r\n * @returns {Boolean} 是否已登录\r\n */\r\nexport const checkLogin = (successCallback) => {\r\n  if (isLoggedIn()) {\r\n    if (typeof successCallback === 'function') {\r\n      successCallback()\r\n    }\r\n    return true\r\n  }\r\n  \r\n  // 提示用户登录\r\n  uni.showModal({\r\n    title: '提示',\r\n    content: '您尚未登录，是否立即登录？',\r\n    confirmText: '立即登录',\r\n    cancelText: '取消',\r\n    success: (res) => {\r\n      if (res.confirm) {\r\n        wxLogin().then(() => {\r\n          if (typeof successCallback === 'function') {\r\n            successCallback()\r\n          }\r\n        })\r\n      }\r\n    }\r\n  })\r\n  \r\n  return false\r\n} "],"names":["uni","store"],"mappings":";;;AAUY,MAAC,UAAU,MAAM;AAC3B,SAAO,IAAI,QAAQ,CAAC,SAAS,WAAW;AAEtCA,kBAAAA,MAAI,YAAY;AAAA,MACd,OAAO;AAAA,MACP,MAAM;AAAA,IACZ,CAAK;AAGDA,kBAAAA,MAAI,MAAM;AAAA,MACR,UAAU;AAAA,MACV,SAAS,OAAO,aAAa;AAC3B,YAAI,SAAS,MAAM;AACjB,cAAI;AAEF,kBAAM,cAAc,MAAM,eAAgB;AAG1C,kBAAM,YAAY;AAAA,cAChB,MAAM,SAAS;AAAA,cACf,UAAU,YAAY;AAAA,YACvB;AAGD,kBAAM,SAAS,MAAMC,YAAAA,MAAM,SAAS,cAAc,SAAS;AAE3DD,0BAAAA,MAAI,YAAa;AACjB,oBAAQ,MAAM;AAAA,UACf,SAAQ,OAAO;AACdA,0BAAAA,MAAI,YAAa;AACjBA,0BAAAA,MAAI,UAAU;AAAA,cACZ,OAAO,YAAY,MAAM,WAAW;AAAA,cACpC,MAAM;AAAA,YACpB,CAAa;AACD,mBAAO,KAAK;AAAA,UACb;AAAA,QACX,OAAe;AACLA,wBAAAA,MAAI,YAAa;AACjBA,wBAAAA,MAAI,UAAU;AAAA,YACZ,OAAO;AAAA,YACP,MAAM;AAAA,UAClB,CAAW;AACD,iBAAO,IAAI,MAAM,YAAY,CAAC;AAAA,QAC/B;AAAA,MACF;AAAA,MACD,MAAM,CAAC,UAAU;AACfA,sBAAAA,MAAI,YAAa;AACjBA,sBAAAA,MAAI,UAAU;AAAA,UACZ,OAAO;AAAA,UACP,MAAM;AAAA,QAChB,CAAS;AACD,eAAO,KAAK;AAAA,MACb;AAAA,IACP,CAAK;AAAA,EACL,CAAG;AACH;AAMA,MAAM,iBAAiB,MAAM;AAC3B,SAAO,IAAI,QAAQ,CAAC,SAAS,WAAW;AACtCA,kBAAAA,MAAI,eAAe;AAAA,MACjB,MAAM;AAAA,MACN,SAAS,CAAC,QAAQ;AAChB,gBAAQ,GAAG;AAAA,MACZ;AAAA,MACD,MAAM,CAAC,QAAQ;AACb,eAAO,GAAG;AAAA,MACX;AAAA,IACP,CAAK;AAAA,EACL,CAAG;AACH;;"}