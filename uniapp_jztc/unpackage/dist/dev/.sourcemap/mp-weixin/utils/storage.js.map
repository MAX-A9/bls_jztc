{"version":3,"file":"storage.js","sources":["utils/storage.js"],"sourcesContent":["/**\r\n * 本地存储相关方法\r\n */\r\nimport { STORAGE_KEYS } from './constants.js';\r\n\r\n/**\r\n * 存储数据\r\n * @param {String} key 存储键名\r\n * @param {any} data 存储的数据\r\n */\r\nexport function setStorage(key, data) {\r\n  try {\r\n    uni.setStorageSync(key, data);\r\n  } catch (e) {\r\n    console.error(`数据存储失败 [${key}]`);\r\n  }\r\n}\r\n\r\n/**\r\n * 获取存储的数据\r\n * @param {String} key 存储键名\r\n * @returns {any} 存储的数据\r\n */\r\nexport function getStorage(key) {\r\n  try {\r\n    const data = uni.getStorageSync(key);\r\n    return data;\r\n  } catch (e) {\r\n    console.error(`数据读取失败 [${key}]`);\r\n    return null;\r\n  }\r\n}\r\n\r\n/**\r\n * 移除存储的数据\r\n * @param {String} key 存储键名\r\n */\r\nexport function removeStorage(key) {\r\n  try {\r\n    uni.removeStorageSync(key);\r\n  } catch (e) {\r\n    console.error(`数据删除失败 [${key}]`);\r\n  }\r\n}\r\n\r\n/**\r\n * 清除所有存储数据\r\n */\r\nexport function clearStorage() {\r\n  try {\r\n    uni.clearStorageSync();\r\n  } catch (e) {\r\n    console.error('清空数据失败');\r\n  }\r\n}\r\n\r\n/**\r\n * 存储用户信息\r\n * @param {Object} userInfo 用户信息\r\n */\r\nexport function setUserInfo(userInfo) {\r\n  setStorage(STORAGE_KEYS.USER_INFO, userInfo);\r\n}\r\n\r\n/**\r\n * 获取用户信息\r\n * @returns {Object} 用户信息\r\n */\r\nexport function getUserInfo() {\r\n  const info = getStorage(STORAGE_KEYS.USER_INFO) || {};\r\n  \r\n  // 确保兼容性：如果只有id字段，复制到clientId\r\n  if (info && info.id && !info.clientId) {\r\n    info.clientId = info.id;\r\n  }\r\n  \r\n  return info;\r\n}\r\n\r\n/**\r\n * 存储token\r\n * @param {String} token 登录token\r\n */\r\nexport function setToken(token) {\r\n  setStorage(STORAGE_KEYS.TOKEN, token);\r\n}\r\n\r\n/**\r\n * 获取token\r\n * @returns {String} 登录token\r\n */\r\nexport function getToken() {\r\n  const token = getStorage(STORAGE_KEYS.TOKEN) || '';\r\n  return token;\r\n}\r\n\r\n/**\r\n * 清除用户登录态\r\n */\r\nexport function clearUserLoginState() {\r\n  removeStorage(STORAGE_KEYS.USER_INFO);\r\n  removeStorage(STORAGE_KEYS.TOKEN);\r\n}\r\n\r\n/**\r\n * 保存闲置物品草稿\r\n * @param {Object} draftData 草稿数据\r\n * @returns {Number} 草稿ID\r\n */\r\nexport function saveIdleDraft(draftData) {\r\n  try {\r\n    // 获取现有的草稿列表\r\n    const draftList = getIdleDraftList() || [];\r\n    \r\n    // 生成唯一ID\r\n    const draftId = Date.now();\r\n    \r\n    // 添加更新时间和ID\r\n    const newDraft = {\r\n      ...draftData,\r\n      id: draftId,\r\n      updateTime: new Date().toISOString(),\r\n      type: 'idle' // 标记为闲置物品类型\r\n    };\r\n    \r\n    // 添加到列表开头（最新的在前面）\r\n    draftList.unshift(newDraft);\r\n    \r\n    // 保存回存储\r\n    setStorage(STORAGE_KEYS.IDLE_DRAFT, draftList);\r\n    \r\n    return draftId;\r\n  } catch (e) {\r\n    console.error('保存闲置物品草稿失败', e);\r\n    return 0;\r\n  }\r\n}\r\n\r\n/**\r\n * 获取闲置物品草稿列表\r\n * @returns {Array} 草稿列表\r\n */\r\nexport function getIdleDraftList() {\r\n  return getStorage(STORAGE_KEYS.IDLE_DRAFT) || [];\r\n}\r\n\r\n/**\r\n * 获取单个闲置物品草稿\r\n * @param {Number} draftId 草稿ID\r\n * @returns {Object|null} 草稿数据\r\n */\r\nexport function getIdleDraft(draftId) {\r\n  const draftList = getIdleDraftList();\r\n  return draftList.find(item => item.id === draftId) || null;\r\n}\r\n\r\n/**\r\n * 删除闲置物品草稿\r\n * @param {Number} draftId 草稿ID\r\n * @returns {Boolean} 是否删除成功\r\n */\r\nexport function deleteIdleDraft(draftId) {\r\n  try {\r\n    let draftList = getIdleDraftList();\r\n    draftList = draftList.filter(item => item.id !== draftId);\r\n    setStorage(STORAGE_KEYS.IDLE_DRAFT, draftList);\r\n    return true;\r\n  } catch (e) {\r\n    console.error('删除闲置物品草稿失败', e);\r\n    return false;\r\n  }\r\n}\r\n\r\n/**\r\n * 保存信息发布草稿\r\n * @param {Object} draftData 草稿数据\r\n * @returns {Number} 草稿ID\r\n */\r\nexport function saveInfoDraft(draftData) {\r\n  try {\r\n    // 获取现有的草稿列表\r\n    const draftList = getInfoDraftList() || [];\r\n    \r\n    // 生成唯一ID\r\n    const draftId = Date.now();\r\n    \r\n    // 添加更新时间和ID\r\n    const newDraft = {\r\n      ...draftData,\r\n      id: draftId,\r\n      updateTime: new Date().toISOString(),\r\n      type: 'info' // 标记为信息发布类型\r\n    };\r\n    \r\n    // 添加到列表开头（最新的在前面）\r\n    draftList.unshift(newDraft);\r\n    \r\n    // 保存回存储\r\n    setStorage(STORAGE_KEYS.INFO_DRAFT, draftList);\r\n    \r\n    return draftId;\r\n  } catch (e) {\r\n    console.error('保存信息发布草稿失败', e);\r\n    return 0;\r\n  }\r\n}\r\n\r\n/**\r\n * 获取信息发布草稿列表\r\n * @returns {Array} 草稿列表\r\n */\r\nexport function getInfoDraftList() {\r\n  return getStorage(STORAGE_KEYS.INFO_DRAFT) || [];\r\n}\r\n\r\n/**\r\n * 获取单个信息发布草稿\r\n * @param {Number} draftId 草稿ID\r\n * @returns {Object|null} 草稿数据\r\n */\r\nexport function getInfoDraft(draftId) {\r\n  const draftList = getInfoDraftList();\r\n  return draftList.find(item => item.id === draftId) || null;\r\n}\r\n\r\n/**\r\n * 删除信息发布草稿\r\n * @param {Number} draftId 草稿ID\r\n * @returns {Boolean} 是否删除成功\r\n */\r\nexport function deleteInfoDraft(draftId) {\r\n  try {\r\n    let draftList = getInfoDraftList();\r\n    draftList = draftList.filter(item => item.id !== draftId);\r\n    setStorage(STORAGE_KEYS.INFO_DRAFT, draftList);\r\n    return true;\r\n  } catch (e) {\r\n    console.error('删除信息发布草稿失败', e);\r\n    return false;\r\n  }\r\n}\r\n\r\n/**\r\n * 获取所有草稿列表（包括闲置和信息）\r\n * @returns {Array} 草稿列表\r\n */\r\nexport function getAllDraftList() {\r\n  const idleDrafts = getIdleDraftList();\r\n  const infoDrafts = getInfoDraftList();\r\n  \r\n  // 合并两个列表并按时间排序\r\n  return [...idleDrafts, ...infoDrafts].sort((a, b) => {\r\n    return new Date(b.updateTime) - new Date(a.updateTime);\r\n  });\r\n}\r\n\r\n/**\r\n * 获取闲置物品草稿列表（别名，为兼容性）\r\n * @returns {Array} 草稿列表\r\n */\r\nexport function getIdleDrafts() {\r\n  return getIdleDraftList();\r\n}\r\n\r\n/**\r\n * 获取信息发布草稿列表（别名，为兼容性）\r\n * @returns {Array} 草稿列表\r\n */\r\nexport function getInfoDrafts() {\r\n  return getInfoDraftList();\r\n} "],"names":["uni","STORAGE_KEYS"],"mappings":"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"}