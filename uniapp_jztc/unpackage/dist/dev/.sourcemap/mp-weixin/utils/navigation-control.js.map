{"version":3,"file":"navigation-control.js","sources":["utils/navigation-control.js"],"sourcesContent":["/**\r\n * 导航控制工具\r\n * 用于管理页面导航和相关资源控制\r\n */\r\nimport messagePollingService from './message-polling.js';\r\n\r\n// 底部导航页面路径列表\r\nconst tabBarPages = [\r\n  '/pages/index/index',\r\n  '/pages/community/index',\r\n  '/pages/publish/index',\r\n  '/pages/message/index',\r\n  '/pages/my/index'\r\n];\r\n\r\n/**\r\n * 检查页面是否为底部导航页面\r\n * @param {String} pagePath - 页面路径\r\n * @returns {Boolean} 是否为底部导航页面\r\n */\r\nfunction isTabBarPage(pagePath) {\r\n  // 去掉可能存在的参数部分\r\n  const path = pagePath.split('?')[0];\r\n  return tabBarPages.includes(path);\r\n}\r\n\r\n/**\r\n * 页面跳转前处理\r\n * @param {String} url - 目标页面URL\r\n */\r\nfunction beforeNavigateTo(url) {\r\n  // 提取页面路径\r\n  const pagePath = url.split('?')[0];\r\n  \r\n  // 设置当前页面路径\r\n  messagePollingService.setCurrentPage(pagePath);\r\n  \r\n  // 如果将要跳转到非底部导航页面，暂停轮询\r\n  if (!isTabBarPage(pagePath)) {\r\n    messagePollingService.pausePollingGlobally();\r\n    console.log('导航到非底部导航页面，暂停轮询:', pagePath);\r\n  }\r\n}\r\n\r\n/**\r\n * 页面返回前处理\r\n * @param {String} currentPage - 当前页面路径\r\n * @param {String} targetPage - 返回目标页面路径\r\n */\r\nfunction beforeNavigateBack(currentPage, targetPage) {\r\n  // 设置当前页面将要变为的目标页面\r\n  messagePollingService.setCurrentPage(targetPage);\r\n  \r\n  // 如果当前是非底部导航页面，要返回到底部导航页面，恢复轮询\r\n  if (!isTabBarPage(currentPage) && isTabBarPage(targetPage)) {\r\n    messagePollingService.resumePollingGlobally();\r\n    console.log('返回到底部导航页面，恢复轮询:', targetPage);\r\n  }\r\n}\r\n\r\n/**\r\n * 初始化导航拦截器\r\n * 拦截uni.navigateTo等方法，添加资源控制\r\n */\r\nfunction initNavigationInterceptors() {\r\n  // 保存原始方法\r\n  const originalNavigateTo = uni.navigateTo;\r\n  const originalRedirectTo = uni.redirectTo;\r\n  const originalReLaunch = uni.reLaunch;\r\n  const originalSwitchTab = uni.switchTab;\r\n  const originalNavigateBack = uni.navigateBack;\r\n  \r\n  // 重写navigateTo\r\n  uni.navigateTo = function(options) {\r\n    const url = options.url;\r\n    beforeNavigateTo(url);\r\n    return originalNavigateTo.call(this, options);\r\n  };\r\n  \r\n  // 重写redirectTo\r\n  uni.redirectTo = function(options) {\r\n    const url = options.url;\r\n    beforeNavigateTo(url);\r\n    return originalRedirectTo.call(this, options);\r\n  };\r\n  \r\n  // 重写reLaunch\r\n  uni.reLaunch = function(options) {\r\n    const url = options.url;\r\n    // reLaunch会关闭所有页面，无论目标是什么，都优先暂停轮询\r\n    messagePollingService.pausePollingGlobally();\r\n    \r\n    // 如果目标是底部导航页面，则在页面加载后恢复轮询\r\n    if (isTabBarPage(url.split('?')[0])) {\r\n      setTimeout(() => {\r\n        messagePollingService.resumePollingGlobally();\r\n      }, 100);\r\n    }\r\n    \r\n    return originalReLaunch.call(this, options);\r\n  };\r\n  \r\n  // 重写switchTab\r\n  uni.switchTab = function(options) {\r\n    const url = options.url;\r\n    // switchTab只能切换到底部导航页面，总是恢复轮询\r\n    setTimeout(() => {\r\n      messagePollingService.resumePollingGlobally();\r\n    }, 100);\r\n    \r\n    return originalSwitchTab.call(this, options);\r\n  };\r\n  \r\n  // 重写navigateBack\r\n  uni.navigateBack = function(options) {\r\n    // navigateBack比较特殊，需要获取当前页面和返回的目标页面\r\n    // 由于无法直接知道返回到哪个页面，我们在App.vue中通过getCurrentPages()处理\r\n    return originalNavigateBack.call(this, options);\r\n  };\r\n  \r\n  console.log('导航拦截器初始化完成');\r\n}\r\n\r\nexport default {\r\n  isTabBarPage,\r\n  beforeNavigateTo,\r\n  beforeNavigateBack,\r\n  initNavigationInterceptors\r\n}; "],"names":["messagePollingService","uni"],"mappings":";;;AAOA,MAAM,cAAc;AAAA,EAClB;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACF;AAOA,SAAS,aAAa,UAAU;AAE9B,QAAM,OAAO,SAAS,MAAM,GAAG,EAAE,CAAC;AAClC,SAAO,YAAY,SAAS,IAAI;AAClC;AAMA,SAAS,iBAAiB,KAAK;AAE7B,QAAM,WAAW,IAAI,MAAM,GAAG,EAAE,CAAC;AAGjCA,6CAAsB,eAAe,QAAQ;AAG7C,MAAI,CAAC,aAAa,QAAQ,GAAG;AAC3BA,yBAAqB,sBAAC,qBAAoB;AAC1CC,kBAAA,MAAA,MAAA,OAAA,qCAAY,oBAAoB,QAAQ;AAAA,EACzC;AACH;AAOA,SAAS,mBAAmB,aAAa,YAAY;AAEnDD,6CAAsB,eAAe,UAAU;AAG/C,MAAI,CAAC,aAAa,WAAW,KAAK,aAAa,UAAU,GAAG;AAC1DA,yBAAqB,sBAAC,sBAAqB;AAC3CC,kBAAA,MAAA,MAAA,OAAA,qCAAY,mBAAmB,UAAU;AAAA,EAC1C;AACH;AAMA,SAAS,6BAA6B;AAEpC,QAAM,qBAAqBA,cAAG,MAAC;AAC/B,QAAM,qBAAqBA,cAAG,MAAC;AAC/B,QAAM,mBAAmBA,cAAG,MAAC;AAC7B,QAAM,oBAAoBA,cAAG,MAAC;AAC9B,QAAM,uBAAuBA,cAAG,MAAC;AAGjCA,sBAAI,aAAa,SAAS,SAAS;AACjC,UAAM,MAAM,QAAQ;AACpB,qBAAiB,GAAG;AACpB,WAAO,mBAAmB,KAAK,MAAM,OAAO;AAAA,EAChD;AAGEA,sBAAI,aAAa,SAAS,SAAS;AACjC,UAAM,MAAM,QAAQ;AACpB,qBAAiB,GAAG;AACpB,WAAO,mBAAmB,KAAK,MAAM,OAAO;AAAA,EAChD;AAGEA,sBAAI,WAAW,SAAS,SAAS;AAC/B,UAAM,MAAM,QAAQ;AAEpBD,yBAAqB,sBAAC,qBAAoB;AAG1C,QAAI,aAAa,IAAI,MAAM,GAAG,EAAE,CAAC,CAAC,GAAG;AACnC,iBAAW,MAAM;AACfA,6BAAqB,sBAAC,sBAAqB;AAAA,MAC5C,GAAE,GAAG;AAAA,IACP;AAED,WAAO,iBAAiB,KAAK,MAAM,OAAO;AAAA,EAC9C;AAGEC,sBAAI,YAAY,SAAS,SAAS;AACpB,YAAQ;AAEpB,eAAW,MAAM;AACfD,2BAAqB,sBAAC,sBAAqB;AAAA,IAC5C,GAAE,GAAG;AAEN,WAAO,kBAAkB,KAAK,MAAM,OAAO;AAAA,EAC/C;AAGEC,sBAAI,eAAe,SAAS,SAAS;AAGnC,WAAO,qBAAqB,KAAK,MAAM,OAAO;AAAA,EAClD;AAEEA,gBAAAA,MAAY,MAAA,OAAA,sCAAA,YAAY;AAC1B;AAEA,MAAe,oBAAA;AAAA,EACb;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACF;;"}