{"version":3,"file":"index.js","sources":["components/content-list/index.vue","D:/HBuilderX/plugins/uniapp-cli-vite/uniComponent:/RTovTXl4aWFuZ211L2Nob25nZ291L2p1eml0b25nY2hlbmcvY29tcG9uZW50cy9jb250ZW50LWxpc3QvaW5kZXgudnVl"],"sourcesContent":["<template>\r\n\t<view class=\"content-list\">\r\n\t\t<!-- 加载状态 -->\r\n\t\t<view class=\"loading-container\" v-if=\"loading && contentList.length === 0\">\r\n\t\t\t<view class=\"loading-indicator\"></view>\r\n\t\t\t<text class=\"loading-text\">加载中...</text>\r\n\t\t</view>\r\n\t\t\r\n\t\t<!-- 内容列表 -->\r\n\t\t<view \r\n\t\t\tclass=\"content-item card\" \r\n\t\t\tv-for=\"(item, index) in contentList\" \r\n\t\t\t:key=\"index\"\r\n\t\t\t@tap=\"handleItemClick(item)\"\r\n\t\t>\r\n\t\t\t<!-- 左侧内容区域 -->\r\n\t\t\t<view :class=\"['content-left', { 'full-width': !item.image }]\">\r\n\t\t\t\t<view class=\"tag-row\">\r\n\t\t\t\t\t<!-- 置顶标签 -->\r\n\t\t\t\t\t<view class=\"tag top-tag\" v-if=\"item.isTop\">置顶</view>\r\n\t\t\t\t\t<!-- 类目标签 -->\r\n\t\t\t\t\t<view class=\"tag category-tag\">{{ item.category }}</view>\r\n\t\t\t\t</view>\r\n\t\t\t\t\r\n\t\t\t\t<!-- 标题 -->\r\n\t\t\t\t<view class=\"content-title\">{{ item.title }}</view>\r\n\t\t\t\t\r\n\t\t\t\t<!-- 底部信息 -->\r\n\t\t\t\t<view class=\"content-footer\">\r\n\t\t\t\t\t<text class=\"publisher\">{{ item.publisher }}</text>\r\n\t\t\t\t\t<text class=\"publish-time\">{{ item.publishTimeFormatted }}</text>\r\n\t\t\t\t</view>\r\n\t\t\t</view>\r\n\t\t\t\r\n\t\t\t<!-- 右侧图片区域 -->\r\n\t\t\t<view class=\"content-right\" v-if=\"item.image\">\r\n\t\t\t\t<image :src=\"item.image\" mode=\"aspectFill\" class=\"content-image\"></image>\r\n\t\t\t</view>\r\n\t\t</view>\r\n\t\t\r\n\t\t<!-- 加载更多提示 -->\r\n\t\t<view class=\"load-more\" v-if=\"contentList.length > 0\">\r\n\t\t\t<text class=\"load-more-text\" v-if=\"hasMore && !loading\">上拉加载更多</text>\r\n\t\t\t<text class=\"load-more-text\" v-if=\"loading && contentList.length > 0\">加载中...</text>\r\n\t\t\t<text class=\"load-more-text\" v-if=\"!hasMore && contentList.length > 0\">没有更多数据了</text>\r\n\t\t</view>\r\n\t\t\r\n\t\t<!-- 无数据提示 -->\r\n\t\t<view class=\"empty-container\" v-if=\"!loading && contentList.length === 0\">\r\n\t\t\t<image src=\"/static/images/empty.png\" mode=\"aspectFit\" class=\"empty-image\"></image>\r\n\t\t\t<text class=\"empty-text\">暂无内容</text>\r\n\t\t</view>\r\n\t</view>\r\n</template>\r\n\r\n<script>\r\n\timport { getRegionContentList } from '@/apis/content.js'\r\n\timport { formatTimeAgo, getTimestamp } from '@/utils/date.js'\r\n\t\r\n\texport default {\r\n\t\tname: 'ContentList',\r\n\t\tprops: {\r\n\t\t\t// 可选参数，允许从父组件传入\r\n\t\t\tcategoryId: {\r\n\t\t\t\ttype: [Number, String],\r\n\t\t\t\tdefault: ''\r\n\t\t\t}\r\n\t\t},\r\n\t\tdata() {\r\n\t\t\treturn {\r\n\t\t\t\tcontentList: [],\r\n\t\t\t\tloading: false,\r\n\t\t\t\thasMore: true,\r\n\t\t\t\tpage: 1,\r\n\t\t\t\tpageSize: 10,\r\n\t\t\t\tregionId: 0, // 当前区域ID\r\n\t\t\t\tcurrentCategory: '', // 当前分类\r\n\t\t\t\tisInitialized: false // 添加初始化标志\r\n\t\t\t}\r\n\t\t},\r\n\t\tcreated() {\r\n\t\t\t// 从本地存储获取当前的位置ID并初始化\r\n\t\t\tconst currentLocationId = uni.getStorageSync('currentLocationId') || 0;\r\n\t\t\tif (currentLocationId) {\r\n\t\t\t\tthis.regionId = currentLocationId;\r\n\t\t\t\tconsole.log('组件创建时，从本地存储初始化区域ID:', this.regionId);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t// 监听页面显示，更新区域ID\r\n\t\t\tuni.$on('locationChanged', this.handleLocationChanged);\r\n\t\t\tconsole.log('已注册locationChanged事件监听');\r\n\t\t},\r\n\t\tmounted() {\r\n\t\t\t// 组件挂载后初始化数据\r\n\t\t\tthis.$nextTick(() => {\r\n\t\t\t\tthis.init();\r\n\t\t\t});\r\n\t\t},\r\n\t\tbeforeDestroy() {\r\n\t\t\t// 移除事件监听\r\n\t\t\tuni.$off('locationChanged', this.handleLocationChanged);\r\n\t\t},\r\n\t\tmethods: {\r\n\t\t\t// 初始化方法，用于组件挂载后或页面显示时调用\r\n\t\t\tinit() {\r\n\t\t\t\t// 避免重复初始化\r\n\t\t\t\tif (this.isInitialized && this.contentList.length > 0) {\r\n\t\t\t\t\tconsole.log('内容列表已初始化，跳过重复初始化');\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t// 从本地存储获取当前的位置ID\r\n\t\t\t\tconst currentLocationId = uni.getStorageSync('currentLocationId') || 0;\r\n\t\t\t\t\r\n\t\t\t\t// 如果没有regionId但有本地存储的值，则使用本地存储的值\r\n\t\t\t\tif ((!this.regionId || this.regionId === 0) && currentLocationId) {\r\n\t\t\t\t\tthis.regionId = currentLocationId;\r\n\t\t\t\t\tconsole.log('初始化时，从本地存储更新区域ID:', this.regionId);\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t// 在有regionId的情况下加载数据\r\n\t\t\t\tif (this.regionId && this.regionId !== 0) {\r\n\t\t\t\t\tconsole.log('初始化时，开始加载内容列表数据...');\r\n\t\t\t\t\tthis.resetAndLoad();\r\n\t\t\t\t\t// 标记为已初始化\r\n\t\t\t\t\tthis.isInitialized = true;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tconsole.log('初始化时，未找到有效的区域ID');\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t// 格式化发布时间\r\n\t\t\tformatPublishTime(time) {\r\n\t\t\t\treturn formatTimeAgo(time);\r\n\t\t\t},\r\n\t\t\t\r\n\t\t\thandleItemClick(item) {\r\n\t\t\t\t// 跳转到详情页，并传递必要的参数\r\n\t\t\t\tuni.navigateTo({\r\n\t\t\t\t\turl: `/pages/content/detail?id=${item.id}&category=${item.category}`,\r\n\t\t\t\t\tsuccess: () => {\r\n\t\t\t\t\t\tconsole.log('跳转到详情页:', item)\r\n\t\t\t\t\t},\r\n\t\t\t\t\tfail: (err) => {\r\n\t\t\t\t\t\tconsole.error('跳转失败:', err)\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t},\r\n\t\t\t\r\n\t\t\t// 处理分类切换\r\n\t\t\thandleCategoryChange(categoryId) {\r\n\t\t\t\tthis.currentCategory = categoryId;\r\n\t\t\t\t// 重置数据并重新加载\r\n\t\t\t\tthis.resetAndLoad();\r\n\t\t\t},\r\n\t\t\t\r\n\t\t\t// 处理位置变更\r\n\t\t\thandleLocationChanged(data) {\r\n\t\t\t\tconsole.log('位置变更事件触发，接收到的regionId:', data.regionId);\r\n\t\t\t\tconst newRegionId = data.regionId || 0;\r\n\t\t\t\t\r\n\t\t\t\t// 确保regionId有效\r\n\t\t\t\tif (!newRegionId) {\r\n\t\t\t\t\tconsole.error('接收到无效的regionId:', newRegionId);\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t// 更新当前地区ID并输出日志\r\n\t\t\t\tif (this.regionId !== newRegionId) {\r\n\t\t\t\t\tconsole.log('地区ID已更新:', this.regionId, '->', newRegionId);\r\n\t\t\t\t\tthis.regionId = newRegionId;\r\n\t\t\t\t\t// 重置数据并重新加载\r\n\t\t\t\t\tthis.resetAndLoad();\r\n\t\t\t\t} else {\r\n\t\t\t\t\tconsole.log('地区ID未变化，保持当前值:', this.regionId);\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t\r\n\t\t\t// 重置数据并重新加载\r\n\t\t\tresetAndLoad() {\r\n\t\t\t\tconsole.log('重置内容列表，当前区域ID:', this.regionId);\r\n\t\t\t\tthis.page = 1;\r\n\t\t\t\tthis.contentList = [];\r\n\t\t\t\tthis.hasMore = true;\r\n\t\t\t\tthis.loadData();\r\n\t\t\t},\r\n\t\t\t\r\n\t\t\t// 加载更多数据\r\n\t\t\tloadMore() {\r\n\t\t\t\tif (this.loading || !this.hasMore) return;\r\n\t\t\t\tthis.page++;\r\n\t\t\t\tthis.loadData();\r\n\t\t\t},\r\n\t\t\t\r\n\t\t\t// 加载数据\r\n\t\t\tasync loadData() {\r\n\t\t\t\tif (this.loading) return;\r\n\t\t\t\t\r\n\t\t\t\ttry {\r\n\t\t\t\t\tthis.loading = true;\r\n\t\t\t\t\t\r\n\t\t\t\t\t// 从本地存储获取当前的位置ID\r\n\t\t\t\t\tconst currentLocationId = uni.getStorageSync('currentLocationId') || 0;\r\n\t\t\t\t\tconsole.log('从本地存储获取的区域ID:', currentLocationId);\r\n\t\t\t\t\t\r\n\t\t\t\t\t// 更新当前地区ID\r\n\t\t\t\t\tif (!this.regionId && currentLocationId) {\r\n\t\t\t\t\t\tconsole.log('使用本地存储区域ID更新组件regionId:', currentLocationId);\r\n\t\t\t\t\t\tthis.regionId = currentLocationId;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\t// 确保regionId有效，如果无效则提示用户选择地区\r\n\t\t\t\t\tif (!this.regionId) {\r\n\t\t\t\t\t\tuni.showToast({\r\n\t\t\t\t\t\t\ttitle: '请先选择地区',\r\n\t\t\t\t\t\t\ticon: 'none'\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\tthrow new Error('未选择地区');\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\t// 构建参数\r\n\t\t\t\t\tconst params = {\r\n\t\t\t\t\t\tregionId: this.regionId,\r\n\t\t\t\t\t\tpage: this.page,\r\n\t\t\t\t\t\tpageSize: this.pageSize\r\n\t\t\t\t\t};\r\n\t\t\t\t\t\r\n\t\t\t\t\t// 如果有分类ID，添加到请求参数\r\n\t\t\t\t\tif (this.currentCategory) {\r\n\t\t\t\t\t\tparams.category = this.currentCategory;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tconsole.log('加载内容列表，参数:', params);\r\n\t\t\t\t\t\r\n\t\t\t\t\t// 调用API获取数据\r\n\t\t\t\t\tconst result = await getRegionContentList(params);\r\n\t\t\t\t\t\r\n\t\t\t\t\tif (result.code === 0 && result.data) {\r\n\t\t\t\t\t\t// 获取数据成功\r\n\t\t\t\t\t\tconst { list = [], total = 0 } = result.data;\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t// 处理列表数据，格式化发布时间并进行排序\r\n\t\t\t\t\t\tlet formattedList = list.map(item => {\r\n\t\t\t\t\t\t\t// 确保item是一个新对象，避免修改原始数据\r\n\t\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t\t...item,\r\n\t\t\t\t\t\t\t\t// 格式化发布时间为\"多久前\"的格式\r\n\t\t\t\t\t\t\t\tpublishTimeFormatted: this.formatPublishTime(item.publishTime)\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t// 对列表进行排序，置顶内容排在前面\r\n\t\t\t\t\t\tformattedList.sort((a, b) => {\r\n\t\t\t\t\t\t\t// 先按照isTop排序（置顶在前）\r\n\t\t\t\t\t\t\tif (a.isTop && !b.isTop) return -1;\r\n\t\t\t\t\t\t\tif (!a.isTop && b.isTop) return 1;\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t// 如果都是置顶或都不是置顶，则按照发布时间排序（新的在前）\r\n\t\t\t\t\t\t\tlet timeA = 0, timeB = 0;\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t// 预先处理日期格式，避免在排序时出错\r\n\t\t\t\t\t\t\ttry {\r\n\t\t\t\t\t\t\t\t// 如果是 \"yyyy-MM-dd HH:mm:ss\" 格式，手动转换为ISO格式\r\n\t\t\t\t\t\t\t\tif (a.publishTime && typeof a.publishTime === 'string' && a.publishTime.includes(' ')) {\r\n\t\t\t\t\t\t\t\t\tconst aDateParts = a.publishTime.split(' ')[0].split('-');\r\n\t\t\t\t\t\t\t\t\tconst aTimeParts = a.publishTime.split(' ')[1].split(':');\r\n\t\t\t\t\t\t\t\t\t// 使用标准Date构造函数创建日期对象\r\n\t\t\t\t\t\t\t\t\tconst aDate = new Date(\r\n\t\t\t\t\t\t\t\t\t\tparseInt(aDateParts[0]), // 年\r\n\t\t\t\t\t\t\t\t\t\tparseInt(aDateParts[1]) - 1, // 月(0-11)\r\n\t\t\t\t\t\t\t\t\t\tparseInt(aDateParts[2]), // 日\r\n\t\t\t\t\t\t\t\t\t\tparseInt(aTimeParts[0]), // 时\r\n\t\t\t\t\t\t\t\t\t\tparseInt(aTimeParts[1]), // 分\r\n\t\t\t\t\t\t\t\t\t\tparseInt(aTimeParts[2]) // 秒\r\n\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t\ttimeA = aDate.getTime();\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\ttimeA = getTimestamp(a.publishTime);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\tif (b.publishTime && typeof b.publishTime === 'string' && b.publishTime.includes(' ')) {\r\n\t\t\t\t\t\t\t\t\tconst bDateParts = b.publishTime.split(' ')[0].split('-');\r\n\t\t\t\t\t\t\t\t\tconst bTimeParts = b.publishTime.split(' ')[1].split(':');\r\n\t\t\t\t\t\t\t\t\t// 使用标准Date构造函数创建日期对象\r\n\t\t\t\t\t\t\t\t\tconst bDate = new Date(\r\n\t\t\t\t\t\t\t\t\t\tparseInt(bDateParts[0]), // 年\r\n\t\t\t\t\t\t\t\t\t\tparseInt(bDateParts[1]) - 1, // 月(0-11)\r\n\t\t\t\t\t\t\t\t\t\tparseInt(bDateParts[2]), // 日\r\n\t\t\t\t\t\t\t\t\t\tparseInt(bTimeParts[0]), // 时\r\n\t\t\t\t\t\t\t\t\t\tparseInt(bTimeParts[1]), // 分\r\n\t\t\t\t\t\t\t\t\t\tparseInt(bTimeParts[2]) // 秒\r\n\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t\ttimeB = bDate.getTime();\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\ttimeB = getTimestamp(b.publishTime);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t} catch (e) {\r\n\t\t\t\t\t\t\t\tconsole.error('日期解析错误:', e, a.publishTime, b.publishTime);\r\n\t\t\t\t\t\t\t\t// 发生错误时使用当前时间作为默认值\r\n\t\t\t\t\t\t\t\ttimeA = timeB = Date.now();\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\treturn timeB - timeA; // 降序排列，最新的在前面\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t// 追加数据到列表\r\n\t\t\t\t\t\t// 第一页时直接替换，加载更多时追加\r\n\t\t\t\t\t\tif (this.page === 1) {\r\n\t\t\t\t\t\t\tthis.contentList = formattedList;\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tthis.contentList = [...this.contentList, ...formattedList];\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t// 判断是否还有更多数据\r\n\t\t\t\t\t\tthis.hasMore = this.contentList.length < total;\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tconsole.log(`加载了${list.length}条数据，总共${total}条，使用的区域ID:${this.regionId}`);\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t// 通知父组件刷新完成\r\n\t\t\t\t\t\tthis.$parent && this.$parent.refreshing === true && this.notifyRefreshComplete();\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthrow new Error(result.message || '获取内容列表失败');\r\n\t\t\t\t\t}\r\n\t\t\t\t} catch (error) {\r\n\t\t\t\t\tconsole.error('加载内容列表失败:', error);\r\n\t\t\t\t\tuni.showToast({\r\n\t\t\t\t\t\ttitle: '加载失败，请重试',\r\n\t\t\t\t\t\ticon: 'none',\r\n\t\t\t\t\t\tduration: 2000\r\n\t\t\t\t\t});\r\n\t\t\t\t} finally {\r\n\t\t\t\t\tthis.loading = false;\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t\r\n\t\t\t// 通知父组件刷新完成\r\n\t\t\tnotifyRefreshComplete() {\r\n\t\t\t\t// 发送事件给父组件\r\n\t\t\t\tthis.$emit('refreshComplete');\r\n\t\t\t\t\r\n\t\t\t\t// 直接修改父组件的刷新状态（如果父组件是index页面）\r\n\t\t\t\tif (this.$parent && this.$parent.refreshing === true) {\r\n\t\t\t\t\tthis.$parent.refreshing = false;\r\n\t\t\t\t\tconsole.log('内容加载完成，关闭刷新状态');\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t}\r\n\t}\r\n</script>\r\n\r\n<style>\r\n\t.content-list {\r\n\t\tpadding: 20rpx;\r\n\t\tbackground-color: #ffffff;\r\n\t\tpadding-bottom: 120rpx;\r\n\t\tmin-height: 300rpx;\r\n\t}\r\n\t\r\n\t/* 卡片样式 */\r\n\t.content-item.card {\r\n\t\tdisplay: flex;\r\n\t\tpadding: 24rpx;\r\n\t\tbackground-color: #ffffff;\r\n\t\tborder-radius: 16rpx;\r\n\t\tmargin-bottom: 20rpx;\r\n\t\tbox-shadow: 0 2rpx 16rpx rgba(0, 0, 0, 0.06);\r\n\t}\r\n\t\r\n\t.content-left {\r\n\t\tflex: 1;\r\n\t\tmargin-right: 20rpx;\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t\tjustify-content: space-between;\r\n\t}\r\n\t\r\n\t.content-left.full-width {\r\n\t\tmargin-right: 0;\r\n\t}\r\n\t\r\n\t.tag-row {\r\n\t\tdisplay: flex;\r\n\t\tgap: 12rpx;\r\n\t\tmargin-bottom: 12rpx;\r\n\t}\r\n\t\r\n\t.tag {\r\n\t\tpadding: 4rpx 12rpx;\r\n\t\tborder-radius: 4rpx;\r\n\t\tfont-size: 22rpx;\r\n\t}\r\n\t\r\n\t.top-tag {\r\n\t\tbackground-color: #fc3e2b;\r\n\t\tcolor: #ffffff;\r\n\t}\r\n\t\r\n\t.category-tag {\r\n\t\tbackground-color: #f5f5f5;\r\n\t\tcolor: #666666;\r\n\t}\r\n\t\r\n\t.content-title {\r\n\t\tfont-size: 32rpx;\r\n\t\tfont-weight: 600;\r\n\t\tcolor: #333333;\r\n\t\tline-height: 1.4;\r\n\t\tmargin-bottom: 12rpx;\r\n\t}\r\n\t\r\n\t.content-footer {\r\n\t\tdisplay: flex;\r\n\t\tjustify-content: space-between;\r\n\t\talign-items: center;\r\n\t\tfont-size: 24rpx;\r\n\t\tcolor: #999999;\r\n\t\tmargin-top: auto; /* 将底部信息推到底部 */\r\n\t}\r\n\t\r\n\t.content-right {\r\n\t\twidth: 160rpx;\r\n\t\theight: 160rpx;\r\n\t\tflex-shrink: 0;\r\n\t}\r\n\t\r\n\t.content-image {\r\n\t\twidth: 100%;\r\n\t\theight: 100%;\r\n\t\tborder-radius: 12rpx; /* 增加图片圆角 */\r\n\t}\r\n\t\r\n\t/* 加载中样式 */\r\n\t.loading-container {\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t\talign-items: center;\r\n\t\tjustify-content: center;\r\n\t\theight: 300rpx;\r\n\t}\r\n\t\r\n\t.loading-indicator {\r\n\t\twidth: 40rpx;\r\n\t\theight: 40rpx;\r\n\t\tborder: 4rpx solid #f0f0f0;\r\n\t\tborder-radius: 50%;\r\n\t\tborder-top-color: #fc3e2b;\r\n\t\tanimation: spin 1s linear infinite;\r\n\t\tmargin-bottom: 20rpx;\r\n\t}\r\n\t\r\n\t@keyframes spin {\r\n\t\t0% {\r\n\t\t\ttransform: rotate(0deg);\r\n\t\t}\r\n\t\t100% {\r\n\t\t\ttransform: rotate(360deg);\r\n\t\t}\r\n\t}\r\n\t\r\n\t.loading-text {\r\n\t\tfont-size: 26rpx;\r\n\t\tcolor: #999999;\r\n\t}\r\n\t\r\n\t/* 加载更多样式 */\r\n\t.load-more {\r\n\t\ttext-align: center;\r\n\t\tpadding: 30rpx 0;\r\n\t}\r\n\t\r\n\t.load-more-text {\r\n\t\tfont-size: 26rpx;\r\n\t\tcolor: #999999;\r\n\t}\r\n\t\r\n\t/* 空数据样式 */\r\n\t.empty-container {\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t\talign-items: center;\r\n\t\tjustify-content: center;\r\n\t\tpadding: 100rpx 0;\r\n\t}\r\n\t\r\n\t.empty-image {\r\n\t\twidth: 200rpx;\r\n\t\theight: 200rpx;\r\n\t\tmargin-bottom: 30rpx;\r\n\t}\r\n\t\r\n\t.empty-text {\r\n\t\tfont-size: 28rpx;\r\n\t\tcolor: #999999;\r\n\t}\r\n</style> ","import Component from 'E:/Myxiangmu/chonggou/juzitongcheng/components/content-list/index.vue'\nwx.createComponent(Component)"],"names":["uni","formatTimeAgo","getRegionContentList","getTimestamp"],"mappings":"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"}