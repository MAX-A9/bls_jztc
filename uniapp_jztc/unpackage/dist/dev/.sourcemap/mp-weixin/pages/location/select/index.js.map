{"version":3,"file":"index.js","sources":["pages/location/select/index.vue","D:/HBuilderX/plugins/uniapp-cli-vite/uniPage:/cGFnZXMvbG9jYXRpb24vc2VsZWN0L2luZGV4LnZ1ZQ"],"sourcesContent":["<template>\n\t<view class=\"container\">\n\t\t<!-- 顶部搜索区域 -->\n\t\t<view class=\"search-header\">\n\t\t\t<view class=\"search-box\">\n\t\t\t\t<uni-icons type=\"search\" size=\"16\" color=\"#666666\"></uni-icons>\n\t\t\t\t<input \n\t\t\t\t\ttype=\"text\" \n\t\t\t\t\tv-model=\"searchKeyword\"\n\t\t\t\t\tplaceholder=\"搜索城市\" \n\t\t\t\t\tplaceholder-class=\"placeholder\"\n\t\t\t\t\tconfirm-type=\"search\"\n\t\t\t\t\t@input=\"handleSearch\"\n\t\t\t\t/>\n\t\t\t</view>\n\t\t</view>\n\t\t\n\t\t<scroll-view \n\t\t\tclass=\"content-scroll\" \n\t\t\tscroll-y \n\t\t\t:show-scrollbar=\"false\" \n\t\t\t:enhanced=\"true\"\n\t\t\t:scroll-top=\"scrollTop\"\n\t\t>\n\t\t\t<!-- 当前定位 -->\n\t\t\t<view class=\"location-section\">\n\t\t\t\t<view class=\"section-title\">当前地区</view>\n\t\t\t\t<view class=\"current-location\" @tap=\"selectLocation(currentLocation)\">\n\t\t\t\t\t<view class=\"location-icon\">\n\t\t\t\t\t\t<uni-icons type=\"location\" size=\"18\" color=\"#fc3e2b\"></uni-icons>\n\t\t\t\t\t</view>\n\t\t\t\t\t<view class=\"location-info\">\n\t\t\t\t\t\t<text class=\"location-name\">{{ currentLocation }}</text>\n\t\t\t\t\t\t<text class=\"location-status\">当前地区</text>\n\t\t\t\t\t</view>\n\t\t\t\t</view>\n\t\t\t</view>\n\t\t\t\n\t\t\t<!-- 最近访问 -->\n\t\t\t<view class=\"location-section\" v-if=\"recentLocations.length > 0\">\n\t\t\t\t<view class=\"section-title\">最近访问</view>\n\t\t\t\t<view class=\"location-list\">\n\t\t\t\t\t<view \n\t\t\t\t\t\tclass=\"location-item\" \n\t\t\t\t\t\tv-for=\"(item, index) in recentLocations\" \n\t\t\t\t\t\t:key=\"index\"\n\t\t\t\t\t\t@tap=\"selectLocation(item)\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<text>{{ item }}</text>\n\t\t\t\t\t</view>\n\t\t\t\t</view>\n\t\t\t</view>\n\t\t\t\n\t\t\t<!-- 热门城市 -->\n\t\t\t<view class=\"location-section\">\n\t\t\t\t<view class=\"section-title\">热门城市</view>\n\t\t\t\t<view class=\"location-grid\">\n\t\t\t\t\t<view \n\t\t\t\t\t\tclass=\"grid-item\" \n\t\t\t\t\t\tv-for=\"item in hotRegions\" \n\t\t\t\t\t\t:key=\"item.id\"\n\t\t\t\t\t\t@tap=\"selectLocation(item.name)\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<text>{{ item.name }}</text>\n\t\t\t\t\t</view>\n\t\t\t\t</view>\n\t\t\t</view>\n\t\t\t\n\t\t\t<!-- 城市列表 -->\n\t\t\t<view class=\"city-list\">\n\t\t\t\t<view class=\"city-section\" v-for=\"(section, letter) in filteredCityList\" :key=\"letter\">\n\t\t\t\t\t<view class=\"city-letter\" :id=\"'letter-'+letter\">{{ letter }}</view>\n\t\t\t\t\t<view class=\"city-items\">\n\t\t\t\t\t\t<view \n\t\t\t\t\t\t\tclass=\"city-item\" \n\t\t\t\t\t\t\tv-for=\"city in section\" \n\t\t\t\t\t\t\t:key=\"city.id\"\n\t\t\t\t\t\t\t@tap=\"selectLocation(city.name)\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<text>{{ city.name }}</text>\n\t\t\t\t\t\t</view>\n\t\t\t\t\t</view>\n\t\t\t\t</view>\n\t\t\t</view>\n\t\t</scroll-view>\n\t\t\n\t\t<!-- 字母索引 -->\n\t\t<view class=\"letter-index\" \n\t\t\t@touchstart=\"handleTouchStart\" \n\t\t\t@touchmove=\"handleTouchMove\" \n\t\t\t@touchend=\"handleTouchEnd\"\n\t\t>\n\t\t\t<view \n\t\t\t\tclass=\"letter-item\" \n\t\t\t\tv-for=\"letter in indexLetters\" \n\t\t\t\t:key=\"letter\"\n\t\t\t\t:data-letter=\"letter\"\n\t\t\t\t@click=\"scrollToLetter(letter)\"\n\t\t\t>\n\t\t\t\t<text>{{ letter }}</text>\n\t\t\t</view>\n\t\t</view>\n\t\t\n\t\t<!-- 字母提示 -->\n\t\t<view class=\"letter-indicator\" v-if=\"showLetterIndicator\">\n\t\t\t<text>{{ currentLetter }}</text>\n\t\t</view>\n\t\t\n\t\t<!-- 加载提示 -->\n\t\t<view v-if=\"loading\" class=\"loading-tip\">\n\t\t\t<view class=\"loading-icon\"></view>\n\t\t\t<text>加载中...</text>\n\t\t</view>\n\t\t\n\t\t<!-- 错误提示 -->\n\t\t<view v-if=\"error\" class=\"error-tip\">\n\t\t\t<text>{{ error }}</text>\n\t\t\t<button class=\"retry-btn\" @tap=\"fetchRegionList\">重新加载</button>\n\t\t</view>\n\t</view>\n</template>\n\n<script>\n\timport { mapState, mapGetters, mapActions } from 'vuex';\n\timport { getStringFirstLetter, getPinyin } from '@/utils/pinyin.js';\n\t\n\texport default {\n\t\tdata() {\n\t\t\treturn {\n\t\t\t\tcurrentLocation: '',\n\t\t\t\tsearchKeyword: '',\n\t\t\t\trecentLocations: [],\n\t\t\t\tscrollTop: 0,\n\t\t\t\tletterPositions: {},\n\t\t\t\tshowLetterIndicator: false,\n\t\t\t\tcurrentLetter: '',\n\t\t\t\ttouchStartY: 0,\n\t\t\t\ttouchStartTime: 0,\n\t\t\t\tisTouching: false,\n\t\t\t\tletterIndexRect: null, // 字母索引容器的位置信息\n\t\t\t}\n\t\t},\n\t\tcomputed: {\n\t\t\t...mapState('region', ['regionList', 'loading', 'error']),\n\t\t\t...mapGetters('region', ['hotRegions']),\n\t\t\t\n\t\t\t// 过滤后的城市列表，分组显示\n\t\t\tfilteredCityList() {\n\t\t\t\t// 从Vuex中获取分组后的地区列表\n\t\t\t\tconst groupedList = this.$store.getters['region/groupedRegionList'];\n\t\t\t\t\n\t\t\t\t// 如果有搜索关键词，则过滤\n\t\t\t\tif (!this.searchKeyword) {\n\t\t\t\t\treturn groupedList;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tconst keyword = this.searchKeyword.toLowerCase();\n\t\t\t\tconst result = {};\n\t\t\t\t\n\t\t\t\t// 过滤包含关键词的城市\n\t\t\t\tfor (const letter in groupedList) {\n\t\t\t\t\tconst filteredCities = groupedList[letter].filter(city => {\n\t\t\t\t\t\t// 城市名称包含关键词\n\t\t\t\t\t\tif (city.name.toLowerCase().includes(keyword)) {\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\t// 城市拼音首字母匹配\n\t\t\t\t\t\tif (getStringFirstLetter(city.name).toLowerCase() === keyword.charAt(0).toLowerCase()) {\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\t// 城市全拼包含关键词\n\t\t\t\t\t\tconst fullPinyin = getPinyin(city.name, { separator: '' }).toLowerCase();\n\t\t\t\t\t\tif (fullPinyin.includes(keyword)) {\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\t// 城市拼音首字母缩写包含关键词\n\t\t\t\t\t\tconst pinyinInitials = getPinyin(city.name, { pattern: 'first', separator: '' }).toLowerCase();\n\t\t\t\t\t\tif (pinyinInitials.includes(keyword)) {\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t});\n\t\t\t\t\t\n\t\t\t\t\tif (filteredCities.length > 0) {\n\t\t\t\t\t\tresult[letter] = filteredCities;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\treturn result;\n\t\t\t},\n\t\t\t\n\t\t\t// 索引字母列表\n\t\t\tindexLetters() {\n\t\t\t\treturn Object.keys(this.filteredCityList).sort();\n\t\t\t}\n\t\t},\n\t\tonLoad() {\n\t\t\t// 获取缓存中的当前位置\n\t\t\tconst savedLocation = uni.getStorageSync('currentLocation');\n\t\t\tif (savedLocation) {\n\t\t\t\tthis.currentLocation = savedLocation;\n\t\t\t\tconsole.log('使用已保存的位置:', savedLocation);\n\t\t\t} else {\n\t\t\t\t// 如果没有保存位置，显示加载中状态\n\t\t\t\tthis.currentLocation = '加载中...';\n\t\t\t}\n\t\t\t\n\t\t\t// 获取最近访问的城市\n\t\t\tconst recentLocations = uni.getStorageSync('recentLocations');\n\t\t\tif (recentLocations) {\n\t\t\t\tthis.recentLocations = JSON.parse(recentLocations);\n\t\t\t}\n\t\t\t\n\t\t\t// 加载地区列表数据\n\t\t\tthis.fetchRegionList();\n\t\t},\n\t\tonReady() {\n\t\t\t// 获取字母索引容器的位置信息\n\t\t\tsetTimeout(() => {\n\t\t\t\tconst query = uni.createSelectorQuery().in(this);\n\t\t\t\tquery.select('.letter-index').boundingClientRect(rect => {\n\t\t\t\t\tthis.letterIndexRect = rect;\n\t\t\t\t}).exec();\n\t\t\t}, 300);\n\t\t},\n\t\tmethods: {\n\t\t\t...mapActions('region', {\n\t\t\t\tgetRegionList: 'getRegionList'\n\t\t\t}),\n\t\t\t\n\t\t\t// 获取地区列表\n\t\t\tfetchRegionList() {\n\t\t\t\tthis.getRegionList({ status: 0 });\n\t\t\t\t\n\t\t\t\t// 添加回调，确保在地区列表加载完成后再设置默认位置\n\t\t\t\tthis.$nextTick(() => {\n\t\t\t\t\t// 使用普通的watch方式监听regionList变化\n\t\t\t\t\tlet watchExecuted = false;\n\t\t\t\t\tconst checkRegionList = () => {\n\t\t\t\t\t\t// 只在第一次有数据时执行\n\t\t\t\t\t\tif (this.regionList && this.regionList.length > 0 && !watchExecuted) {\n\t\t\t\t\t\t\twatchExecuted = true;\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t// 检查是否需要更新当前位置\n\t\t\t\t\t\t\tconst savedLocation = uni.getStorageSync('currentLocation');\n\t\t\t\t\t\t\tif (!savedLocation || savedLocation === '未知地区' || savedLocation === '加载中...' || savedLocation === '请选择地区') {\n\t\t\t\t\t\t\t\t// 如果没有保存的位置或使用了默认位置，则使用第一个可用地区\n\t\t\t\t\t\t\t\tif (this.regionList.length > 0) {\n\t\t\t\t\t\t\t\t\tthis.currentLocation = this.regionList[0].name;\n\t\t\t\t\t\t\t\t\tuni.setStorageSync('currentLocation', this.currentLocation);\n\t\t\t\t\t\t\t\t\tconsole.log('位置选择页更新默认位置:', this.currentLocation);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t// 获取字母索引位置\n\t\t\t\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t\t\t\tthis.getLetterPositions();\n\t\t\t\t\t\t\t}, 500);\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t\t\n\t\t\t\t\t// 初始检查\n\t\t\t\t\tcheckRegionList();\n\t\t\t\t\t\n\t\t\t\t\t// 如果初始检查没有数据，设置定时器定期检查\n\t\t\t\t\tif (!watchExecuted) {\n\t\t\t\t\t\tconst timer = setInterval(() => {\n\t\t\t\t\t\t\tcheckRegionList();\n\t\t\t\t\t\t\t// 如果执行了或30秒后仍未执行，则清除定时器\n\t\t\t\t\t\t\tif (watchExecuted || !this.regionList) {\n\t\t\t\t\t\t\t\tclearInterval(timer);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}, 500);\n\t\t\t\t\t\t\n\t\t\t\t\t\t// 30秒后自动清除定时器防止内存泄漏\n\t\t\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t\t\tclearInterval(timer);\n\t\t\t\t\t\t}, 30000);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t},\n\t\t\t\n\t\t\thandleSearch(e) {\n\t\t\t\t// 搜索逻辑已通过计算属性实现\n\t\t\t},\n\t\t\t\n\t\t\t// 选择城市\n\t\t\tselectLocation(cityName) {\n\t\t\t\t// 查找选择的城市对象，获取完整信息\n\t\t\t\tlet selectedRegion = null;\n\t\t\t\t\n\t\t\t\t// 在所有地区中查找匹配的城市\n\t\t\t\tthis.regionList.forEach(region => {\n\t\t\t\t\tif (region.name === cityName) {\n\t\t\t\t\t\tselectedRegion = region;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\t\n\t\t\t\tif (!selectedRegion) {\n\t\t\t\t\tconsole.error('未找到选择的城市对象:', cityName);\n\t\t\t\t\t// 尝试根据名称创建一个城市对象\n\t\t\t\t\tselectedRegion = {\n\t\t\t\t\t\tid: 0,\n\t\t\t\t\t\tname: cityName\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tconsole.log('选择城市:', selectedRegion);\n\t\t\t\t\n\t\t\t\t// 更新当前位置信息\n\t\t\t\tuni.setStorageSync('currentLocation', selectedRegion.name);\n\t\t\t\t// 更新地区ID\n\t\t\t\tuni.setStorageSync('currentLocationId', selectedRegion.id);\n\t\t\t\t\n\t\t\t\tconsole.log('保存地区ID到本地存储:', selectedRegion.id);\n\t\t\t\t\n\t\t\t\t// 更新最近访问城市\n\t\t\t\tlet recent = this.recentLocations.filter(item => item !== selectedRegion.name);\n\t\t\t\trecent.unshift(selectedRegion.name);\n\t\t\t\tif (recent.length > 3) {\n\t\t\t\t\trecent = recent.slice(0, 3);\n\t\t\t\t}\n\t\t\t\tthis.recentLocations = recent;\n\t\t\t\tuni.setStorageSync('recentLocations', JSON.stringify(recent));\n\t\t\t\t\n\t\t\t\t// 通过eventChannel将选择的地区信息传回给首页\n\t\t\t\tconst eventChannel = this.getOpenerEventChannel();\n\t\t\t\tif (eventChannel && eventChannel.emit) {\n\t\t\t\t\teventChannel.emit('locationSelected', {\n\t\t\t\t\t\tid: selectedRegion.id, \n\t\t\t\t\t\tname: selectedRegion.name\n\t\t\t\t\t});\n\t\t\t\t\tconsole.log('通过事件通道发送地区信息:', selectedRegion.id, selectedRegion.name);\n\t\t\t\t} else {\n\t\t\t\t\tconsole.error('无法获取事件通道');\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// 返回上一页\n\t\t\t\tuni.navigateBack();\n\t\t\t\t\n\t\t\t\t// 显示提示\n\t\t\t\tuni.showToast({\n\t\t\t\t\ttitle: '已切换到' + selectedRegion.name,\n\t\t\t\t\ticon: 'success'\n\t\t\t\t});\n\t\t\t},\n\t\t\t\n\t\t\t// 获取所有字母索引的位置信息\n\t\t\tgetLetterPositions() {\n\t\t\t\tconst query = uni.createSelectorQuery().in(this);\n\t\t\t\tthis.indexLetters.forEach(letter => {\n\t\t\t\t\tquery.select('#letter-' + letter).boundingClientRect();\n\t\t\t\t});\n\t\t\t\tquery.select('.content-scroll').boundingClientRect();\n\t\t\t\tquery.exec(res => {\n\t\t\t\t\tif (res && res.length > 0) {\n\t\t\t\t\t\t// 最后一个结果是scroll-view的位置信息\n\t\t\t\t\t\tconst scrollViewInfo = res[res.length - 1];\n\t\t\t\t\t\t// 前面的结果是各个字母的位置信息\n\t\t\t\t\t\tthis.letterPositions = {};\n\t\t\t\t\t\t\n\t\t\t\t\t\tfor (let i = 0; i < this.indexLetters.length; i++) {\n\t\t\t\t\t\t\tconst letter = this.indexLetters[i];\n\t\t\t\t\t\t\tconst position = res[i];\n\t\t\t\t\t\t\tif (position) {\n\t\t\t\t\t\t\t\t// 计算相对于scroll-view的位置\n\t\t\t\t\t\t\t\tthis.letterPositions[letter] = position.top - scrollViewInfo.top;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t},\n\t\t\t\n\t\t\t// 滚动到指定字母区域\n\t\t\tscrollToLetter(letter) {\n\t\t\t\t// 使用缓存的位置信息\n\t\t\t\tif (this.letterPositions && this.letterPositions[letter] !== undefined) {\n\t\t\t\t\tthis.scrollTop = this.letterPositions[letter];\n\t\t\t\t\t// 添加触感反馈\n\t\t\t\t\tif (uni.vibrateShort) {\n\t\t\t\t\t\tuni.vibrateShort();\n\t\t\t\t\t}\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// 修复字母索引功能\n\t\t\t\tconst query = uni.createSelectorQuery().in(this);\n\t\t\t\tquery.select('#letter-' + letter).boundingClientRect(data => {\n\t\t\t\t\tif (data) {\n\t\t\t\t\t\t// 获取scroll-view组件\n\t\t\t\t\t\tconst scrollView = uni.createSelectorQuery().in(this).select('.content-scroll');\n\t\t\t\t\t\tscrollView.boundingClientRect(scrollData => {\n\t\t\t\t\t\t\tif (scrollData) {\n\t\t\t\t\t\t\t\t// 计算在scroll-view中的相对位置\n\t\t\t\t\t\t\t\tconst scrollTop = data.top - scrollData.top;\n\t\t\t\t\t\t\t\t// 设置scroll-view的滚动位置\n\t\t\t\t\t\t\t\tthis.scrollTop = scrollTop;\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t// 添加触感反馈\n\t\t\t\t\t\t\t\tif (uni.vibrateShort) {\n\t\t\t\t\t\t\t\t\tuni.vibrateShort();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}).exec();\n\t\t\t\t\t}\n\t\t\t\t}).exec();\n\t\t\t},\n\t\t\t\n\t\t\t// 处理触摸开始事件\n\t\t\thandleTouchStart(e) {\n\t\t\t\tthis.touchStartY = e.touches[0].clientY;\n\t\t\t\tthis.touchStartTime = Date.now();\n\t\t\t\tthis.isTouching = true;\n\t\t\t\t\n\t\t\t\t// 获取当前触摸的字母\n\t\t\t\tconst letter = this.getLetterFromTouch(e.touches[0].clientY);\n\t\t\t\tif (letter) {\n\t\t\t\t\tthis.currentLetter = letter;\n\t\t\t\t\tthis.showLetterIndicator = true;\n\t\t\t\t\tthis.scrollToLetter(letter);\n\t\t\t\t}\n\t\t\t},\n\t\t\t\n\t\t\t// 处理触摸移动事件\n\t\t\thandleTouchMove(e) {\n\t\t\t\tif (!this.isTouching) return;\n\t\t\t\t\n\t\t\t\t// 获取当前触摸的字母\n\t\t\t\tconst letter = this.getLetterFromTouch(e.touches[0].clientY);\n\t\t\t\tif (letter && letter !== this.currentLetter) {\n\t\t\t\t\tthis.currentLetter = letter;\n\t\t\t\t\tthis.scrollToLetter(letter);\n\t\t\t\t}\n\t\t\t},\n\t\t\t\n\t\t\thandleTouchEnd(e) {\n\t\t\t\tthis.showLetterIndicator = false;\n\t\t\t},\n\t\t\t\n\t\t\t// 根据触摸位置获取对应的字母\n\t\t\tgetLetterFromTouch(touchY) {\n\t\t\t\t// 使用缓存的字母索引容器位置信息\n\t\t\t\tif (!this.letterIndexRect) return null;\n\t\t\t\t\n\t\t\t\t// 计算触摸点在容器内的相对位置\n\t\t\t\tconst offsetY = touchY - this.letterIndexRect.top;\n\t\t\t\t\n\t\t\t\t// 计算索引\n\t\t\t\tconst itemHeight = this.letterIndexRect.height / this.indexLetters.length;\n\t\t\t\tlet index = Math.floor(offsetY / itemHeight);\n\t\t\t\t\n\t\t\t\t// 边界处理\n\t\t\t\tif (index < 0) index = 0;\n\t\t\t\tif (index >= this.indexLetters.length) index = this.indexLetters.length - 1;\n\t\t\t\t\n\t\t\t\t// 获取对应字母\n\t\t\t\treturn this.indexLetters[index];\n\t\t\t},\n\t\t}\n\t}\n</script>\n\n<style>\n\t.container {\n\t\tmin-height: 100vh;\n\t\tbackground-color: #f5f5f5;\n\t\tposition: relative;\n\t}\n\t\n\t.search-header {\n\t\tpadding: 20rpx 30rpx;\n\t\tbackground-color: #ffffff;\n\t}\n\t\n\t.search-box {\n\t\tdisplay: flex;\n\t\talign-items: center;\n\t\tbackground-color: #f5f5f5;\n\t\tpadding: 0 24rpx;\n\t\tborder-radius: 36rpx;\n\t\theight: 72rpx;\n\t}\n\t\n\t.search-box input {\n\t\tflex: 1;\n\t\tmargin-left: 16rpx;\n\t\tfont-size: 28rpx;\n\t\theight: 100%;\n\t}\n\t\n\t.placeholder {\n\t\tcolor: #999999;\n\t\tfont-size: 28rpx;\n\t}\n\t\n\t.content-scroll {\n\t\theight: calc(100vh - 112rpx);\n\t}\n\t\n\t.location-section {\n\t\tbackground-color: #ffffff;\n\t\tmargin-bottom: 20rpx;\n\t\tpadding: 0 30rpx;\n\t}\n\t\n\t.section-title {\n\t\tfont-size: 28rpx;\n\t\tcolor: #999999;\n\t\tpadding: 20rpx 0;\n\t}\n\t\n\t.current-location {\n\t\tdisplay: flex;\n\t\talign-items: center;\n\t\tpadding: 20rpx 0;\n\t\tborder-top: 1rpx solid #f5f5f5;\n\t}\n\t\n\t.location-icon {\n\t\tmargin-right: 16rpx;\n\t}\n\t\n\t.location-info {\n\t\tdisplay: flex;\n\t\tflex-direction: column;\n\t}\n\t\n\t.location-name {\n\t\tfont-size: 30rpx;\n\t\tcolor: #333333;\n\t\tmargin-bottom: 6rpx;\n\t}\n\t\n\t.location-status {\n\t\tfont-size: 24rpx;\n\t\tcolor: #999999;\n\t}\n\t\n\t.location-list {\n\t\tdisplay: flex;\n\t\tflex-wrap: wrap;\n\t}\n\t\n\t.location-item {\n\t\tpadding: 20rpx 0;\n\t\tmargin-right: 40rpx;\n\t\tfont-size: 30rpx;\n\t\tcolor: #333333;\n\t}\n\t\n\t.location-grid {\n\t\tdisplay: flex;\n\t\tflex-wrap: wrap;\n\t\tpadding-bottom: 20rpx;\n\t}\n\t\n\t.grid-item {\n\t\twidth: 25%;\n\t\theight: 80rpx;\n\t\tdisplay: flex;\n\t\talign-items: center;\n\t\tjustify-content: center;\n\t\tfont-size: 28rpx;\n\t\tcolor: #333333;\n\t\tmargin-bottom: 20rpx;\n\t}\n\t\n\t.grid-item text {\n\t\tpadding: 10rpx 30rpx;\n\t\tbackground-color: #f5f5f5;\n\t\tborder-radius: 8rpx;\n\t}\n\t\n\t.city-list {\n\t\tbackground-color: #ffffff;\n\t}\n\t\n\t.city-section {\n\t\tpadding: 0 30rpx;\n\t}\n\t\n\t.city-letter {\n\t\tfont-size: 28rpx;\n\t\tcolor: #999999;\n\t\tpadding: 20rpx 0;\n\t\tbackground-color: #f5f5f5;\n\t\tmargin: 0 -30rpx;\n\t\tpadding-left: 30rpx;\n\t}\n\t\n\t.city-items {\n\t\tpadding: 10rpx 0;\n\t}\n\t\n\t.city-item {\n\t\tpadding: 20rpx 0;\n\t\tfont-size: 30rpx;\n\t\tcolor: #333333;\n\t\tborder-bottom: 1rpx solid #f5f5f5;\n\t}\n\t\n\t.letter-index {\n\t\tposition: fixed;\n\t\tright: 20rpx;\n\t\ttop: 50%;\n\t\ttransform: translateY(-50%);\n\t\tdisplay: flex;\n\t\tflex-direction: column;\n\t\tbackground-color: rgba(255, 255, 255, 0.7);\n\t\tborder-radius: 30rpx;\n\t\tpadding: 10rpx 0;\n\t\tz-index: 10;\n\t\tbox-shadow: 0 2rpx 10rpx rgba(0, 0, 0, 0.1);\n\t}\n\t\n\t.letter-item {\n\t\twidth: 40rpx;\n\t\theight: 40rpx;\n\t\tdisplay: flex;\n\t\talign-items: center;\n\t\tjustify-content: center;\n\t\tposition: relative;\n\t\tpadding: 4rpx 0;\n\t}\n\t\n\t.letter-item:active {\n\t\tbackground-color: rgba(252, 62, 43, 0.1);\n\t}\n\t\n\t.letter-item:active text {\n\t\tcolor: #fc3e2b;\n\t}\n\t\n\t.letter-item text {\n\t\tfont-size: 24rpx;\n\t\tcolor: #666666;\n\t\tfont-weight: 500;\n\t}\n\t\n\t/* 优化字母索引区域的触摸体验 */\n\t.letter-index {\n\t\tpadding: 10rpx 6rpx;\n\t}\n\t\n\t.letter-item {\n\t\twidth: 50rpx;\n\t}\n\t\n\t.letter-indicator {\n\t\tposition: fixed;\n\t\tleft: 50%;\n\t\ttop: 50%;\n\t\ttransform: translate(-50%, -50%);\n\t\twidth: 120rpx;\n\t\theight: 120rpx;\n\t\tbackground-color: rgba(0, 0, 0, 0.6);\n\t\tborder-radius: 16rpx;\n\t\tdisplay: flex;\n\t\talign-items: center;\n\t\tjustify-content: center;\n\t\tz-index: 100;\n\t}\n\t\n\t.letter-indicator text {\n\t\tfont-size: 80rpx;\n\t\tcolor: #ffffff;\n\t\tfont-weight: bold;\n\t}\n\t\n\t/* 加载提示样式 */\n\t.loading-tip {\n\t\tpadding: 30rpx;\n\t\ttext-align: center;\n\t\tdisplay: flex;\n\t\tflex-direction: column;\n\t\talign-items: center;\n\t\tjustify-content: center;\n\t}\n\t\n\t.loading-icon {\n\t\twidth: 40rpx;\n\t\theight: 40rpx;\n\t\tmargin-bottom: 10rpx;\n\t\tborder: 4rpx solid #f5f5f5;\n\t\tborder-top: 4rpx solid #fc3e2b;\n\t\tborder-radius: 50%;\n\t\tanimation: spin 1s linear infinite;\n\t}\n\t\n\t@keyframes spin {\n\t\t0% { transform: rotate(0deg); }\n\t\t100% { transform: rotate(360deg); }\n\t}\n\t\n\t.loading-tip text {\n\t\tfont-size: 28rpx;\n\t\tcolor: #999;\n\t}\n\t\n\t/* 错误提示样式 */\n\t.error-tip {\n\t\tpadding: 40rpx;\n\t\ttext-align: center;\n\t}\n\t\n\t.error-tip text {\n\t\tfont-size: 28rpx;\n\t\tcolor: #999;\n\t\tdisplay: block;\n\t\tmargin-bottom: 20rpx;\n\t}\n\t\n\t.retry-btn {\n\t\twidth: 200rpx;\n\t\theight: 70rpx;\n\t\tfont-size: 28rpx;\n\t\tline-height: 70rpx;\n\t\tborder-radius: 35rpx;\n\t\tbackground-color: #fc3e2b;\n\t\tcolor: #fff;\n\t}\n</style> ","import MiniProgramPage from 'E:/Myxiangmu/chonggou/juzitongcheng/pages/location/select/index.vue'\nwx.createPage(MiniProgramPage)"],"names":["mapState","mapGetters","getStringFirstLetter","getPinyin","uni","mapActions"],"mappings":"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"}