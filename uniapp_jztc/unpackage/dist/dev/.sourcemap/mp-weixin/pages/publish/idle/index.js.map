{"version":3,"file":"index.js","sources":["pages/publish/idle/index.vue","D:/HBuilderX/plugins/uniapp-cli-vite/uniPage:/cGFnZXMvcHVibGlzaC9pZGxlL2luZGV4LnZ1ZQ"],"sourcesContent":["<template>\r\n\t<view class=\"idle-publish-container\">\r\n\t\t<!-- 自定义导航栏 -->\r\n\t\t<view class=\"nav-bar\" :style=\"{ paddingTop: statusBarHeight + 'px' }\">\r\n\t\t\t<view class=\"nav-content\" :style=\"{ height: navBarHeight + 'px' }\">\r\n\t\t\t\t<view class=\"back-btn\" @tap=\"handleBack\">\r\n\t\t\t\t\t<uni-icons type=\"left\" size=\"20\" color=\"#333333\"></uni-icons>\r\n\t\t\t\t</view>\r\n\t\t\t\t<text class=\"nav-title\">闲置发布</text>\r\n\t\t\t</view>\r\n\t\t</view>\r\n\t\t\r\n\t\t<!-- 占位元素 -->\r\n\t\t<view class=\"placeholder\" :style=\"{ height: `calc(${statusBarHeight}px + ${navBarHeight}px)` }\"></view>\r\n\t\t\r\n\t\t<!-- 表单内容 -->\r\n\t\t<scroll-view class=\"form-scroll\" scroll-y>\r\n\t\t\t<!-- 闲置类型选择 -->\r\n\t\t\t<view class=\"form-section\">\r\n\t\t\t\t<view class=\"section-title\">闲置类型</view>\r\n\t\t\t\t<view class=\"type-grid\">\r\n\t\t\t\t\t<view \r\n\t\t\t\t\t\tv-for=\"(type, index) in idleTypes\" \r\n\t\t\t\t\t\t:key=\"index\"\r\n\t\t\t\t\t\tclass=\"type-item\"\r\n\t\t\t\t\t\t:class=\"{ active: formData.type === type.value }\"\r\n\t\t\t\t\t\t@tap=\"selectIdleType(type.value)\"\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<image v-if=\"type.iconUrl\" class=\"type-icon\" :src=\"type.iconUrl\" mode=\"aspectFit\"></image>\r\n\t\t\t\t\t\t<uni-icons v-else type=\"info\" size=\"24\" :color=\"formData.type === type.value ? '#ffffff' : '#666666'\"></uni-icons>\r\n\t\t\t\t\t\t<text class=\"type-text\">{{ type.label }}</text>\r\n\t\t\t\t\t</view>\r\n\t\t\t\t</view>\r\n\t\t\t</view>\r\n\t\t\t\r\n\t\t\t<!-- 标题描述区域 -->\r\n\t\t\t<view class=\"form-section\">\r\n\t\t\t\t<view class=\"input-item\">\r\n\t\t\t\t\t<input \r\n\t\t\t\t\t\tclass=\"title-input\" \r\n\t\t\t\t\t\tv-model=\"formData.title\" \r\n\t\t\t\t\t\tplaceholder=\"请输入闲置物品名称\" \r\n\t\t\t\t\t\tmaxlength=\"30\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<text class=\"count-text\">{{formData.title.length}}/30</text>\r\n\t\t\t\t</view>\r\n\t\t\t\t\r\n\t\t\t\t<view class=\"input-item\">\r\n\t\t\t\t\t<textarea \r\n\t\t\t\t\t\tclass=\"desc-input\" \r\n\t\t\t\t\t\tv-model=\"formData.description\" \r\n\t\t\t\t\t\tplaceholder=\"描述一下物品的细节和转手原因，更容易出售\" \r\n\t\t\t\t\t\tmaxlength=\"1000\"\r\n\t\t\t\t\t\tauto-height\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<text class=\"count-text\">{{formData.description.length}}/1000</text>\r\n\t\t\t\t</view>\r\n\t\t\t</view>\r\n\t\t\t\r\n\t\t\t<!-- 图片上传区域 -->\r\n\t\t\t<view class=\"form-section\">\r\n\t\t\t\t<view class=\"section-title\">添加图片</view>\r\n\t\t\t\t<view class=\"upload-area\">\r\n\t\t\t\t\t<view class=\"upload-grid\">\r\n\t\t\t\t\t\t<view \r\n\t\t\t\t\t\t\tv-for=\"(item, index) in images\" \r\n\t\t\t\t\t\t\t:key=\"index\" \r\n\t\t\t\t\t\t\tclass=\"image-item\"\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<image class=\"preview-image\" :src=\"item\" mode=\"aspectFill\"></image>\r\n\t\t\t\t\t\t\t<view class=\"delete-btn\" @tap.stop=\"deleteImage(index)\">\r\n\t\t\t\t\t\t\t\t<uni-icons type=\"closeempty\" size=\"14\" color=\"#ffffff\"></uni-icons>\r\n\t\t\t\t\t\t\t</view>\r\n\t\t\t\t\t\t</view>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t<view class=\"upload-btn\" @tap=\"chooseImage\" v-if=\"images.length < 9\">\r\n\t\t\t\t\t\t\t<uni-icons type=\"camera\" size=\"24\" color=\"#999999\"></uni-icons>\r\n\t\t\t\t\t\t\t<text class=\"upload-text\">{{images.length}}/9</text>\r\n\t\t\t\t\t\t</view>\r\n\t\t\t\t\t</view>\r\n\t\t\t\t\t<text class=\"tip-text\">第一张图片将作为主图</text>\r\n\t\t\t\t</view>\r\n\t\t\t</view>\r\n\t\t\t\r\n\t\t\t<!-- 价格区域 -->\r\n\t\t\t<view class=\"form-section\">\r\n\t\t\t\t<view class=\"price-item\">\r\n\t\t\t\t\t<text class=\"label\">价格</text>\r\n\t\t\t\t\t<view class=\"price-input-wrapper\">\r\n\t\t\t\t\t\t<text class=\"price-symbol\">¥</text>\r\n\t\t\t\t\t\t<input \r\n\t\t\t\t\t\t\tclass=\"price-input\" \r\n\t\t\t\t\t\t\tv-model=\"formData.price\" \r\n\t\t\t\t\t\t\ttype=\"digit\" \r\n\t\t\t\t\t\t\tplaceholder=\"0.00\" \r\n\t\t\t\t\t\t\t@input=\"validatePriceInput('price')\"\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</view>\r\n\t\t\t\t</view>\r\n\t\t\t\t\r\n\t\t\t\t<view class=\"price-item\">\r\n\t\t\t\t\t<text class=\"label\">原价</text>\r\n\t\t\t\t\t<view class=\"price-input-wrapper\">\r\n\t\t\t\t\t\t<text class=\"price-symbol\">¥</text>\r\n\t\t\t\t\t\t<input \r\n\t\t\t\t\t\t\tclass=\"price-input\" \r\n\t\t\t\t\t\t\tv-model=\"formData.originalPrice\" \r\n\t\t\t\t\t\t\ttype=\"digit\" \r\n\t\t\t\t\t\t\tplaceholder=\"0.00（选填）\" \r\n\t\t\t\t\t\t\t@input=\"validatePriceInput('originalPrice')\"\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</view>\r\n\t\t\t\t</view>\r\n\t\t\t</view>\r\n\t\t\t\r\n\t\t\t<!-- 分类区域 -->\r\n\t\t\t<view class=\"form-section\">\r\n\t\t\t\t<view class=\"select-item\" @tap=\"showLocationPicker\">\r\n\t\t\t\t\t<text class=\"label\">交易地点</text>\r\n\t\t\t\t\t<view class=\"select-value\">\r\n\t\t\t\t\t\t<text class=\"value-text\">{{formData.location || '请选择交易地点'}}</text>\r\n\t\t\t\t\t\t<uni-icons type=\"right\" size=\"16\" color=\"#999999\"></uni-icons>\r\n\t\t\t\t\t</view>\r\n\t\t\t\t</view>\r\n\t\t\t\t\r\n\t\t\t\t<view class=\"select-item\">\r\n\t\t\t\t\t<text class=\"label\">交易方式</text>\r\n\t\t\t\t\t<view class=\"tag-group\">\r\n\t\t\t\t\t\t<view class=\"tag-item active\">\r\n\t\t\t\t\t\t\t<text class=\"tag-text\">线下交易</text>\r\n\t\t\t\t\t\t</view>\r\n\t\t\t\t\t</view>\r\n\t\t\t\t</view>\r\n\t\t\t</view>\r\n\t\t\t\r\n\t\t\t<!-- 底部安全区域 -->\r\n\t\t\t<view class=\"safe-area-bottom\"></view>\r\n\t\t</scroll-view>\r\n\t\t\r\n\t\t<!-- 底部操作栏 -->\r\n\t\t<view class=\"bottom-bar\">\r\n\t\t\t<view class=\"draft-btn\" @tap=\"saveDraft\">\r\n\t\t\t\t<text class=\"draft-text\">存草稿</text>\r\n\t\t\t</view>\r\n\t\t\t<view class=\"publish-btn\" @tap=\"publishItem\">\r\n\t\t\t\t<text class=\"publish-text\">立即发布</text>\r\n\t\t\t</view>\r\n\t\t</view>\r\n\t</view>\r\n</template>\r\n\r\n<script>\r\n\timport deviceMixin from '@/mixins/device.js'\r\n\timport { createIdle, getInfoCategories } from '@/apis/content.js'\r\n\timport { API_BASE_URL } from '@/utils/constants.js'\r\n\timport { isLoggedIn } from '@/utils/auth.js'\r\n\timport { mapState, mapGetters } from 'vuex'\r\n\timport { saveIdleDraft, getIdleDraft } from '@/utils/storage.js'\r\n\timport { category, publish } from '@/apis/index.js'\r\n\timport deviceInfo from '@/utils/device-info.js'\r\n\t\r\n\texport default {\r\n\t\tmixins: [deviceMixin],\r\n\t\tdata() {\r\n\t\t\treturn {\r\n\t\t\t\tstatusBarHeight: 0,\r\n\t\t\t\tnavBarHeight: 44,\r\n\t\t\t\timages: [],\r\n\t\t\t\tloading: false,\r\n\t\t\t\tformData: {\r\n\t\t\t\t\ttype: '', // 默认为空，等待接口返回后设置\r\n\t\t\t\t\ttitle: '',\r\n\t\t\t\t\tdescription: '',\r\n\t\t\t\t\tprice: '',\r\n\t\t\t\t\toriginalPrice: '',\r\n\t\t\t\t\tlocation: '同城交易',\r\n\t\t\t\t\tlatitude: undefined, // 位置纬度\r\n\t\t\t\t\tlongitude: undefined, // 位置经度\r\n\t\t\t\t\tcontact: {\r\n\t\t\t\t\t\tname: '',\r\n\t\t\t\t\t\tphone: '',\r\n\t\t\t\t\t\twechat: ''\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\tidleTypes: []\r\n\t\t\t}\r\n\t\t},\r\n\t\tcomputed: {\r\n\t\t\t...mapState('region', ['regionList']),\r\n\t\t},\r\n\t\tonLoad(options) {\r\n\t\t\t// 检查登录状态\r\n\t\t\tif (!isLoggedIn()) {\r\n\t\t\t\tuni.showToast({\r\n\t\t\t\t\ttitle: '请先登录',\r\n\t\t\t\t\ticon: 'none',\r\n\t\t\t\t\tduration: 2000\r\n\t\t\t\t})\r\n\t\t\t\t\r\n\t\t\t\t// 延迟跳转到登录页面\r\n\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\tuni.navigateTo({\r\n\t\t\t\t\t\turl: '/pages/login/index'\r\n\t\t\t\t\t})\r\n\t\t\t\t}, 1500)\r\n\t\t\t\treturn\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t// 获取状态栏高度\r\n\t\t\tthis.statusBarHeight = deviceInfo.getStatusBarHeight();\r\n\t\t\t\r\n\t\t\t// 确保地区数据已加载\r\n\t\t\tthis.ensureRegionDataLoaded()\r\n\t\t\t\r\n\t\t\t// 加载闲置类型数据\r\n\t\t\tthis.loadIdleCategories()\r\n\t\t\t\r\n\t\t\t// 如果有草稿ID参数，加载草稿数据\r\n\t\t\tif (options.draftId) {\r\n\t\t\t\tthis.loadDraftData(options.draftId)\r\n\t\t\t}\r\n\t\t},\r\n\t\tmethods: {\r\n\t\t\thandleBack() {\r\n\t\t\t\tuni.navigateBack()\r\n\t\t\t},\r\n\t\t\t// 加载闲置类型分类数据\r\n\t\t\tasync loadIdleCategories() {\r\n\t\t\t\tif (this.loading) return\r\n\t\t\t\tthis.loading = true\r\n\t\t\t\t\r\n\t\t\t\ttry {\r\n\t\t\t\t\tuni.showLoading({\r\n\t\t\t\t\t\ttitle: '加载中...',\r\n\t\t\t\t\t\tmask: true\r\n\t\t\t\t\t})\r\n\t\t\t\t\t\r\n\t\t\t\t\t// 获取闲置物品类型分类，type=2表示闲置物品分类\r\n\t\t\t\t\tconst res = await getInfoCategories(2)\r\n\t\t\t\t\t\r\n\t\t\t\t\tconsole.log('闲置分类数据:', res)\r\n\t\t\t\t\t\r\n\t\t\t\t\tif (res.code === 0 && res.data && res.data.list) {\r\n\t\t\t\t\t\t// 转换为页面可用的格式\r\n\t\t\t\t\t\tthis.idleTypes = res.data.list.map(item => {\r\n\t\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t\tlabel: item.name,\r\n\t\t\t\t\t\t\t\tvalue: item.id.toString(),\r\n\t\t\t\t\t\t\t\ticonUrl: item.icon, // 使用API返回的图标URL\r\n\t\t\t\t\t\t\t\tid: item.id\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t// 设置默认选中第一个分类\r\n\t\t\t\t\t\tif (this.idleTypes.length > 0) {\r\n\t\t\t\t\t\t\tthis.formData.type = this.idleTypes[0].value\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthrow new Error('获取分类失败')\r\n\t\t\t\t\t}\r\n\t\t\t\t} catch (error) {\r\n\t\t\t\t\tconsole.error('加载闲置分类失败:', error)\r\n\t\t\t\t\t// 使用默认分类数据\r\n\t\t\t\t\tthis.useDefaultCategories()\r\n\t\t\t\t\tuni.showToast({\r\n\t\t\t\t\t\ttitle: '加载分类失败，使用默认分类',\r\n\t\t\t\t\t\ticon: 'none'\r\n\t\t\t\t\t})\r\n\t\t\t\t} finally {\r\n\t\t\t\t\tthis.loading = false\r\n\t\t\t\t\tuni.hideLoading() // 确保在所有情况下都隐藏loading\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t// 使用默认闲置分类数据（网络错误时的备选方案）\r\n\t\t\tuseDefaultCategories() {\r\n\t\t\t\t// 使用空数组而不是默认数据\r\n\t\t\t\tthis.idleTypes = [];\r\n\t\t\t\t\r\n\t\t\t\t// 重置类型选择\r\n\t\t\t\tthis.formData.type = '';\r\n\t\t\t\t\r\n\t\t\t\t// 显示更明确的错误提示\r\n\t\t\t\tuni.showToast({\r\n\t\t\t\t\ttitle: '分类加载失败，请刷新重试',\r\n\t\t\t\t\ticon: 'none',\r\n\t\t\t\t\tduration: 2000\r\n\t\t\t\t});\r\n\t\t\t},\r\n\t\t\tasync chooseImage() {\r\n\t\t\t\ttry {\r\n\t\t\t\t\t// 选择图片\r\n\t\t\t\t\tconst res = await new Promise((resolve, reject) => {\r\n\t\t\t\t\t\tuni.chooseImage({\r\n\t\t\t\t\t\t\tcount: 9 - this.images.length,\r\n\t\t\t\t\t\t\tsizeType: ['compressed'],\r\n\t\t\t\t\t\t\tsourceType: ['album', 'camera'],\r\n\t\t\t\t\t\t\tsuccess: resolve,\r\n\t\t\t\t\t\t\tfail: reject\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t})\r\n\t\t\t\t\t\r\n\t\t\t\t\tif (res.tempFilePaths && res.tempFilePaths.length > 0) {\r\n\t\t\t\t\t\tuni.showLoading({\r\n\t\t\t\t\t\t\ttitle: '上传中...',\r\n\t\t\t\t\t\t\tmask: true\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\ttry {\r\n\t\t\t\t\t\t\t// 上传所有选中的图片\r\n\t\t\t\t\t\t\tconst uploadPromises = res.tempFilePaths.map(async (filePath) => {\r\n\t\t\t\t\t\t\t\ttry {\r\n\t\t\t\t\t\t\t\t\t// 调用上传接口\r\n\t\t\t\t\t\t\t\t\treturn await this.uploadFile(filePath)\r\n\t\t\t\t\t\t\t\t} catch (error) {\r\n\t\t\t\t\t\t\t\t\tconsole.error('上传图片失败:', error)\r\n\t\t\t\t\t\t\t\t\treturn null\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t// 等待所有图片上传完成\r\n\t\t\t\t\t\t\tconst uploadResults = await Promise.all(uploadPromises)\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t// 过滤掉上传失败的图片\r\n\t\t\t\t\t\t\tconst successUrls = uploadResults.filter(url => url !== null)\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t// 更新图片列表\r\n\t\t\t\t\t\t\tthis.images = [...this.images, ...successUrls]\r\n\t\t\t\t\t\t} catch (error) {\r\n\t\t\t\t\t\t\tconsole.error('处理上传图片时出错:', error)\r\n\t\t\t\t\t\t\tuni.showToast({\r\n\t\t\t\t\t\t\t\ttitle: '上传图片失败',\r\n\t\t\t\t\t\t\t\ticon: 'none'\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t} finally {\r\n\t\t\t\t\t\t\tuni.hideLoading() // 确保在所有情况下都隐藏loading\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t} catch (error) {\r\n\t\t\t\t\tconsole.error('选择图片失败:', error)\r\n\t\t\t\t\tuni.showToast({\r\n\t\t\t\t\t\ttitle: '选择图片失败',\r\n\t\t\t\t\t\ticon: 'none'\r\n\t\t\t\t\t})\r\n\t\t\t\t\t// 如果在chooseImage阶段可能显示了loading，需要确保隐藏\r\n\t\t\t\t\tif (this.loading) {\r\n\t\t\t\t\t\tuni.hideLoading()\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t\r\n\t\t\t// 上传文件到服务器\r\n\t\t\tasync uploadFile(filePath) {\r\n\t\t\t\treturn new Promise((resolve, reject) => {\r\n\t\t\t\t\t// 获取token\r\n\t\t\t\t\tconst token = uni.getStorageSync('token')\r\n\t\t\t\t\t\r\n\t\t\t\t\tif (!token) {\r\n\t\t\t\t\t\tuni.showToast({\r\n\t\t\t\t\t\t\ttitle: '请先登录',\r\n\t\t\t\t\t\t\ticon: 'none'\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t\treturn reject(new Error('请先登录'))\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tuni.uploadFile({\r\n\t\t\t\t\t\turl: API_BASE_URL + '/wx/upload/image',\r\n\t\t\t\t\t\tfilePath: filePath,\r\n\t\t\t\t\t\tname: 'file',\r\n\t\t\t\t\t\theader: {\r\n\t\t\t\t\t\t\t'Authorization': 'Bearer ' + token\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\tsuccess: (uploadRes) => {\r\n\t\t\t\t\t\t\ttry {\r\n\t\t\t\t\t\t\t\tconst data = JSON.parse(uploadRes.data)\r\n\t\t\t\t\t\t\t\tconsole.log('上传响应:', data)\r\n\t\t\t\t\t\t\t\tif (data.code === 0 && data.data) {\r\n\t\t\t\t\t\t\t\t\t// 返回图片的URL\r\n\t\t\t\t\t\t\t\t\tresolve(data.data.url)\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\treject(new Error(data.message || '上传失败'))\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t} catch (error) {\r\n\t\t\t\t\t\t\t\tconsole.error('解析上传响应失败:', error)\r\n\t\t\t\t\t\t\t\treject(error)\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\tfail: (err) => {\r\n\t\t\t\t\t\t\tconsole.error('上传请求失败:', err)\r\n\t\t\t\t\t\t\treject(err)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})\r\n\t\t\t\t})\r\n\t\t\t},\r\n\t\t\tdeleteImage(index) {\r\n\t\t\t\tthis.images.splice(index, 1)\r\n\t\t\t},\r\n\t\t\tshowLocationPicker() {\r\n\t\t\t\t// 调用微信choosePoi接口选择位置\r\n\t\t\t\tuni.choosePoi({\r\n\t\t\t\t\tsuccess: (res) => {\r\n\t\t\t\t\t\tconsole.log('选择位置成功:', res);\r\n\t\t\t\t\t\t// 更新位置信息，根据类型决定使用城市还是具体地址\r\n\t\t\t\t\t\tif (res.type === 1) {\r\n\t\t\t\t\t\t\t// 选择城市，直接使用城市名称（不带省份）\r\n\t\t\t\t\t\t\t// 如果城市名称中包含\"省\"字，则只取省后面的部分\r\n\t\t\t\t\t\t\tlet cityName = res.city || '';\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t// 去除省份名称\r\n\t\t\t\t\t\t\tif (cityName.indexOf('省') > 0) {\r\n\t\t\t\t\t\t\t\tcityName = cityName.split('省')[1];\r\n\t\t\t\t\t\t\t} else if (cityName.indexOf('自治区') > 0) {\r\n\t\t\t\t\t\t\t\tcityName = cityName.split('自治区')[1];\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tthis.formData.location = cityName;\r\n\t\t\t\t\t\t\t// 城市级别没有精确经纬度，将其设为空\r\n\t\t\t\t\t\t\tthis.formData.latitude = undefined;\r\n\t\t\t\t\t\t\tthis.formData.longitude = undefined;\r\n\t\t\t\t\t\t} else if (res.type === 2) {\r\n\t\t\t\t\t\t\t// 选择具体位置，只显示市和区县级别\r\n\t\t\t\t\t\t\tlet address = res.address || '';\r\n\t\t\t\t\t\t\tlet name = res.name || '';\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t// 从地址中移除省份\r\n\t\t\t\t\t\t\tlet formattedAddress = '';\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t// 如果地址包含\"省\"字，则只取省后面的部分\r\n\t\t\t\t\t\t\tif (address.indexOf('省') > 0) {\r\n\t\t\t\t\t\t\t\taddress = address.split('省')[1];\r\n\t\t\t\t\t\t\t} else if (address.indexOf('自治区') > 0) {\r\n\t\t\t\t\t\t\t\taddress = address.split('自治区')[1];\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t// 如果还包含\"市\"，则取市和后面的部分\r\n\t\t\t\t\t\t\tif (address.indexOf('市') > 0) {\r\n\t\t\t\t\t\t\t\t// 直接使用市+区县+地点名的格式\r\n\t\t\t\t\t\t\t\tformattedAddress = address + ' ' + name;\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t// 如果没有市，直接使用净化后的地址+地点名\r\n\t\t\t\t\t\t\t\tformattedAddress = address + ' ' + name;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tthis.formData.location = formattedAddress;\r\n\t\t\t\t\t\t\t// 保存经纬度信息\r\n\t\t\t\t\t\t\tthis.formData.latitude = res.latitude;\r\n\t\t\t\t\t\t\tthis.formData.longitude = res.longitude;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t},\r\n\t\t\t\t\tfail: (err) => {\r\n\t\t\t\t\t\tconsole.error('选择位置失败:', err);\r\n\t\t\t\t\t\t// 位置选择失败时的处理\r\n\t\t\t\t\t\tif (err.errMsg && err.errMsg.indexOf('cancel') !== -1) {\r\n\t\t\t\t\t\t\t// 用户取消选择，不做处理\r\n\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t// 其他错误显示提示\r\n\t\t\t\t\t\tuni.showToast({\r\n\t\t\t\t\t\t\ttitle: '位置选择失败，请重试',\r\n\t\t\t\t\t\t\ticon: 'none'\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t},\r\n\t\t\tselectIdleType(type) {\r\n\t\t\t\tthis.formData.type = type\r\n\t\t\t},\r\n\t\t\tsaveDraft() {\r\n\t\t\t\tif (!this.formData.title && !this.formData.description) {\r\n\t\t\t\t\tuni.showToast({\r\n\t\t\t\t\t\ttitle: '请填写标题或描述',\r\n\t\t\t\t\t\ticon: 'none'\r\n\t\t\t\t\t})\r\n\t\t\t\t\treturn\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\ttry {\r\n\t\t\t\t\t// 构建草稿数据\r\n\t\t\t\t\tconst draftData = {\r\n\t\t\t\t\t\t...this.formData,\r\n\t\t\t\t\t\timages: this.images\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\t// 保存草稿\r\n\t\t\t\t\tconst draftId = saveIdleDraft(draftData)\r\n\t\t\t\t\t\r\n\t\t\t\t\tif (draftId) {\r\n\t\t\t\t\t\tuni.showToast({\r\n\t\t\t\t\t\t\ttitle: '草稿保存成功',\r\n\t\t\t\t\t\t\ticon: 'success'\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t// 延迟返回上一页\r\n\t\t\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\t\t\tuni.navigateBack()\r\n\t\t\t\t\t\t}, 1500)\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthrow new Error('保存失败')\r\n\t\t\t\t\t}\r\n\t\t\t\t} catch (e) {\r\n\t\t\t\t\tconsole.error('保存草稿失败', e)\r\n\t\t\t\t\tuni.showToast({\r\n\t\t\t\t\t\ttitle: '保存草稿失败',\r\n\t\t\t\t\t\ticon: 'none'\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tasync publishItem() {\r\n\t\t\t\t// 检查登录状态\r\n\t\t\t\tif (!isLoggedIn()) {\r\n\t\t\t\t\tuni.showToast({\r\n\t\t\t\t\t\ttitle: '请先登录',\r\n\t\t\t\t\t\ticon: 'none'\r\n\t\t\t\t\t})\r\n\t\t\t\t\treturn\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t// 表单验证\r\n\t\t\t\tif (!this.validateForm(true)) return\r\n\t\t\t\t\r\n\t\t\t\t// 使用变量跟踪loading状态\r\n\t\t\t\tlet loadingShown = false;\r\n\t\t\t\t\r\n\t\t\t\ttry {\r\n\t\t\t\t\t// 显示加载提示\r\n\t\t\t\t\tuni.showLoading({\r\n\t\t\t\t\t\ttitle: '正在发布...',\r\n\t\t\t\t\t\tmask: true\r\n\t\t\t\t\t});\r\n\t\t\t\t\tloadingShown = true;\r\n\t\t\t\t\t\r\n\t\t\t\t\t// 构建富文本内容\r\n\t\t\t\t\tlet content = '';\r\n\t\t\t\t\t\r\n\t\t\t\t\t// 添加描述内容，分段落处理\r\n\t\t\t\t\tconst textParagraphs = this.formData.description.split('\\n').filter(p => p.trim());\r\n\t\t\t\t\ttextParagraphs.forEach(paragraph => {\r\n\t\t\t\t\t\tcontent += `<p>${paragraph}</p>`;\r\n\t\t\t\t\t});\r\n\t\t\t\t\t\r\n\t\t\t\t\t// 添加图片内容\r\n\t\t\t\t\tif (this.images.length > 0) {\r\n\t\t\t\t\t\tthis.images.forEach(imgUrl => {\r\n\t\t\t\t\t\t\tcontent += `<p><img src=\"${imgUrl}\"></p>`;\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\t// 准备提交的数据\r\n\t\t\t\t\tconst submitData = {\r\n\t\t\t\t\t\tcategoryId: this.formData.type ? parseInt(this.formData.type) : 0,\r\n\t\t\t\t\t\ttitle: this.formData.title,\r\n\t\t\t\t\t\tprice: parseFloat(this.formData.price) || 0,\r\n\t\t\t\t\t\toriginalPrice: parseFloat(this.formData.originalPrice) || 0,\r\n\t\t\t\t\t\tcontent: content,\r\n\t\t\t\t\t\ttradeMethod: '线下交易',\r\n\t\t\t\t\t\ttradePlace: this.formData.location || '同城交易',\r\n\t\t\t\t\t\timages: this.images,\r\n\t\t\t\t\t\t// 添加地区ID\r\n\t\t\t\t\t\tregionId: this.getRegionId()\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tconsole.log('提交数据:', submitData);\r\n\t\t\t\t\t\r\n\t\t\t\t\t// 调用接口发布闲置信息\r\n\t\t\t\t\tconst res = await createIdle(submitData);\r\n\t\t\t\t\t\r\n\t\t\t\t\t// 请求完成后隐藏loading\r\n\t\t\t\t\tif (loadingShown) {\r\n\t\t\t\t\t\tuni.hideLoading();\r\n\t\t\t\t\t\tloadingShown = false;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tif (res.code === 0) {\r\n\t\t\t\t\t\tuni.showToast({\r\n\t\t\t\t\t\t\ttitle: '发布成功',\r\n\t\t\t\t\t\t\ticon: 'success'\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t// 延迟返回上一页\r\n\t\t\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\t\t\tuni.navigateBack()\r\n\t\t\t\t\t\t}, 1500)\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthrow new Error(res.message || '发布失败')\r\n\t\t\t\t\t}\r\n\t\t\t\t} catch (error) {\r\n\t\t\t\t\t// 确保发生异常时也会隐藏loading\r\n\t\t\t\t\tif (loadingShown) {\r\n\t\t\t\t\t\tuni.hideLoading();\r\n\t\t\t\t\t\tloadingShown = false;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tconsole.error('发布闲置失败:', error)\r\n\t\t\t\t\tuni.showToast({\r\n\t\t\t\t\t\ttitle: error.message || '发布失败，请重试',\r\n\t\t\t\t\t\ticon: 'none'\r\n\t\t\t\t\t})\r\n\t\t\t\t} finally {\r\n\t\t\t\t\t// 最后一道防线，确保无论如何都会隐藏loading\r\n\t\t\t\t\tif (loadingShown) {\r\n\t\t\t\t\t\tuni.hideLoading();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tvalidatePriceInput(field) {\r\n\t\t\t\t// 价格输入验证：只允许输入数字和小数点\r\n\t\t\t\tconst value = this.formData[field];\r\n\t\t\t\t\r\n\t\t\t\t// 如果为空，不处理\r\n\t\t\t\tif (!value) return;\r\n\t\t\t\t\r\n\t\t\t\t// 使用正则表达式验证，只允许数字和一个小数点\r\n\t\t\t\t// 允许：数字，一个小数点，小数点后最多两位\r\n\t\t\t\tconst regex = /^\\d+(\\.\\d{0,2})?$/;\r\n\t\t\t\t\r\n\t\t\t\tif (!regex.test(value)) {\r\n\t\t\t\t\t// 非法输入检测\r\n\t\t\t\t\tconst hasForbiddenChars = /[^\\d.]/.test(value);\r\n\t\t\t\t\t\r\n\t\t\t\t\t// 如果不符合正则，则去除非法字符\r\n\t\t\t\t\tconst cleaned = value\r\n\t\t\t\t\t\t.replace(/[^\\d.]/g, '') // 去除数字和点以外的字符\r\n\t\t\t\t\t\t.replace(/\\.{2,}/g, '.') // 多个点替换为一个点\r\n\t\t\t\t\t\t.replace(/^(\\d+\\.\\d{0,2}).*$/, '$1'); // 只保留一个小数点后两位\r\n\t\t\t\t\t\r\n\t\t\t\t\t// 更新值\r\n\t\t\t\t\tthis.formData[field] = cleaned;\r\n\t\t\t\t\t\r\n\t\t\t\t\t// 如果存在非法字符，显示提示\r\n\t\t\t\t\tif (hasForbiddenChars) {\r\n\t\t\t\t\t\tuni.showToast({\r\n\t\t\t\t\t\t\ttitle: '请只输入数字和小数点',\r\n\t\t\t\t\t\t\ticon: 'none',\r\n\t\t\t\t\t\t\tduration: 1500\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tvalidateForm(isPublish) {\r\n\t\t\t\t// 类型验证\r\n\t\t\t\tif (!this.formData.type) {\r\n\t\t\t\t\tuni.showToast({\r\n\t\t\t\t\t\ttitle: '请选择闲置类型',\r\n\t\t\t\t\t\ticon: 'none'\r\n\t\t\t\t\t})\r\n\t\t\t\t\treturn false\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t// 图片验证\r\n\t\t\t\tif (this.images.length === 0) {\r\n\t\t\t\t\tuni.showToast({\r\n\t\t\t\t\t\ttitle: '请至少上传一张图片',\r\n\t\t\t\t\t\ticon: 'none'\r\n\t\t\t\t\t})\r\n\t\t\t\t\treturn false\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t// 标题验证\r\n\t\t\t\tif (!this.formData.title.trim()) {\r\n\t\t\t\t\tuni.showToast({\r\n\t\t\t\t\t\ttitle: '请填写商品标题',\r\n\t\t\t\t\t\ticon: 'none'\r\n\t\t\t\t\t})\r\n\t\t\t\t\treturn false\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t// 发布时的额外验证\r\n\t\t\t\tif (isPublish) {\r\n\t\t\t\t\t// 价格验证\r\n\t\t\t\t\tif (!this.formData.price) {\r\n\t\t\t\t\t\tuni.showToast({\r\n\t\t\t\t\t\t\ttitle: '请填写商品价格',\r\n\t\t\t\t\t\t\ticon: 'none'\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t\treturn false\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\t// 价格格式验证\r\n\t\t\t\t\tconst priceRegex = /^\\d+(\\.\\d{1,2})?$/;\r\n\t\t\t\t\tif (!priceRegex.test(this.formData.price)) {\r\n\t\t\t\t\t\tuni.showToast({\r\n\t\t\t\t\t\t\ttitle: '请输入正确的价格格式',\r\n\t\t\t\t\t\t\ticon: 'none'\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t\treturn false\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\t// 原价格式验证（如果有值但不是空字符串）\r\n\t\t\t\t\tif (this.formData.originalPrice !== undefined && this.formData.originalPrice !== '') {\r\n\t\t\t\t\t\tif (!priceRegex.test(this.formData.originalPrice)) {\r\n\t\t\t\t\t\t\tuni.showToast({\r\n\t\t\t\t\t\t\t\ttitle: '请输入正确的原价格式',\r\n\t\t\t\t\t\t\t\ticon: 'none'\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\treturn false\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t// 确保原价字段中没有中文或其他非法字符\r\n\t\t\t\t\t\tconst hasForbiddenChars = /[^\\d.]/.test(this.formData.originalPrice);\r\n\t\t\t\t\t\tif (hasForbiddenChars) {\r\n\t\t\t\t\t\t\tuni.showToast({\r\n\t\t\t\t\t\t\t\ttitle: '原价只能输入数字',\r\n\t\t\t\t\t\t\t\ticon: 'none'\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\treturn false\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\t// 交易地点验证\r\n\t\t\t\t\tif (!this.formData.location) {\r\n\t\t\t\t\t\tuni.showToast({\r\n\t\t\t\t\t\t\ttitle: '请选择交易地点',\r\n\t\t\t\t\t\t\ticon: 'none'\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t\treturn false\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\treturn true\r\n\t\t\t},\r\n\t\t\t// 确保区域数据已加载\r\n\t\t\tensureRegionDataLoaded() {\r\n\t\t\t\t// 检查vuex store中是否已有区域数据\r\n\t\t\t\tif (this.$store && \r\n\t\t\t\t\tthis.$store.state.region && \r\n\t\t\t\t\t(!this.$store.state.region.regionList || this.$store.state.region.regionList.length === 0)) {\r\n\t\t\t\t\t// 如果没有区域数据，则触发加载\r\n\t\t\t\t\tthis.$store.dispatch('region/getRegionList').catch(error => {\r\n\t\t\t\t\t\tconsole.error('加载地区数据失败:', error)\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tgetRegionId() {\r\n\t\t\t\t// 获取当前选择的地区ID\r\n\t\t\t\tlet regionId = 0;\r\n\t\t\t\tconst currentLocation = uni.getStorageSync('currentLocation');\r\n\t\t\t\t\r\n\t\t\t\t// 从Store中查找当前位置对应的地区ID\r\n\t\t\t\tif (this.regionList && this.regionList.length > 0) {\r\n\t\t\t\t\tconst currentRegion = this.regionList.find(region => region.name === currentLocation);\r\n\t\t\t\t\tif (currentRegion) {\r\n\t\t\t\t\t\tregionId = currentRegion.id;\r\n\t\t\t\t\t\tconsole.log('找到当前地区ID:', regionId, '地区名称:', currentLocation);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tconsole.log('未找到当前地区ID，使用默认ID 0, 当前地区名称:', currentLocation);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\treturn regionId;\r\n\t\t\t},\r\n\t\t\t// 加载草稿数据\r\n\t\t\tloadDraftData(draftId) {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tconst draftData = getIdleDraft(Number(draftId))\r\n\t\t\t\t\t\r\n\t\t\t\t\tif (!draftData) {\r\n\t\t\t\t\t\tuni.showToast({\r\n\t\t\t\t\t\t\ttitle: '草稿不存在',\r\n\t\t\t\t\t\t\ticon: 'none'\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t\treturn\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\t// 填充表单数据\r\n\t\t\t\t\tif (draftData.type) {\r\n\t\t\t\t\t\tthis.formData.type = draftData.type\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tif (draftData.title) {\r\n\t\t\t\t\t\tthis.formData.title = draftData.title\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tif (draftData.description) {\r\n\t\t\t\t\t\tthis.formData.description = draftData.description\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tif (draftData.price) {\r\n\t\t\t\t\t\tthis.formData.price = draftData.price\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tif (draftData.originalPrice) {\r\n\t\t\t\t\t\tthis.formData.originalPrice = draftData.originalPrice\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tif (draftData.location) {\r\n\t\t\t\t\t\tthis.formData.location = draftData.location\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tif (draftData.latitude) {\r\n\t\t\t\t\t\tthis.formData.latitude = draftData.latitude\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tif (draftData.longitude) {\r\n\t\t\t\t\t\tthis.formData.longitude = draftData.longitude\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tif (draftData.contact) {\r\n\t\t\t\t\t\tthis.formData.contact = draftData.contact\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\t// 设置图片\r\n\t\t\t\t\tif (draftData.images && draftData.images.length > 0) {\r\n\t\t\t\t\t\tthis.images = draftData.images\r\n\t\t\t\t\t}\r\n\t\t\t\t} catch (e) {\r\n\t\t\t\t\tconsole.error('加载草稿失败', e)\r\n\t\t\t\t\tuni.showToast({\r\n\t\t\t\t\t\ttitle: '加载草稿失败',\r\n\t\t\t\t\t\ticon: 'none'\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n</script>\r\n\r\n<style>\r\n\t.idle-publish-container {\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t\theight: 100vh;\r\n\t\tbackground-color: #f5f5f5;\r\n\t}\r\n\t\r\n\t.nav-bar {\r\n\t\tbackground-color: #ffffff;\r\n\t\tposition: fixed;\r\n\t\ttop: 0;\r\n\t\tleft: 0;\r\n\t\tright: 0;\r\n\t\tz-index: 99;\r\n\t\tbox-shadow: 0 2rpx 8rpx rgba(0, 0, 0, 0.04);\r\n\t}\r\n\t\r\n\t.nav-content {\r\n\t\tdisplay: flex;\r\n\t\talign-items: center;\r\n\t\tposition: relative;\r\n\t}\r\n\t\r\n\t.back-btn {\r\n\t\twidth: 88rpx;\r\n\t\theight: 100%;\r\n\t\tdisplay: flex;\r\n\t\talign-items: center;\r\n\t\tjustify-content: center;\r\n\t}\r\n\t\r\n\t.nav-title {\r\n\t\tposition: absolute;\r\n\t\tleft: 50%;\r\n\t\ttransform: translateX(-50%);\r\n\t\tfont-size: 34rpx;\r\n\t\tfont-weight: 500;\r\n\t\tcolor: #333333;\r\n\t}\r\n\t\r\n\t.placeholder {\r\n\t\twidth: 100%;\r\n\t}\r\n\t\r\n\t.form-scroll {\r\n\t\tflex: 1;\r\n\t\toverflow: hidden;\r\n\t}\r\n\t\r\n\t.form-section {\r\n\t\tbackground-color: #ffffff;\r\n\t\tmargin-bottom: 20rpx;\r\n\t\tpadding: 20rpx 30rpx;\r\n\t}\r\n\t\r\n\t.section-title {\r\n\t\tfont-size: 30rpx;\r\n\t\tfont-weight: 500;\r\n\t\tcolor: #333333;\r\n\t\tmargin-bottom: 20rpx;\r\n\t}\r\n\t\r\n\t.type-grid {\r\n\t\tdisplay: flex;\r\n\t\tflex-wrap: wrap;\r\n\t\tmargin: 0 -10rpx;\r\n\t}\r\n\t\r\n\t.type-item {\r\n\t\twidth: calc(25% - 20rpx);\r\n\t\theight: 120rpx;\r\n\t\tmargin: 10rpx;\r\n\t\tbackground-color: #f8f8f8;\r\n\t\tborder-radius: 8rpx;\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t\talign-items: center;\r\n\t\tjustify-content: center;\r\n\t}\r\n\t\r\n\t.type-item.active {\r\n\t\tbackground: linear-gradient(135deg, #1e90ff, #4169e1);\r\n\t}\r\n\t\r\n\t.type-text {\r\n\t\tfont-size: 24rpx;\r\n\t\tcolor: #666666;\r\n\t\tmargin-top: 10rpx;\r\n\t}\r\n\t\r\n\t.type-item.active .type-text {\r\n\t\tcolor: #ffffff;\r\n\t}\r\n\t\r\n\t.upload-area {\r\n\t\twidth: 100%;\r\n\t}\r\n\t\r\n\t.upload-grid {\r\n\t\tdisplay: flex;\r\n\t\tflex-wrap: wrap;\r\n\t\tmargin: 0 -10rpx;\r\n\t}\r\n\t\r\n\t.image-item, .upload-btn {\r\n\t\twidth: calc(33.33% - 20rpx);\r\n\t\theight: 200rpx;\r\n\t\tmargin: 10rpx;\r\n\t\tborder-radius: 8rpx;\r\n\t\toverflow: hidden;\r\n\t\tposition: relative;\r\n\t}\r\n\t\r\n\t.preview-image {\r\n\t\twidth: 100%;\r\n\t\theight: 100%;\r\n\t}\r\n\t\r\n\t.delete-btn {\r\n\t\tposition: absolute;\r\n\t\ttop: 10rpx;\r\n\t\tright: 10rpx;\r\n\t\twidth: 40rpx;\r\n\t\theight: 40rpx;\r\n\t\tbackground-color: rgba(0, 0, 0, 0.5);\r\n\t\tborder-radius: 50%;\r\n\t\tdisplay: flex;\r\n\t\talign-items: center;\r\n\t\tjustify-content: center;\r\n\t}\r\n\t\r\n\t.upload-btn {\r\n\t\tbackground-color: #f8f8f8;\r\n\t\tborder: 1rpx dashed #dddddd;\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t\talign-items: center;\r\n\t\tjustify-content: center;\r\n\t}\r\n\t\r\n\t.upload-text {\r\n\t\tfont-size: 24rpx;\r\n\t\tcolor: #999999;\r\n\t\tmargin-top: 10rpx;\r\n\t}\r\n\t\r\n\t.tip-text {\r\n\t\tfont-size: 24rpx;\r\n\t\tcolor: #999999;\r\n\t\tmargin-top: 20rpx;\r\n\t}\r\n\t\r\n\t.input-item {\r\n\t\tmargin-bottom: 20rpx;\r\n\t\tposition: relative;\r\n\t}\r\n\t\r\n\t.input-item:last-child {\r\n\t\tmargin-bottom: 0;\r\n\t}\r\n\t\r\n\t.title-input {\r\n\t\twidth: 100%;\r\n\t\theight: 80rpx;\r\n\t\tfont-size: 30rpx;\r\n\t\tcolor: #333333;\r\n\t}\r\n\t\r\n\t.desc-input {\r\n\t\twidth: 100%;\r\n\t\tmin-height: 200rpx;\r\n\t\tfont-size: 28rpx;\r\n\t\tcolor: #333333;\r\n\t\tline-height: 1.5;\r\n\t}\r\n\t\r\n\t.count-text {\r\n\t\tposition: absolute;\r\n\t\tright: 0;\r\n\t\tbottom: 0;\r\n\t\tfont-size: 24rpx;\r\n\t\tcolor: #999999;\r\n\t}\r\n\t\r\n\t.price-item {\r\n\t\tdisplay: flex;\r\n\t\talign-items: center;\r\n\t\tmargin-bottom: 20rpx;\r\n\t\tmin-height: 80rpx;\r\n\t}\r\n\t\r\n\t.price-item:last-child {\r\n\t\tmargin-bottom: 0;\r\n\t}\r\n\t\r\n\t.label {\r\n\t\twidth: 160rpx;\r\n\t\tfont-size: 30rpx;\r\n\t\tcolor: #333333;\r\n\t}\r\n\t\r\n\t.price-input-wrapper {\r\n\t\tflex: 1;\r\n\t\tdisplay: flex;\r\n\t\talign-items: center;\r\n\t}\r\n\t\r\n\t.price-symbol {\r\n\t\tfont-size: 30rpx;\r\n\t\tcolor: #333333;\r\n\t\tmargin-right: 10rpx;\r\n\t}\r\n\t\r\n\t.price-input {\r\n\t\tflex: 1;\r\n\t\theight: 80rpx;\r\n\t\tfont-size: 30rpx;\r\n\t\tcolor: #333333;\r\n\t}\r\n\t\r\n\t.select-item {\r\n\t\tdisplay: flex;\r\n\t\talign-items: center;\r\n\t\tmargin-bottom: 20rpx;\r\n\t\tmin-height: 80rpx;\r\n\t}\r\n\t\r\n\t.select-item:last-child {\r\n\t\tmargin-bottom: 0;\r\n\t}\r\n\t\r\n\t.select-value {\r\n\t\tflex: 1;\r\n\t\tdisplay: flex;\r\n\t\talign-items: center;\r\n\t\tjustify-content: space-between;\r\n\t}\r\n\t\r\n\t.value-text {\r\n\t\tfont-size: 30rpx;\r\n\t\tcolor: #333333;\r\n\t}\r\n\t\r\n\t.tag-group {\r\n\t\tflex: 1;\r\n\t\tdisplay: flex;\r\n\t}\r\n\t\r\n\t.tag-item {\r\n\t\tpadding: 10rpx 20rpx;\r\n\t\tbackground-color: #f5f5f5;\r\n\t\tborder-radius: 8rpx;\r\n\t\tmargin-right: 20rpx;\r\n\t}\r\n\t\r\n\t.tag-item.active {\r\n\t\tbackground-color: #fff2f0;\r\n\t\tborder: 1rpx solid #fc3e2b;\r\n\t}\r\n\t\r\n\t.tag-text {\r\n\t\tfont-size: 26rpx;\r\n\t\tcolor: #666666;\r\n\t}\r\n\t\r\n\t.tag-item.active .tag-text {\r\n\t\tcolor: #fc3e2b;\r\n\t}\r\n\t\r\n\t.safe-area-bottom {\r\n\t\theight: 180rpx;\r\n\t}\r\n\t\r\n\t.bottom-bar {\r\n\t\tposition: fixed;\r\n\t\tleft: 0;\r\n\t\tright: 0;\r\n\t\tbottom: 0;\r\n\t\theight: 100rpx;\r\n\t\tbackground-color: #ffffff;\r\n\t\tdisplay: flex;\r\n\t\talign-items: center;\r\n\t\tpadding-bottom: env(safe-area-inset-bottom);\r\n\t\tbox-shadow: 0 -2rpx 8rpx rgba(0, 0, 0, 0.04);\r\n\t\tz-index: 99;\r\n\t}\r\n\t\r\n\t.draft-btn, .publish-btn {\r\n\t\tflex: 1;\r\n\t\theight: 100%;\r\n\t\tdisplay: flex;\r\n\t\talign-items: center;\r\n\t\tjustify-content: center;\r\n\t}\r\n\t\r\n\t.draft-text {\r\n\t\tfont-size: 30rpx;\r\n\t\tcolor: #666666;\r\n\t}\r\n\t\r\n\t.publish-btn {\r\n\t\tbackground: linear-gradient(to right, #ff8c00, #ff4500);\r\n\t}\r\n\t\r\n\t.publish-text {\r\n\t\tfont-size: 30rpx;\r\n\t\tcolor: #ffffff;\r\n\t\tfont-weight: 500;\r\n\t}\r\n\t\r\n\t.type-icon {\r\n\t\twidth: 48rpx;\r\n\t\theight: 48rpx;\r\n\t\tmargin-bottom: 8rpx;\r\n\t}\r\n</style> ","import MiniProgramPage from 'E:/Myxiangmu/chonggou/juzitongcheng/pages/publish/idle/index.vue'\nwx.createPage(MiniProgramPage)"],"names":["deviceMixin","mapState","isLoggedIn","uni","deviceInfo","getInfoCategories","API_BASE_URL","saveIdleDraft","createIdle","getIdleDraft"],"mappings":"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"}