{"version":3,"file":"index.js","sources":["pages/message/index.vue","D:/HBuilderX/plugins/uniapp-cli-vite/uniPage:/cGFnZXMvbWVzc2FnZS9pbmRleC52dWU"],"sourcesContent":["<template>\n\t<view class=\"message-container\">\n\t\t<!-- 顶部标题栏 -->\n\t\t<view class=\"header\">\n\t\t\t<view class=\"title-area\">\n\t\t\t\t<text class=\"title\">消息</text>\n\t\t\t\t<view class=\"clear-btn\" @click=\"handleClearRead\">\n\t\t\t\t\t<uni-icons type=\"trash\" size=\"16\" color=\"#666666\"></uni-icons>\n\t\t\t\t\t<text class=\"clear-text\">清除已读</text>\n\t\t\t\t</view>\n\t\t\t</view>\n\t\t</view>\n\t\t\n\t\t<!-- 占位元素 -->\n\t\t<view class=\"header-placeholder\"></view>\n\t\t\n\t\t<!-- 消息列表 -->\n\t\t<scroll-view \n\t\t\tclass=\"content-scroll\" \n\t\t\tscroll-y\n\t\t\t:show-scrollbar=\"false\"\n\t\t\t:enhanced=\"true\"\n\t\t\t:bounces=\"true\"\n\t\t\t:refresher-enabled=\"true\"\n\t\t\t:refresher-triggered=\"isRefreshing\"\n\t\t\trefresher-background=\"#ffffff\"\n\t\t\t@refresherrefresh=\"onRefresh\"\n\t\t\t@refresherrestore=\"onRestore\"\n\t\t>\n\t\t\t<!-- 系统消息 - 已注释 -->\n\t\t\t<!-- \n\t\t\t<view class=\"message-item system\" @tap=\"handleSystemClick\">\n\t\t\t\t<view class=\"avatar system-avatar\">\n\t\t\t\t\t<uni-icons type=\"notification-filled\" size=\"24\" color=\"#fc3e2b\"></uni-icons>\n\t\t\t\t</view>\n\t\t\t\t<view class=\"message-content\">\n\t\t\t\t\t<view class=\"message-top\">\n\t\t\t\t\t\t<text class=\"name\">系统通知</text>\n\t\t\t\t\t\t<text class=\"time\">{{systemMessage.time || ''}}</text>\n\t\t\t\t\t</view>\n\t\t\t\t\t<text class=\"preview\">{{systemMessage.lastMessage || '暂无系统通知'}}</text>\n\t\t\t\t</view>\n\t\t\t</view>\n\t\t\t-->\n\t\t\t\n\t\t\t<!-- 聊天消息 -->\n\t\t\t<view \n\t\t\t\tv-for=\"(item, index) in chatList\"\n\t\t\t\t:key=\"item.id || index\"\n\t\t\t\tclass=\"swipe-action-box\"\n\t\t\t>\n\t\t\t\t<uni-swipe-action>\n\t\t\t\t\t<uni-swipe-action-item \n\t\t\t\t\t\t:right-options=\"swipeOptions\" \n\t\t\t\t\t\t@click=\"(e) => handleSwipeClick(e, item)\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<view \n\t\t\t\t\t\t\tclass=\"message-item chat\"\n\t\t\t\t\t\t\t@tap=\"handleChatClick(item)\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<image class=\"avatar\" :src=\"item.targetAvatar || '/static/demo/0.png'\" mode=\"aspectFill\"></image>\n\t\t\t\t\t\t\t<view class=\"message-content\">\n\t\t\t\t\t\t\t\t<view class=\"message-top\">\n\t\t\t\t\t\t\t\t\t<text class=\"name\">{{ item.targetName || '用户' }}</text>\n\t\t\t\t\t\t\t\t\t<text class=\"time\">{{ item.time || '' }}</text>\n\t\t\t\t\t\t\t\t</view>\n\t\t\t\t\t\t\t\t<view class=\"message-bottom\">\n\t\t\t\t\t\t\t\t\t<text class=\"preview\">{{ item.lastMessage || '' }}</text>\n\t\t\t\t\t\t\t\t\t<view class=\"unread\" v-if=\"item.unreadCount && item.unreadCount > 0\">{{ item.unreadCount }}</view>\n\t\t\t\t\t\t\t\t</view>\n\t\t\t\t\t\t\t</view>\n\t\t\t\t\t\t</view>\n\t\t\t\t\t</uni-swipe-action-item>\n\t\t\t\t</uni-swipe-action>\n\t\t\t</view>\n\t\t\t\n\t\t\t<!-- 空状态展示 -->\n\t\t\t<view class=\"empty-state\" v-if=\"chatList.length === 0\">\n\t\t\t\t<image class=\"empty-icon\" src=\"/static/images/empty.png\" mode=\"aspectFit\"></image>\n\t\t\t\t<text class=\"empty-text\">暂无聊天消息</text>\n\t\t\t</view>\n\t\t\t\n\t\t\t<!-- 底部安全区域 -->\n\t\t\t<view class=\"safe-area-bottom\"></view>\n\t\t</scroll-view>\n\t\t\n\t\t<tab-bar :current-tab=\"tabIndex\"></tab-bar>\n\t</view>\n</template>\n\n<script>\n\timport TabBar from '@/components/tab-bar/index.vue'\n\timport deviceAdapter from '@/mixins/device-adapter.js'\n\timport shareMixin from '@/mixins/share.js'\n\timport { message } from '@/apis/index.js'\n\timport messagePollingService from '@/utils/message-polling.js'\n\t\n\texport default {\n\t\tcomponents: {\n\t\t\tTabBar\n\t\t},\n\t\tmixins: [deviceAdapter, shareMixin],\n\t\tdata() {\n\t\t\treturn {\n\t\t\t\ttabIndex: 2,\n\t\t\t\tisRefreshing: false,\n\t\t\t\ttotalUnreadCount: 0,\n\t\t\t\t// 系统消息 - 保留但不显示\n\t\t\t\tsystemMessage: {\n\t\t\t\t\tlastMessage: '暂无系统通知',\n\t\t\t\t\ttime: ''\n\t\t\t\t},\n\t\t\t\tchatList: [],\n\t\t\t\tpagination: {\n\t\t\t\t\tpage: 1,\n\t\t\t\t\tsize: 20,\n\t\t\t\t\ttotalCount: 0,\n\t\t\t\t\ttotalPage: 0\n\t\t\t\t},\n\t\t\t\tswipeOptions: [\n\t\t\t\t\t{\n\t\t\t\t\t\ttext: '已读',\n\t\t\t\t\t\tstyle: {\n\t\t\t\t\t\t\tbackgroundColor: '#8F8F94'\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\ttext: '删除',\n\t\t\t\t\t\tstyle: {\n\t\t\t\t\t\t\tbackgroundColor: '#dd524d'\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t\tconversationUnsubscribe: null, // 用于存储取消订阅函数\n\t\t\t\t_readSessionIds: {} // 用于记录已标记为已读的会话ID\n\t\t\t}\n\t\t},\n\t\tonLoad() {\n\t\t\t// 初始加载会话列表\n\t\t\tthis.fetchSessionList()\n\t\t\t\n\t\t\t// 订阅会话列表变化\n\t\t\tthis.startConversationPolling()\n\t\t},\n\t\tonShow() {\n\t\t\tthis.tabIndex = 3\n\t\t\t// 页面显示时开始轮询\n\t\t\tthis.startConversationPolling()\n\t\t},\n\t\tonHide() {\n\t\t\t// 页面隐藏时停止轮询\n\t\t\tthis.stopConversationPolling()\n\t\t},\n\t\tonUnload() {\n\t\t\t// 页面卸载时停止轮询\n\t\t\tthis.stopConversationPolling()\n\t\t},\n\t\tmethods: {\n\t\t\t// 开始会话列表轮询\n\t\t\tstartConversationPolling() {\n\t\t\t\t// 如果已经有订阅，先取消\n\t\t\t\tthis.stopConversationPolling()\n\t\t\t\t\n\t\t\t\t// 设置会话列表轮询为2秒一次，更快地获取最新数据\n\t\t\t\tmessagePollingService.setPollingInterval(2000)\n\t\t\t\t\n\t\t\t\t// 创建新的订阅\n\t\t\t\tthis.conversationUnsubscribe = messagePollingService.setConversationParams(\n\t\t\t\t\t{\n\t\t\t\t\t\tpage: this.pagination.page,\n\t\t\t\t\t\tsize: this.pagination.size\n\t\t\t\t\t},\n\t\t\t\t\tthis.handleConversationUpdate\n\t\t\t\t)\n\t\t\t},\n\t\t\t\n\t\t\t// 停止会话列表轮询\n\t\t\tstopConversationPolling() {\n\t\t\t\tif (this.conversationUnsubscribe) {\n\t\t\t\t\tthis.conversationUnsubscribe()\n\t\t\t\t\tthis.conversationUnsubscribe = null\n\t\t\t\t\t\n\t\t\t\t\t// 恢复默认间隔\n\t\t\t\t\tmessagePollingService.setPollingInterval(5000)\n\t\t\t\t}\n\t\t\t},\n\t\t\t\n\t\t\t// 处理会话列表更新\n\t\t\thandleConversationUpdate(data) {\n\t\t\t\tif (!data) return\n\t\t\t\t\n\t\t\t\tconst { list, totalCount, totalPage, currentPage, size } = data\n\t\t\t\t\n\t\t\t\t// 更新分页信息\n\t\t\t\tthis.pagination = {\n\t\t\t\t\tpage: currentPage,\n\t\t\t\t\tsize: size,\n\t\t\t\t\ttotalCount: totalCount,\n\t\t\t\t\ttotalPage: totalPage\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// 直接更新会话列表，确保每次都显示最新数据\n\t\t\t\tif (list && list.length > 0) {\n\t\t\t\t\tthis.chatList = list.map(item => {\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t...item,\n\t\t\t\t\t\t\ttime: this.formatTime(item.lastTime)\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t} else {\n\t\t\t\t\tthis.chatList = []\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// 已读消息处理：将本地标记为已读的消息与新获取的数据同步\n\t\t\t\tthis.chatList.forEach(item => {\n\t\t\t\t\tconst readItem = this._readSessionIds && this._readSessionIds[item.id]\n\t\t\t\t\tif (readItem) {\n\t\t\t\t\t\titem.unreadCount = 0\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t},\n\t\t\t\n\t\t\t// 处理滑动操作点击\n\t\t\tasync handleSwipeClick(e, item) {\n\t\t\t\tif (e.index === 0) {\n\t\t\t\t\t// 标记为已读\n\t\t\t\t\tawait this.markAsRead(item)\n\t\t\t\t} else if (e.index === 1) {\n\t\t\t\t\t// 删除会话\n\t\t\t\t\tawait this.deleteSession(item)\n\t\t\t\t}\n\t\t\t},\n\t\t\t\n\t\t\t// 标记会话为已读\n\t\t\tasync markAsRead(item) {\n\t\t\t\tif (!item.unreadCount || item.unreadCount <= 0) {\n\t\t\t\t\tuni.showToast({\n\t\t\t\t\t\ttitle: '没有未读消息',\n\t\t\t\t\t\ticon: 'none'\n\t\t\t\t\t})\n\t\t\t\t\treturn\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\ttry {\n\t\t\t\t\tuni.showLoading({\n\t\t\t\t\t\ttitle: '处理中...',\n\t\t\t\t\t\tmask: true\n\t\t\t\t\t})\n\t\t\t\t\t\n\t\t\t\t\t// 调用标记为已读API\n\t\t\t\t\tconst response = await message.markMessageRead({\n\t\t\t\t\t\ttargetId: item.targetId\n\t\t\t\t\t})\n\t\t\t\t\t\n\t\t\t\t\tif (response && response.code === 0) {\n\t\t\t\t\t\t// 更新本地未读消息数\n\t\t\t\t\t\tconst index = this.chatList.findIndex(chat => chat.id === item.id)\n\t\t\t\t\t\tif (index !== -1) {\n\t\t\t\t\t\t\t// 保存原来的未读消息数，用于更新总计数\n\t\t\t\t\t\t\tconst previousUnread = this.chatList[index].unreadCount || 0\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t// 更新会话的未读消息数为0\n\t\t\t\t\t\t\tthis.chatList[index].unreadCount = 0\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t// 记录这个会话ID为已读\n\t\t\t\t\t\t\tthis._readSessionIds[item.id] = true\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t// 更新总的未读消息计数\n\t\t\t\t\t\t\tif (previousUnread > 0) {\n\t\t\t\t\t\t\t\tthis.totalUnreadCount = Math.max(0, this.totalUnreadCount - previousUnread)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tuni.showToast({\n\t\t\t\t\t\t\ttitle: '已标记为已读',\n\t\t\t\t\t\t\ticon: 'success'\n\t\t\t\t\t\t})\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthrow new Error(response?.message || '标记为已读失败')\n\t\t\t\t\t}\n\t\t\t\t} catch (error) {\n\t\t\t\t\tconsole.error('标记为已读失败:', error)\n\t\t\t\t\tuni.showToast({\n\t\t\t\t\t\ttitle: '标记为已读失败',\n\t\t\t\t\t\ticon: 'none'\n\t\t\t\t\t})\n\t\t\t\t} finally {\n\t\t\t\t\tuni.hideLoading()\n\t\t\t\t}\n\t\t\t},\n\t\t\t\n\t\t\t// 删除会话\n\t\t\tasync deleteSession(item) {\n\t\t\t\tuni.showModal({\n\t\t\t\t\ttitle: '提示',\n\t\t\t\t\tcontent: '确定要删除此会话吗？',\n\t\t\t\t\tsuccess: async (res) => {\n\t\t\t\t\t\tif (res.confirm) {\n\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\tuni.showLoading({\n\t\t\t\t\t\t\t\t\ttitle: '处理中...',\n\t\t\t\t\t\t\t\t\tmask: true\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t// 调用删除会话API\n\t\t\t\t\t\t\t\tconst response = await message.deleteConversation(item.id)\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tuni.hideLoading()\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tif (response && response.code === 0 && response.data && response.data.success) {\n\t\t\t\t\t\t\t\t\t// 更新本地会话列表\n\t\t\t\t\t\t\t\t\tconst index = this.chatList.findIndex(chat => chat.id === item.id)\n\t\t\t\t\t\t\t\t\tif (index !== -1) {\n\t\t\t\t\t\t\t\t\t\t// 如果有未读消息，减少总未读数\n\t\t\t\t\t\t\t\t\t\tconst previousUnread = this.chatList[index].unreadCount || 0\n\t\t\t\t\t\t\t\t\t\tif (previousUnread > 0) {\n\t\t\t\t\t\t\t\t\t\t\tthis.totalUnreadCount = Math.max(0, this.totalUnreadCount - previousUnread)\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t// 从本地列表中移除\n\t\t\t\t\t\t\t\t\t\tthis.chatList.splice(index, 1)\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\tuni.showToast({\n\t\t\t\t\t\t\t\t\t\ttitle: '已删除会话',\n\t\t\t\t\t\t\t\t\t\ticon: 'success'\n\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tthrow new Error(response?.message || '删除会话失败')\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\t\t\tuni.hideLoading()\n\t\t\t\t\t\t\t\tconsole.error('删除会话失败:', error)\n\t\t\t\t\t\t\t\tuni.showToast({\n\t\t\t\t\t\t\t\t\ttitle: '删除会话失败',\n\t\t\t\t\t\t\t\t\ticon: 'none'\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t},\n\t\t\t\n\t\t\t// 获取聊天会话列表\n\t\t\tasync fetchSessionList() {\n\t\t\t\ttry {\n\t\t\t\t\tuni.showLoading({\n\t\t\t\t\t\ttitle: '加载中...',\n\t\t\t\t\t\tmask: true\n\t\t\t\t\t})\n\t\t\t\t\t\n\t\t\t\t\tconst res = await message.getConversationList({\n\t\t\t\t\t\tpage: this.pagination.page,\n\t\t\t\t\t\tsize: this.pagination.size\n\t\t\t\t\t})\n\t\t\t\t\t\n\t\t\t\t\tif (res && res.code === 0) {\n\t\t\t\t\t\tconst { list, totalCount, totalPage, currentPage, size } = res.data\n\t\t\t\t\t\t\n\t\t\t\t\t\t// 更新分页信息\n\t\t\t\t\t\tthis.pagination = {\n\t\t\t\t\t\t\tpage: currentPage,\n\t\t\t\t\t\t\tsize: size,\n\t\t\t\t\t\t\ttotalCount: totalCount,\n\t\t\t\t\t\t\ttotalPage: totalPage\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\t// 更新轮询服务的参数\n\t\t\t\t\t\tmessagePollingService.updateConversationParams({\n\t\t\t\t\t\t\tpage: currentPage,\n\t\t\t\t\t\t\tsize: size\n\t\t\t\t\t\t})\n\t\t\t\t\t\t\n\t\t\t\t\t\t// 更新会话列表\n\t\t\t\t\t\tif (list && list.length > 0) {\n\t\t\t\t\t\t\tthis.chatList = list.map(item => {\n\t\t\t\t\t\t\t\t// 不在这里直接创建Date对象，而是传递原始字符串到formatTime中处理\n\t\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\t\t...item,\n\t\t\t\t\t\t\t\t\ttime: this.formatTime(item.lastTime)\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthis.chatList = []\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthrow new Error(res?.message || '获取会话列表失败')\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tuni.hideLoading()\n\t\t\t\t} catch (error) {\n\t\t\t\t\tconsole.error('获取聊天会话列表失败:', error)\n\t\t\t\t\tuni.showToast({\n\t\t\t\t\t\ttitle: '获取会话列表失败',\n\t\t\t\t\t\ticon: 'none'\n\t\t\t\t\t})\n\t\t\t\t\tuni.hideLoading()\n\t\t\t\t}\n\t\t\t},\n\t\t\t\n\t\t\t// 清除所有已读消息\n\t\t\thandleClearRead() {\n\t\t\t\tuni.showModal({\n\t\t\t\t\ttitle: '提示',\n\t\t\t\t\tcontent: '确定要清除所有已读消息吗？',\n\t\t\t\t\tsuccess: async (res) => {\n\t\t\t\t\t\tif (res.confirm) {\n\t\t\t\t\t\t\tuni.showLoading({\n\t\t\t\t\t\t\t\ttitle: '处理中...',\n\t\t\t\t\t\t\t\tmask: true\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\t// 获取目前的会话列表\n\t\t\t\t\t\t\t\tconst hasReadItems = this.chatList.filter(item => !item.unreadCount || item.unreadCount === 0);\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t// 如果没有已读消息，提示用户\n\t\t\t\t\t\t\t\tif (hasReadItems.length === 0) {\n\t\t\t\t\t\t\t\t\tuni.hideLoading();\n\t\t\t\t\t\t\t\t\tuni.showToast({\n\t\t\t\t\t\t\t\t\t\ttitle: '没有可清除的已读消息',\n\t\t\t\t\t\t\t\t\t\ticon: 'none'\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t// 逐个删除已读会话\n\t\t\t\t\t\t\t\tlet successCount = 0;\n\t\t\t\t\t\t\t\tfor (const item of hasReadItems) {\n\t\t\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\t\t\tconst response = await message.deleteConversation(item.id);\n\t\t\t\t\t\t\t\t\t\tif (response && response.code === 0 && response.data && response.data.success) {\n\t\t\t\t\t\t\t\t\t\t\tsuccessCount++;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t} catch (err) {\n\t\t\t\t\t\t\t\t\t\tconsole.error(`删除会话 ${item.id} 失败:`, err);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t// 更新本地会话列表，移除所有已读会话\n\t\t\t\t\t\t\t\tthis.chatList = this.chatList.filter(item => item.unreadCount && item.unreadCount > 0);\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tuni.hideLoading();\n\t\t\t\t\t\t\t\tuni.showToast({\n\t\t\t\t\t\t\t\t\ttitle: `已清除${successCount}个已读会话`,\n\t\t\t\t\t\t\t\t\ticon: 'success'\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\t\t\tuni.hideLoading();\n\t\t\t\t\t\t\t\tconsole.error('清除已读消息失败:', error);\n\t\t\t\t\t\t\t\tuni.showToast({\n\t\t\t\t\t\t\t\t\ttitle: '清除已读消息失败',\n\t\t\t\t\t\t\t\t\ticon: 'none'\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t},\n\t\t\t\n\t\t\t// 聊天项点击处理\n\t\t\tasync handleChatClick(chat) {\n\t\t\t\t// 跳转到聊天详情页\n\t\t\t\tuni.navigateTo({\n\t\t\t\t\turl: `/pages/chat/detail?id=${chat.targetId}&nickName=${encodeURIComponent(chat.targetName || '用户')}`,\n\t\t\t\t\tsuccess: async () => {\n\t\t\t\t\t\t// 清除该聊天的未读消息\n\t\t\t\t\t\tif (chat.unreadCount && chat.unreadCount > 0) {\n\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\tconst response = await message.clearSessionUnread(chat.id)\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tif (response && response.code === 0) {\n\t\t\t\t\t\t\t\t\t// 更新本地未读消息数\n\t\t\t\t\t\t\t\t\tconst index = this.chatList.findIndex(item => item.id === chat.id)\n\t\t\t\t\t\t\t\t\tif (index !== -1) {\n\t\t\t\t\t\t\t\t\t\t// 保存原来的未读消息数，用于更新总计数\n\t\t\t\t\t\t\t\t\t\tconst previousUnread = this.chatList[index].unreadCount || 0\n\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t// 更新会话的未读消息数为0\n\t\t\t\t\t\t\t\t\t\tthis.chatList[index].unreadCount = 0\n\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t// 记录这个会话ID为已读\n\t\t\t\t\t\t\t\t\t\tthis._readSessionIds[chat.id] = true\n\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t// 更新总的未读消息计数\n\t\t\t\t\t\t\t\t\t\tif (previousUnread > 0) {\n\t\t\t\t\t\t\t\t\t\t\tthis.totalUnreadCount = Math.max(0, this.totalUnreadCount - previousUnread)\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\t\t\tconsole.error('清除会话未读消息失败:', error)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t},\n\t\t\t\n\t\t\t// 处理系统消息点击 - 已注释\n\t\t\t/*\n\t\t\thandleSystemClick() {\n\t\t\t\tuni.navigateTo({\n\t\t\t\t\turl: '/pages/notification/index'\n\t\t\t\t})\n\t\t\t},\n\t\t\t*/\n\t\t\t\n\t\t\t// 下拉刷新处理\n\t\t\tasync onRefresh() {\n\t\t\t\tif (this.isRefreshing) return\n\t\t\t\tthis.isRefreshing = true\n\t\t\t\t\n\t\t\t\ttry {\n\t\t\t\t\t// 重置分页\n\t\t\t\t\tthis.pagination.page = 1\n\t\t\t\t\t\n\t\t\t\t\t// 重新获取会话列表\n\t\t\t\t\tawait this.fetchSessionList()\n\t\t\t\t\t\n\t\t\t\t\tuni.showToast({\n\t\t\t\t\t\ttitle: '刷新成功',\n\t\t\t\t\t\ticon: 'success'\n\t\t\t\t\t})\n\t\t\t\t} catch (error) {\n\t\t\t\t\tconsole.error('刷新失败:', error)\n\t\t\t\t\tuni.showToast({\n\t\t\t\t\t\ttitle: '刷新失败',\n\t\t\t\t\t\ticon: 'none'\n\t\t\t\t\t})\n\t\t\t\t} finally {\n\t\t\t\t\tthis.isRefreshing = false\n\t\t\t\t}\n\t\t\t},\n\t\t\t\n\t\t\t// 刷新复位\n\t\t\tonRestore() {\n\t\t\t\tconsole.log('刷新复位')\n\t\t\t},\n\t\t\t\n\t\t\t// 格式化时间显示\n\t\t\tformatTime(timestamp) {\n\t\t\t\tif (!timestamp) return ''\n\t\t\t\t\n\t\t\t\t// 处理日期字符串兼容性\n\t\t\t\tlet msgDate;\n\t\t\t\tif (typeof timestamp === 'string') {\n\t\t\t\t\t// 将 \"yyyy-MM-dd HH:mm:ss\" 转换为 \"yyyy/MM/dd HH:mm:ss\" 格式，兼容iOS\n\t\t\t\t\tconst formattedTimestamp = timestamp.replace(/-/g, '/');\n\t\t\t\t\tmsgDate = new Date(formattedTimestamp);\n\t\t\t\t} else {\n\t\t\t\t\tmsgDate = new Date(timestamp);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// 检查是否为有效日期\n\t\t\t\tif (isNaN(msgDate.getTime())) {\n\t\t\t\t\tconsole.error('Invalid date format:', timestamp);\n\t\t\t\t\treturn '';\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tconst now = new Date()\n\t\t\t\tconst diffDays = Math.floor((now - msgDate) / (24 * 60 * 60 * 1000))\n\t\t\t\t\n\t\t\t\t// 获取时间部分\n\t\t\t\tconst hours = msgDate.getHours().toString().padStart(2, '0')\n\t\t\t\tconst minutes = msgDate.getMinutes().toString().padStart(2, '0')\n\t\t\t\tconst timeStr = `${hours}:${minutes}`\n\t\t\t\t\n\t\t\t\t// 今天的消息只显示时间\n\t\t\t\tif (diffDays === 0) {\n\t\t\t\t\treturn timeStr\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// 昨天的消息\n\t\t\t\tif (diffDays === 1) {\n\t\t\t\t\treturn '昨天'\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// 一周内的消息\n\t\t\t\tif (diffDays < 7) {\n\t\t\t\t\tconst weekdays = ['周日', '周一', '周二', '周三', '周四', '周五', '周六']\n\t\t\t\t\treturn weekdays[msgDate.getDay()]\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// 更早的消息显示日期\n\t\t\t\tconst month = (msgDate.getMonth() + 1).toString().padStart(2, '0')\n\t\t\t\tconst day = msgDate.getDate().toString().padStart(2, '0')\n\t\t\t\treturn `${month}-${day}`\n\t\t\t}\n\t\t}\n\t}\n</script>\n\n<style>\n\t.message-container {\n\t\tdisplay: flex;\n\t\tflex-direction: column;\n\t\theight: 100vh;\n\t\tbackground-color: #ffffff;\n\t}\n\t\n\t.header {\n\t\tposition: fixed;\n\t\ttop: 0;\n\t\tleft: 0;\n\t\tright: 0;\n\t\tz-index: 99;\n\t\tbackground-color: #ffffff;\n\t\tpadding: 0 30rpx;\n\t\tbox-shadow: 0 2rpx 8rpx rgba(0, 0, 0, 0.05);\n\t}\n\t\n\t.title-area {\n\t\tdisplay: flex;\n\t\talign-items: center;\n\t\tjustify-content: space-between;\n\t\theight: 88rpx;\n\t}\n\t\n\t.title {\n\t\tfont-size: 36rpx;\n\t\tfont-weight: bold;\n\t\tcolor: #333333;\n\t}\n\t\n\t.header-placeholder {\n\t\theight: 88rpx;\n\t\tflex-shrink: 0;\n\t}\n\t\n\t.content-scroll {\n\t\tflex: 1;\n\t\tbackground-color: #ffffff;\n\t\tz-index: 1;\n\t\toverflow-y: auto;\n\t\t-webkit-overflow-scrolling: touch;\n\t}\n\t\n\t.message-item {\n\t\tdisplay: flex;\n\t\talign-items: center;\n\t\tpadding: 20rpx 30rpx;\n\t\tbackground-color: #ffffff;\n\t}\n\t\n\t.swipe-action-box {\n\t\tborder-bottom: 1rpx solid #f5f5f5;\n\t}\n\t\n\t.swipe-action-box:last-child {\n\t\tborder-bottom: none;\n\t}\n\t\n\t.avatar {\n\t\twidth: 88rpx;\n\t\theight: 88rpx;\n\t\tborder-radius: 50%;\n\t\tmargin-right: 20rpx;\n\t}\n\t\n\t.system-avatar {\n\t\tbackground-color: #fff2f0;\n\t\tdisplay: flex;\n\t\talign-items: center;\n\t\tjustify-content: center;\n\t\twidth: 88rpx;\n\t\theight: 88rpx;\n\t\tborder-radius: 50%;\n\t\tmargin-right: 20rpx;\n\t}\n\t\n\t.message-content {\n\t\tflex: 1;\n\t}\n\t\n\t.message-top {\n\t\tdisplay: flex;\n\t\tjustify-content: space-between;\n\t\talign-items: center;\n\t\tmargin-bottom: 8rpx;\n\t}\n\t\n\t.name {\n\t\tfont-size: 30rpx;\n\t\tcolor: #333333;\n\t\tfont-weight: 500;\n\t}\n\t\n\t.time {\n\t\tfont-size: 24rpx;\n\t\tcolor: #999999;\n\t}\n\t\n\t.message-bottom {\n\t\tdisplay: flex;\n\t\tjustify-content: space-between;\n\t\talign-items: center;\n\t}\n\t\n\t.preview {\n\t\tfont-size: 26rpx;\n\t\tcolor: #666666;\n\t\tflex: 1;\n\t\twhite-space: nowrap;\n\t\toverflow: hidden;\n\t\ttext-overflow: ellipsis;\n\t}\n\t\n\t.unread {\n\t\tmin-width: 36rpx;\n\t\theight: 36rpx;\n\t\tpadding: 0 10rpx;\n\t\tbackground-color: #fc3e2b;\n\t\tborder-radius: 18rpx;\n\t\tcolor: #ffffff;\n\t\tfont-size: 24rpx;\n\t\tdisplay: flex;\n\t\talign-items: center;\n\t\tjustify-content: center;\n\t\tmargin-left: 12rpx;\n\t\tflex-shrink: 0;\n\t}\n\t\n\t.clear-btn {\n\t\tdisplay: flex;\n\t\talign-items: center;\n\t\tpadding: 8rpx 16rpx;\n\t\tbackground-color: #f5f5f5;\n\t\tborder-radius: 24rpx;\n\t}\n\t\n\t.clear-text {\n\t\tfont-size: 24rpx;\n\t\tcolor: #666666;\n\t\tmargin-left: 4rpx;\n\t}\n\t\n\t.safe-area-bottom {\n\t\theight: calc(100rpx + env(safe-area-inset-bottom));\n\t}\n\t\n\t.empty-state {\n\t\tdisplay: flex;\n\t\tflex-direction: column;\n\t\talign-items: center;\n\t\tjustify-content: center;\n\t\tpadding: 100rpx 0;\n\t}\n\t\n\t.empty-icon {\n\t\twidth: 200rpx;\n\t\theight: 200rpx;\n\t\tmargin-bottom: 20rpx;\n\t}\n\t\n\t.empty-text {\n\t\tfont-size: 28rpx;\n\t\tcolor: #999999;\n\t}\n</style>\n","import MiniProgramPage from 'E:/Myxiangmu/chonggou/juzitongcheng/pages/message/index.vue'\nwx.createPage(MiniProgramPage)"],"names":["deviceAdapter","shareMixin","messagePollingService","uni","message"],"mappings":"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"}