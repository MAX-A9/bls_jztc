{"version":3,"file":"detail.js","sources":["pages/chat/detail.vue","D:/HBuilderX/plugins/uniapp-cli-vite/uniPage:/cGFnZXMvY2hhdC9kZXRhaWwudnVl"],"sourcesContent":["<template>\n\t<view class=\"chat-container\" @tap=\"hideMorePanel\">\n\t\t<!-- 聊天内容区域 -->\n\t\t<scroll-view \n\t\t\tclass=\"chat-content\" \n\t\t\tscroll-y \n\t\t\t:scroll-into-view=\"'msg-' + (messageList.length - 1)\"\n\t\t\t:scroll-with-animation=\"false\"\n\t\t\t:show-scrollbar=\"false\"\n\t\t\t:enhanced=\"true\"\n\t\t\t:bounces=\"true\"\n\t\t\tref=\"chatScroll\"\n\t\t\t@tap=\"hideMorePanel\"\n\t\t>\n\t\t\t<!-- 日期分割线 -->\n\t\t\t<view class=\"date-divider\">\n\t\t\t\t<text>{{ currentDate }}</text>\n\t\t\t</view>\n\t\t\t\n\t\t\t<!-- 聊天消息列表 -->\n\t\t\t<view class=\"message-list\">\n\t\t\t\t<view \n\t\t\t\t\tv-for=\"(message, index) in messageList\" \n\t\t\t\t\t:key=\"index\"\n\t\t\t\t\t:class=\"['message-item', message.isSelf ? 'self' : 'other']\"\n\t\t\t\t\t:id=\"'msg-' + index\"\n\t\t\t\t>\n\t\t\t\t\t<!-- 左侧头像区域（对方） -->\n\t\t\t\t\t<view v-if=\"!message.isSelf\" class=\"avatar-container left\">\n\t\t\t\t\t\t<image \n\t\t\t\t\t\t\tclass=\"avatar\" \n\t\t\t\t\t\t\t:src=\"message.senderAvatar\" \n\t\t\t\t\t\t\tmode=\"aspectFill\"\n\t\t\t\t\t\t></image>\n\t\t\t\t\t</view>\n\t\t\t\t\t\n\t\t\t\t\t<!-- 消息气泡 -->\n\t\t\t\t\t<view class=\"message-bubble\">\n\t\t\t\t\t\t<!-- 文本消息 -->\n\t\t\t\t\t\t<view v-if=\"message.type === 'text'\" class=\"text-message\">\n\t\t\t\t\t\t\t<text>{{ message.content }}</text>\n\t\t\t\t\t\t</view>\n\t\t\t\t\t\t\n\t\t\t\t\t\t<!-- 图片消息 -->\n\t\t\t\t\t\t<image \n\t\t\t\t\t\t\tv-else-if=\"message.type === 'image'\" \n\t\t\t\t\t\t\tclass=\"image-message\" \n\t\t\t\t\t\t\t:src=\"message.content\" \n\t\t\t\t\t\t\tmode=\"widthFix\"\n\t\t\t\t\t\t\t@tap.stop=\"previewImage(message.content)\"\n\t\t\t\t\t\t></image>\n\t\t\t\t\t\t\n\t\t\t\t\t\t<!-- 商品卡片 -->\n\t\t\t\t\t\t<view v-else-if=\"message.type === 'product'\" class=\"product-card\">\n\t\t\t\t\t\t\t<image class=\"product-image\" :src=\"message.content.image\" mode=\"aspectFill\"></image>\n\t\t\t\t\t\t\t<view class=\"product-info\">\n\t\t\t\t\t\t\t\t<text class=\"product-title\">{{ message.content.title }}</text>\n\t\t\t\t\t\t\t\t<text class=\"product-price\">¥{{ message.content.price }}</text>\n\t\t\t\t\t\t\t</view>\n\t\t\t\t\t\t</view>\n\t\t\t\t\t</view>\n\t\t\t\t\t\n\t\t\t\t\t<!-- 右侧头像区域（自己） -->\n\t\t\t\t\t<view v-if=\"message.isSelf\" class=\"avatar-container right\">\n\t\t\t\t\t\t<image \n\t\t\t\t\t\t\tclass=\"avatar\" \n\t\t\t\t\t\t\t:src=\"message.senderAvatar\" \n\t\t\t\t\t\t\tmode=\"aspectFill\"\n\t\t\t\t\t\t></image>\n\t\t\t\t\t</view>\n\t\t\t\t</view>\n\t\t\t</view>\n\t\t\t\n\t\t\t<!-- 底部留白，确保最后一条消息可以完全显示 -->\n\t\t\t<view class=\"bottom-space\"></view>\n\t\t</scroll-view>\n\t\t\n\t\t<!-- 输入区域 -->\n\t\t<view class=\"footer\">\n\t\t\t<view class=\"input-area\">\n\t\t\t\t<view class=\"input-box\" @tap.stop=\"focusInput\">\n\t\t\t\t\t<input \n\t\t\t\t\t\ttype=\"text\" \n\t\t\t\t\t\tv-model=\"inputMessage\" \n\t\t\t\t\t\tplaceholder=\"想跟TA说点什么...\" \n\t\t\t\t\t\tconfirm-type=\"send\"\n\t\t\t\t\t\t:focus=\"inputFocus\"\n\t\t\t\t\t\t@confirm=\"sendTextMessage\"\n\t\t\t\t\t\t@focus=\"onInputFocus\"\n\t\t\t\t\t\t@blur=\"onInputBlur\"\n\t\t\t\t\t\t:adjust-position=\"true\"\n\t\t\t\t\t\t:cursor-spacing=\"10\"\n\t\t\t\t\t/>\n\t\t\t\t</view>\n\t\t\t\t<view \n\t\t\t\t\tclass=\"action-btn\" \n\t\t\t\t\t:class=\"{'send-btn': inputMessage.trim()}\"\n\t\t\t\t\t@tap.stop=\"inputMessage.trim() ? sendTextMessage() : toggleMorePanel()\"\n\t\t\t\t>\n\t\t\t\t\t<text v-if=\"inputMessage.trim()\">发送</text>\n\t\t\t\t\t<uni-icons v-else type=\"plusempty\" size=\"24\" color=\"#333333\"></uni-icons>\n\t\t\t\t</view>\n\t\t\t</view>\n\t\t\t\n\t\t\t<!-- 更多功能面板 -->\n\t\t\t<view class=\"more-panel\" v-if=\"showMorePanel && !keyboardVisible\" @tap.stop>\n\t\t\t\t<view class=\"more-grid\">\n\t\t\t\t\t<view class=\"more-item\" @tap.stop=\"chooseImage\">\n\t\t\t\t\t\t<view class=\"more-icon\">\n\t\t\t\t\t\t\t<uni-icons type=\"image\" size=\"24\" color=\"#ffffff\"></uni-icons>\n\t\t\t\t\t\t</view>\n\t\t\t\t\t\t<text class=\"more-text\">图片</text>\n\t\t\t\t\t</view>\n\t\t\t\t\t\n\t\t\t\t\t<view class=\"more-item\" @tap.stop=\"chooseLocation\">\n\t\t\t\t\t\t<view class=\"more-icon location-icon\">\n\t\t\t\t\t\t\t<uni-icons type=\"location\" size=\"24\" color=\"#ffffff\"></uni-icons>\n\t\t\t\t\t\t</view>\n\t\t\t\t\t\t<text class=\"more-text\">位置</text>\n\t\t\t\t\t</view>\n\t\t\t\t\t\n\t\t\t\t\t<view class=\"more-item\" @tap.stop=\"shareProduct\">\n\t\t\t\t\t\t<view class=\"more-icon product-icon\">\n\t\t\t\t\t\t\t<uni-icons type=\"shop\" size=\"24\" color=\"#ffffff\"></uni-icons>\n\t\t\t\t\t\t</view>\n\t\t\t\t\t\t<text class=\"more-text\">商品</text>\n\t\t\t\t\t</view>\n\t\t\t\t</view>\n\t\t\t</view>\n\t\t</view>\n\t</view>\n</template>\n\n<script>\n\timport { sendMessage, getMessageList, markMessageRead } from '@/apis/message.js'\n\timport messagePollingService from '@/utils/message-polling.js'\n\t\n\texport default {\n\t\tdata() {\n\t\t\treturn {\n\t\t\t\tchatId: null,\n\t\t\t\tchatInfo: {\n\t\t\t\t\tid: 0,\n\t\t\t\t\tname: '',\n\t\t\t\t\tavatar: ''\n\t\t\t\t},\n\t\t\t\tmessageList: [],\n\t\t\t\tinputMessage: '',\n\t\t\t\tshowMorePanel: false,\n\t\t\t\tinputFocus: false,\n\t\t\t\tcurrentDate: this.formatDate(new Date()),\n\t\t\t\tkeyboardVisible: false,\n\t\t\t\tuserAvatar: '',\n\t\t\t\tpagination: {\n\t\t\t\t\tpage: 1,\n\t\t\t\t\tsize: 20,\n\t\t\t\t\ttotalCount: 0,\n\t\t\t\t\ttotalPage: 0\n\t\t\t\t},\n\t\t\t\tisLoading: false,\n\t\t\t\tnickName: '', // 聊天对象昵称\n\t\t\t\t_markingAsRead: false,\n\t\t\t\tchatMessageUnsubscribe: null // 用于存储取消订阅函数\n\t\t\t}\n\t\t},\n\t\tonLoad(options) {\n\t\t\t// 获取聊天ID或会话ID\n\t\t\tif (options.id || options.sessionId) {\n\t\t\t\tthis.chatId = options.id || options.sessionId\n\t\t\t\t\n\t\t\t\t// 设置聊天对象名称（如果在URL参数中传递）\n\t\t\t\tif (options.nickName) {\n\t\t\t\t\tthis.nickName = decodeURIComponent(options.nickName)\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tthis.loadChatInfo()\n\t\t\t\tthis.loadChatHistory()\n\t\t\t\t\n\t\t\t\t// 设置用户头像\n\t\t\t\tconst userInfo = uni.getStorageSync('USER_INFO') || {};\n\t\t\t\tthis.userAvatar = userInfo.avatarUrl || '/static/demo/0.png';\n\t\t\t\t\n\t\t\t\t// 设置当前页面路径，通知消息轮询服务\n\t\t\t\tmessagePollingService.setCurrentPage('/pages/chat/detail');\n\t\t\t}\n\t\t},\n\t\tonReady() {\n\t\t\t// 设置导航栏标题\n\t\t\tif (this.chatInfo.name) {\n\t\t\t\tuni.setNavigationBarTitle({\n\t\t\t\t\ttitle: this.chatInfo.name\n\t\t\t\t})\n\t\t\t}\n\t\t},\n\t\t// 监听键盘高度变化\n\t\tonKeyboardHeightChange(e) {\n\t\t\tthis.keyboardVisible = e.height > 0\n\t\t\t\n\t\t\t// 如果键盘弹出，隐藏更多面板\n\t\t\tif (this.keyboardVisible) {\n\t\t\t\tthis.showMorePanel = false\n\t\t\t}\n\t\t},\n\t\t// 页面显示时标记消息为已读\n\t\tonShow() {\n\t\t\t// 确保chatId存在后再开始操作\n\t\t\tif (this.chatId) {\n\t\t\t\tconsole.log('聊天详情页面显示，chatId:', this.chatId);\n\t\t\t\t\n\t\t\t\t// 再次设置当前页面路径，确保轮询服务能识别白名单页面\n\t\t\t\tmessagePollingService.setCurrentPage('/pages/chat/detail');\n\t\t\t\t\n\t\t\t\t// 只在消息列表已加载的情况下标记为已读\n\t\t\t\tif (this.messageList.length > 0) {\n\t\t\t\t\tthis.markMessagesAsRead();\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// 页面显示时开始聊天轮询\n\t\t\t\tthis.startChatPolling();\n\t\t\t}\n\t\t},\n\t\t// 显示导航栏右侧按钮\n\t\tonNavigationBarButtonTap(e) {\n\t\t\tif (e.index === 0) {\n\t\t\t\tthis.showMoreOptions()\n\t\t\t}\n\t\t},\n\t\tonHide() {\n\t\t\t// 不再停止轮询，让白名单机制处理\n\t\t\tconsole.log('聊天详情页面隐藏');\n\t\t},\n\t\tonUnload() {\n\t\t\t// 页面卸载时通知轮询服务\n\t\t\tconsole.log('聊天详情页面卸载');\n\t\t\tthis.stopChatPolling();\n\t\t\tmessagePollingService.setCurrentPage('');\n\t\t},\n\t\tmethods: {\n\t\t\t// 加载聊天信息\n\t\t\tloadChatInfo() {\n\t\t\t\tif (this.nickName) {\n\t\t\t\t\t// 使用传递的昵称更新聊天信息\n\t\t\t\t\tthis.chatInfo = {\n\t\t\t\t\t\tid: this.chatId,\n\t\t\t\t\t\tname: this.nickName,\n\t\t\t\t\t\tavatar: '/static/demo/0.png' // 使用默认头像，后续会从消息中获取并更新\n\t\t\t\t\t};\n\t\t\t\t\t\n\t\t\t\t\t// 设置导航栏标题\n\t\t\t\t\tuni.setNavigationBarTitle({\n\t\t\t\t\t\ttitle: this.chatInfo.name\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\t// 可以通过API获取用户信息，这里使用简单处理\n\t\t\t\t\tthis.chatInfo = {\n\t\t\t\t\t\tid: this.chatId,\n\t\t\t\t\t\tname: '用户' + this.chatId,\n\t\t\t\t\t\tavatar: '/static/demo/0.png' // 使用默认头像，后续会从消息中获取并更新\n\t\t\t\t\t};\n\t\t\t\t\t\n\t\t\t\t\t// 设置导航栏标题\n\t\t\t\t\tuni.setNavigationBarTitle({\n\t\t\t\t\t\ttitle: this.chatInfo.name\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t},\n\t\t\t\n\t\t\t// 加载聊天历史\n\t\t\tasync loadChatHistory() {\n\t\t\t\tif (!this.chatId || this.isLoading) return;\n\t\t\t\t\n\t\t\t\tthis.isLoading = true;\n\t\t\t\t\n\t\t\t\ttry {\n\t\t\t\t\tuni.showLoading({\n\t\t\t\t\t\ttitle: '加载中...',\n\t\t\t\t\t\tmask: true\n\t\t\t\t\t});\n\t\t\t\t\t\n\t\t\t\t\tconst res = await getMessageList({\n\t\t\t\t\t\ttargetId: this.chatId,\n\t\t\t\t\t\tpage: this.pagination.page,\n\t\t\t\t\t\tsize: this.pagination.size\n\t\t\t\t\t});\n\t\t\t\t\t\n\t\t\t\t\tif (res && res.code === 0) {\n\t\t\t\t\t\tconst { list, totalCount, totalPage, currentPage, size } = res.data;\n\t\t\t\t\t\t\n\t\t\t\t\t\t// 更新分页信息\n\t\t\t\t\t\tthis.pagination = {\n\t\t\t\t\t\t\tpage: currentPage,\n\t\t\t\t\t\t\tsize: size,\n\t\t\t\t\t\t\ttotalCount: totalCount,\n\t\t\t\t\t\t\ttotalPage: totalPage\n\t\t\t\t\t\t};\n\t\t\t\t\t\t\n\t\t\t\t\t\t// 格式化消息列表\n\t\t\t\t\t\tif (list && list.length > 0) {\n\t\t\t\t\t\t\t// 先格式化消息\n\t\t\t\t\t\t\tconst formattedMessages = list.map(item => {\n\t\t\t\t\t\t\t\t// 将日期字符串转换为兼容 iOS 的格式\n\t\t\t\t\t\t\t\tconst formattedDate = item.createdAt ? item.createdAt.replace(/-/g, '/') : '';\n\t\t\t\t\t\t\t\tconst createdAtTime = formattedDate ? new Date(formattedDate).getTime() : 0;\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\t\ttype: 'text', // 默认都是文本消息\n\t\t\t\t\t\t\t\t\tcontent: item.content,\n\t\t\t\t\t\t\t\t\ttime: this.formatMessageTime(item.createdAt),\n\t\t\t\t\t\t\t\t\tisSelf: item.isSelf,\n\t\t\t\t\t\t\t\t\tid: item.id,\n\t\t\t\t\t\t\t\t\tsenderId: item.senderId,\n\t\t\t\t\t\t\t\t\tsenderName: item.senderName,\n\t\t\t\t\t\t\t\t\tsenderAvatar: item.senderAvatar || '/static/demo/0.png',\n\t\t\t\t\t\t\t\t\treceiverId: item.receiverId,\n\t\t\t\t\t\t\t\t\treceiverName: item.receiverName,\n\t\t\t\t\t\t\t\t\treceiverAvatar: item.receiverAvatar || '/static/demo/0.png',\n\t\t\t\t\t\t\t\t\tisRead: item.isRead,\n\t\t\t\t\t\t\t\t\tcreatedAt: createdAtTime // 用于排序\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t// 按照消息ID或创建时间升序排序，确保旧消息在上，新消息在下\n\t\t\t\t\t\t\tformattedMessages.sort((a, b) => a.id - b.id);\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tthis.messageList = formattedMessages;\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t// 标记消息为已读（只在这里调用一次）\n\t\t\t\t\t\t\tthis.markMessagesAsRead();\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// 如果没有消息，则显示空数组\n\t\t\t\t\t\t\tthis.messageList = [];\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthrow new Error(res?.message || '获取消息列表失败');\n\t\t\t\t\t}\n\t\t\t\t} catch (error) {\n\t\t\t\t\tconsole.error('加载聊天记录失败:', error);\n\t\t\t\t\tuni.showToast({\n\t\t\t\t\t\ttitle: '加载聊天记录失败',\n\t\t\t\t\t\ticon: 'none'\n\t\t\t\t\t});\n\t\t\t\t} finally {\n\t\t\t\t\tthis.isLoading = false;\n\t\t\t\t\tuni.hideLoading();\n\t\t\t\t}\n\t\t\t},\n\t\t\t\n\t\t\t// 格式化消息时间\n\t\t\tformatMessageTime(timestamp) {\n\t\t\t\tif (!timestamp) return '';\n\t\t\t\t\n\t\t\t\t// 对日期字符串进行兼容性处理\n\t\t\t\tlet dateObj;\n\t\t\t\tif (typeof timestamp === 'string') {\n\t\t\t\t\t// 将 \"yyyy-MM-dd HH:mm:ss\" 转换为 \"yyyy/MM/dd HH:mm:ss\" 格式，兼容iOS\n\t\t\t\t\tconst formattedTimestamp = timestamp.replace(/-/g, '/');\n\t\t\t\t\tdateObj = new Date(formattedTimestamp);\n\t\t\t\t} else {\n\t\t\t\t\tdateObj = new Date(timestamp);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// 检查是否为有效日期\n\t\t\t\tif (isNaN(dateObj.getTime())) {\n\t\t\t\t\tconsole.error('Invalid date format:', timestamp);\n\t\t\t\t\treturn '';\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\treturn this.formatTime(dateObj);\n\t\t\t},\n\t\t\t\n\t\t\t// 显示更多选项\n\t\t\tshowMoreOptions() {\n\t\t\t\tuni.showActionSheet({\n\t\t\t\t\titemList: ['清空聊天记录', '投诉', '加入黑名单'],\n\t\t\t\t\tsuccess: (res) => {\n\t\t\t\t\t\tswitch (res.tapIndex) {\n\t\t\t\t\t\t\tcase 0:\n\t\t\t\t\t\t\t\tthis.clearChatHistory()\n\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\tcase 1:\n\t\t\t\t\t\t\t\tthis.reportUser()\n\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\tcase 2:\n\t\t\t\t\t\t\t\tthis.blockUser()\n\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t},\n\t\t\t\n\t\t\t// 清空聊天记录\n\t\t\tclearChatHistory() {\n\t\t\t\tuni.showModal({\n\t\t\t\t\ttitle: '提示',\n\t\t\t\t\tcontent: '确定要清空聊天记录吗？',\n\t\t\t\t\tsuccess: (res) => {\n\t\t\t\t\t\tif (res.confirm) {\n\t\t\t\t\t\t\tthis.messageList = []\n\t\t\t\t\t\t\tuni.showToast({\n\t\t\t\t\t\t\t\ttitle: '已清空聊天记录',\n\t\t\t\t\t\t\t\ticon: 'success'\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t},\n\t\t\t\n\t\t\t// 投诉用户\n\t\t\treportUser() {\n\t\t\t\t// TODO: 实现投诉用户功能\n\t\t\t\tuni.showToast({\n\t\t\t\t\ttitle: '已提交投诉',\n\t\t\t\t\ticon: 'success'\n\t\t\t\t})\n\t\t\t},\n\t\t\t\n\t\t\t// 拉黑用户\n\t\t\tblockUser() {\n\t\t\t\tuni.showModal({\n\t\t\t\t\ttitle: '提示',\n\t\t\t\t\tcontent: '确定要将该用户加入黑名单吗？',\n\t\t\t\t\tsuccess: (res) => {\n\t\t\t\t\t\tif (res.confirm) {\n\t\t\t\t\t\t\t// TODO: 实现拉黑用户功能\n\t\t\t\t\t\t\tuni.showToast({\n\t\t\t\t\t\t\t\ttitle: '已加入黑名单',\n\t\t\t\t\t\t\t\ticon: 'success'\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t\t\t\tuni.navigateBack()\n\t\t\t\t\t\t\t}, 1500)\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t},\n\t\t\t\n\t\t\t// 聊天消息处理函数\n\t\t\thandleChatMessages(data) {\n\t\t\t\tif (!data || !data.list) return;\n\t\t\t\t\n\t\t\t\tconst { list } = data;\n\t\t\t\t\n\t\t\t\t// 如果有新消息\n\t\t\t\tif (list && list.length > 0) {\n\t\t\t\t\t// 格式化消息\n\t\t\t\t\tconst newMessages = list\n\t\t\t\t\t\t.filter(item => {\n\t\t\t\t\t\t\t// 过滤掉已有的消息（通过ID判断）\n\t\t\t\t\t\t\tconst exists = this.messageList.some(existing => existing.id === item.id);\n\t\t\t\t\t\t\treturn !exists;\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.map(item => {\n\t\t\t\t\t\t\t// 将日期字符串转换为兼容 iOS 的格式\n\t\t\t\t\t\t\tconst formattedDate = item.createdAt ? item.createdAt.replace(/-/g, '/') : '';\n\t\t\t\t\t\t\tconst createdAtTime = formattedDate ? new Date(formattedDate).getTime() : 0;\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\ttype: 'text', // 默认都是文本消息\n\t\t\t\t\t\t\t\tcontent: item.content,\n\t\t\t\t\t\t\t\ttime: this.formatMessageTime(item.createdAt),\n\t\t\t\t\t\t\t\tisSelf: item.isSelf,\n\t\t\t\t\t\t\t\tid: item.id,\n\t\t\t\t\t\t\t\tsenderId: item.senderId,\n\t\t\t\t\t\t\t\tsenderName: item.senderName,\n\t\t\t\t\t\t\t\tsenderAvatar: item.senderAvatar || '/static/demo/0.png',\n\t\t\t\t\t\t\t\treceiverId: item.receiverId,\n\t\t\t\t\t\t\t\treceiverName: item.receiverName,\n\t\t\t\t\t\t\t\treceiverAvatar: item.receiverAvatar || '/static/demo/0.png',\n\t\t\t\t\t\t\t\tisRead: item.isRead,\n\t\t\t\t\t\t\t\tcreatedAt: createdAtTime // 用于排序\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t});\n\t\t\t\t\t\n\t\t\t\t\t// 如果有新消息，添加到列表\n\t\t\t\t\tif (newMessages.length > 0) {\n\t\t\t\t\t\t// 按照消息ID或创建时间升序排序\n\t\t\t\t\t\tnewMessages.sort((a, b) => a.id - b.id);\n\t\t\t\t\t\t\n\t\t\t\t\t\t// 添加新消息到列表\n\t\t\t\t\t\tthis.messageList = [...this.messageList, ...newMessages];\n\t\t\t\t\t\t\n\t\t\t\t\t\t// 标记消息为已读\n\t\t\t\t\t\tthis.markMessagesAsRead();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t\t\n\t\t\t// 开始聊天轮询\n\t\t\tstartChatPolling() {\n\t\t\t\tif (!this.chatId) return;\n\t\t\t\t\n\t\t\t\t// 获取最后一条消息ID\n\t\t\t\tlet lastMsgId = 0;\n\t\t\t\tif (this.messageList.length > 0) {\n\t\t\t\t\tconst lastMsg = this.messageList[this.messageList.length - 1];\n\t\t\t\t\tlastMsgId = lastMsg.id || 0;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// 取消之前的订阅（如果有）\n\t\t\t\tthis.stopChatPolling();\n\t\t\t\t\n\t\t\t\t// 订阅聊天消息\n\t\t\t\tthis.chatMessageUnsubscribe = messagePollingService.setChatParams(\n\t\t\t\t\t{\n\t\t\t\t\t\ttargetId: this.chatId,\n\t\t\t\t\t\tlastId: lastMsgId\n\t\t\t\t\t},\n\t\t\t\t\tthis.handleChatMessages\n\t\t\t\t);\n\t\t\t},\n\t\t\t\n\t\t\t// 停止聊天轮询\n\t\t\tstopChatPolling() {\n\t\t\t\tif (this.chatMessageUnsubscribe) {\n\t\t\t\t\tthis.chatMessageUnsubscribe();\n\t\t\t\t\tthis.chatMessageUnsubscribe = null;\n\t\t\t\t}\n\t\t\t},\n\t\t\t\n\t\t\t// 发送文本消息成功后更新lastId\n\t\t\tupdateLastId(messageId) {\n\t\t\t\tif (messageId && this.chatId) {\n\t\t\t\t\tmessagePollingService.updateChatParams({ lastId: messageId });\n\t\t\t\t}\n\t\t\t},\n\t\t\t\n\t\t\t// 发送文本消息\n\t\t\tasync sendTextMessage() {\n\t\t\t\tif (!this.inputMessage.trim()) return\n\t\t\t\t\n\t\t\t\t// 保存输入内容\n\t\t\t\tconst messageContent = this.inputMessage.trim();\n\t\t\t\t\n\t\t\t\t// 先清空输入框\n\t\t\t\tthis.inputMessage = ''\n\t\t\t\t\n\t\t\t\t// 尝试发送消息\n\t\t\t\ttry {\n\t\t\t\t\t// 获取当前时间\n\t\t\t\t\tconst now = new Date();\n\t\t\t\t\t\n\t\t\t\t\t// 先添加到本地消息列表（乐观更新）\n\t\t\t\t\tconst tempMessage = {\n\t\t\t\t\t\ttype: 'text',\n\t\t\t\t\t\tcontent: messageContent,\n\t\t\t\t\t\ttime: this.formatTime(now),\n\t\t\t\t\t\tisSelf: true,\n\t\t\t\t\t\tsending: true, // 标记为发送中\n\t\t\t\t\t\tcreatedAt: now.getTime(), // 用于排序\n\t\t\t\t\t\tsenderAvatar: this.userAvatar || '/static/demo/0.png'\n\t\t\t\t\t};\n\t\t\t\t\t\n\t\t\t\t\tthis.messageList.push(tempMessage);\n\t\t\t\t\t\n\t\t\t\t\t// 隐藏更多面板\n\t\t\t\t\tthis.showMorePanel = false;\n\t\t\t\t\t\n\t\t\t\t\t// 调用发送消息API\n\t\t\t\t\tconst response = await sendMessage({\n\t\t\t\t\t\tcontent: messageContent,\n\t\t\t\t\t\treceiverId: parseInt(this.chatId)\n\t\t\t\t\t});\n\t\t\t\t\t\n\t\t\t\t\tif (response && response.code === 0) {\n\t\t\t\t\t\t// 发送成功，更新消息状态\n\t\t\t\t\t\tconst lastIndex = this.messageList.length - 1;\n\t\t\t\t\t\tif (lastIndex >= 0) {\n\t\t\t\t\t\t\tthis.messageList[lastIndex].sending = false;\n\t\t\t\t\t\t\tif (response.data && response.data.id) {\n\t\t\t\t\t\t\t\tthis.messageList[lastIndex].id = response.data.id;\n\t\t\t\t\t\t\t\t// 更新lastId\n\t\t\t\t\t\t\t\tthis.updateLastId(response.data.id);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthrow new Error(response?.message || '发送消息失败');\n\t\t\t\t\t}\n\t\t\t\t} catch (error) {\n\t\t\t\t\tconsole.error('发送消息失败:', error);\n\t\t\t\t\t\n\t\t\t\t\t// 移除最后一条消息（如果存在）或标记为发送失败\n\t\t\t\t\tconst lastIndex = this.messageList.length - 1;\n\t\t\t\t\tif (lastIndex >= 0 && this.messageList[lastIndex].sending) {\n\t\t\t\t\t\tthis.messageList[lastIndex].sending = false;\n\t\t\t\t\t\tthis.messageList[lastIndex].failed = true;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tuni.showToast({\n\t\t\t\t\t\ttitle: '发送失败，请重试',\n\t\t\t\t\t\ticon: 'none'\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t},\n\t\t\t\n\t\t\t// 切换更多功能面板\n\t\t\ttoggleMorePanel() {\n\t\t\t\tthis.showMorePanel = !this.showMorePanel\n\t\t\t\tthis.inputFocus = false\n\t\t\t},\n\t\t\t\n\t\t\t// 隐藏更多功能面板\n\t\t\thideMorePanel() {\n\t\t\t\tif (this.showMorePanel) {\n\t\t\t\t\tthis.showMorePanel = false\n\t\t\t\t}\n\t\t\t},\n\t\t\t\n\t\t\t// 聚焦输入框\n\t\t\tfocusInput() {\n\t\t\t\tthis.inputFocus = true\n\t\t\t\tthis.hideMorePanel()\n\t\t\t},\n\t\t\t\n\t\t\t// 输入框获得焦点\n\t\t\tonInputFocus(e) {\n\t\t\t\tthis.keyboardVisible = true\n\t\t\t},\n\t\t\t\n\t\t\t// 输入框失去焦点\n\t\t\tonInputBlur() {\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tthis.keyboardVisible = false\n\t\t\t\t}, 100)\n\t\t\t},\n\t\t\t\n\t\t\t// 选择图片\n\t\t\tchooseImage() {\n\t\t\t\tuni.chooseImage({\n\t\t\t\t\tcount: 1,\n\t\t\t\t\tsuccess: (res) => {\n\t\t\t\t\t\tconst tempFilePath = res.tempFilePaths[0]\n\t\t\t\t\t\t\n\t\t\t\t\t\t// 获取当前时间\n\t\t\t\t\t\tconst now = new Date();\n\t\t\t\t\t\t\n\t\t\t\t\t\t// 添加图片消息\n\t\t\t\t\t\tthis.messageList.push({\n\t\t\t\t\t\t\ttype: 'image',\n\t\t\t\t\t\t\tcontent: tempFilePath,\n\t\t\t\t\t\t\ttime: this.formatTime(now),\n\t\t\t\t\t\t\tisSelf: true,\n\t\t\t\t\t\t\tsending: true,\n\t\t\t\t\t\t\tcreatedAt: now.getTime() // 用于排序\n\t\t\t\t\t\t})\n\t\t\t\t\t\t\n\t\t\t\t\t\t// 隐藏更多面板\n\t\t\t\t\t\tthis.showMorePanel = false\n\t\t\t\t\t\t\n\t\t\t\t\t\t// TODO: 实际上传图片并发送消息的逻辑\n\t\t\t\t\t\tuni.showToast({\n\t\t\t\t\t\t\ttitle: '图片功能开发中',\n\t\t\t\t\t\t\ticon: 'none'\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t},\n\t\t\t\n\t\t\t// 选择位置\n\t\t\tchooseLocation() {\n\t\t\t\t// TODO: 实现选择位置功能\n\t\t\t\tuni.showToast({\n\t\t\t\t\ttitle: '选择位置功能开发中',\n\t\t\t\t\ticon: 'none'\n\t\t\t\t})\n\t\t\t\tthis.showMorePanel = false\n\t\t\t},\n\t\t\t\n\t\t\t// 分享商品\n\t\t\tshareProduct() {\n\t\t\t\t// TODO: 实现分享商品功能\n\t\t\t\tuni.showToast({\n\t\t\t\t\ttitle: '分享商品功能开发中',\n\t\t\t\t\ticon: 'none'\n\t\t\t\t})\n\t\t\t\tthis.showMorePanel = false\n\t\t\t},\n\t\t\t\n\t\t\t// 预览图片\n\t\t\tpreviewImage(url) {\n\t\t\t\t// 收集所有图片URL\n\t\t\t\tconst imageUrls = this.messageList\n\t\t\t\t\t.filter(msg => msg.type === 'image')\n\t\t\t\t\t.map(msg => msg.content)\n\t\t\t\t\n\t\t\t\tuni.previewImage({\n\t\t\t\t\tcurrent: url,\n\t\t\t\t\turls: imageUrls\n\t\t\t\t})\n\t\t\t},\n\t\t\t\n\t\t\t// 格式化日期\n\t\t\tformatDate(date) {\n\t\t\t\tconst year = date.getFullYear()\n\t\t\t\tconst month = date.getMonth() + 1\n\t\t\t\tconst day = date.getDate()\n\t\t\t\treturn `${year}年${month}月${day}日`\n\t\t\t},\n\t\t\t\n\t\t\t// 格式化时间\n\t\t\tformatTime(date) {\n\t\t\t\tconst hours = date.getHours().toString().padStart(2, '0')\n\t\t\t\tconst minutes = date.getMinutes().toString().padStart(2, '0')\n\t\t\t\treturn `${hours}:${minutes}`\n\t\t\t},\n\t\t\t\n\t\t\t// 标记消息为已读\n\t\t\tasync markMessagesAsRead() {\n\t\t\t\tif (!this.chatId) {\n\t\t\t\t\tconsole.error('无法标记消息为已读：chatId不存在');\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// 避免重复调用标记为已读\n\t\t\t\tif (this._markingAsRead) return;\n\t\t\t\tthis._markingAsRead = true;\n\t\t\t\t\n\t\t\t\ttry {\n\t\t\t\t\tconsole.log('标记消息为已读，targetId:', this.chatId);\n\t\t\t\t\t\n\t\t\t\t\t// 确保targetId是数字类型\n\t\t\t\t\tlet targetId = this.chatId;\n\t\t\t\t\tif (typeof targetId === 'string') {\n\t\t\t\t\t\ttargetId = parseInt(targetId);\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t// 调用API标记为已读\n\t\t\t\t\tconst response = await markMessageRead({\n\t\t\t\t\t\ttargetId: targetId\n\t\t\t\t\t});\n\t\t\t\t\t\n\t\t\t\t\tif (response && response.code === 0) {\n\t\t\t\t\t\tconsole.log('消息已成功标记为已读');\n\t\t\t\t\t\t\n\t\t\t\t\t\t// 更新本地消息列表中的已读状态\n\t\t\t\t\t\tthis.messageList.forEach(msg => {\n\t\t\t\t\t\t\tif (!msg.isSelf) {\n\t\t\t\t\t\t\t\tmsg.isRead = true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconsole.error('标记消息为已读失败:', response?.message || '未知错误');\n\t\t\t\t\t}\n\t\t\t\t} catch (error) {\n\t\t\t\t\tconsole.error('标记消息为已读请求失败:', error);\n\t\t\t\t} finally {\n\t\t\t\t\tthis._markingAsRead = false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n</script>\n\n<style>\n\t.chat-container {\n\t\tdisplay: flex;\n\t\tflex-direction: column;\n\t\theight: 100vh;\n\t\tbackground-color: #f5f5f5;\n\t\tposition: relative;\n\t}\n\t\n\t.chat-content {\n\t\tflex: 1;\n\t\theight: 0;\n\t\tpadding: 20rpx 30rpx;\n\t\tpadding-bottom: 120rpx;\n\t\tbox-sizing: border-box;\n\t}\n\t\n\t.date-divider {\n\t\tdisplay: flex;\n\t\tjustify-content: center;\n\t\tmargin: 20rpx 0;\n\t}\n\t\n\t.date-divider text {\n\t\tfont-size: 24rpx;\n\t\tcolor: #999999;\n\t\tbackground-color: rgba(0, 0, 0, 0.05);\n\t\tpadding: 6rpx 20rpx;\n\t\tborder-radius: 24rpx;\n\t}\n\t\n\t.message-list {\n\t\tdisplay: flex;\n\t\tflex-direction: column;\n\t}\n\t\n\t.message-item {\n\t\tdisplay: flex;\n\t\tmargin-bottom: 30rpx;\n\t\talign-items: flex-start;\n\t}\n\t\n\t.message-item.self {\n\t\tjustify-content: flex-end;\n\t}\n\t\n\t.avatar-container {\n\t\twidth: 80rpx;\n\t\tflex-shrink: 0;\n\t}\n\t\n\t.avatar-container.left {\n\t\tmargin-right: 20rpx;\n\t}\n\t\n\t.avatar-container.right {\n\t\tmargin-left: 20rpx;\n\t}\n\t\n\t.avatar {\n\t\twidth: 80rpx;\n\t\theight: 80rpx;\n\t\tborder-radius: 50%;\n\t\tflex-shrink: 0;\n\t}\n\t\n\t.message-bubble {\n\t\tmax-width: 70%;\n\t}\n\t\n\t.text-message {\n\t\tpadding: 20rpx;\n\t\tborder-radius: 12rpx;\n\t\tfont-size: 28rpx;\n\t\tline-height: 1.4;\n\t\tword-break: break-all;\n\t}\n\t\n\t.message-item.other .text-message {\n\t\tbackground-color: #ffffff;\n\t\tcolor: #333333;\n\t\tborder-top-left-radius: 0;\n\t}\n\t\n\t.message-item.self .text-message {\n\t\tbackground-color: #fc3e2b;\n\t\tcolor: #ffffff;\n\t\tborder-top-right-radius: 0;\n\t}\n\t\n\t.image-message {\n\t\tmax-width: 100%;\n\t\tborder-radius: 12rpx;\n\t}\n\t\n\t.product-card {\n\t\twidth: 400rpx;\n\t\tbackground-color: #ffffff;\n\t\tborder-radius: 12rpx;\n\t\toverflow: hidden;\n\t}\n\t\n\t.product-image {\n\t\twidth: 100%;\n\t\theight: 200rpx;\n\t}\n\t\n\t.product-info {\n\t\tpadding: 16rpx;\n\t}\n\t\n\t.product-title {\n\t\tfont-size: 28rpx;\n\t\tcolor: #333333;\n\t\tline-height: 1.4;\n\t\tmargin-bottom: 8rpx;\n\t\tdisplay: -webkit-box;\n\t\t-webkit-box-orient: vertical;\n\t\toverflow: hidden;\n\t}\n\t\n\t.product-price {\n\t\tfont-size: 32rpx;\n\t\tcolor: #fc3e2b;\n\t\tfont-weight: 500;\n\t}\n\t\n\t.bottom-space {\n\t\theight: 120rpx;\n\t\twidth: 100%;\n\t}\n\t\n\t.footer {\n\t\tposition: fixed;\n\t\tleft: 0;\n\t\tright: 0;\n\t\tbottom: 0;\n\t\tz-index: 100;\n\t}\n\t\n\t.input-area {\n\t\tdisplay: flex;\n\t\talign-items: center;\n\t\tbackground-color: #f8f8f8;\n\t\tborder-top: 1rpx solid #e5e5e5;\n\t\tpadding: 20rpx 30rpx;\n\t\tpadding-bottom: calc(20rpx + env(safe-area-inset-bottom));\n\t}\n\t\n\t.input-box {\n\t\tflex: 1;\n\t\tbackground-color: #ffffff;\n\t\tborder-radius: 36rpx;\n\t\tpadding: 0 20rpx;\n\t\theight: 72rpx;\n\t\tborder: 1rpx solid #e5e5e5;\n\t}\n\t\n\t.input-box input {\n\t\twidth: 100%;\n\t\theight: 100%;\n\t\tfont-size: 28rpx;\n\t}\n\t\n\t.action-btn {\n\t\theight: 72rpx;\n\t\tdisplay: flex;\n\t\talign-items: center;\n\t\tjustify-content: center;\n\t\tflex-shrink: 0;\n\t\tbackground-color: #f0f0f0;\n\t\tborder-radius: 36rpx;\n\t\tpadding: 0 24rpx;\n\t\tmargin-left: 16rpx;\n\t\tmin-width: 72rpx;\n\t}\n\t\n\t.action-btn text {\n\t\tfont-size: 28rpx;\n\t\tcolor: #666666;\n\t}\n\t\n\t.action-btn.send-btn {\n\t\tbackground-color: #ff8c00;\n\t\tbackground-image: linear-gradient(to right, #ff8c00, #ff4500);\n\t}\n\t\n\t.action-btn.send-btn text {\n\t\tcolor: #ffffff;\n\t}\n\t\n\t.more-panel {\n\t\tbackground-color: #ffffff;\n\t\tpadding: 20rpx 0;\n\t}\n\t\n\t.more-grid {\n\t\tdisplay: flex;\n\t\tpadding: 20rpx;\n\t}\n\t\n\t.more-item {\n\t\twidth: 120rpx;\n\t\tdisplay: flex;\n\t\tflex-direction: column;\n\t\talign-items: center;\n\t\tmargin-right: 40rpx;\n\t}\n\t\n\t.more-icon {\n\t\twidth: 100rpx;\n\t\theight: 100rpx;\n\t\tbackground-color: #fc3e2b;\n\t\tborder-radius: 20rpx;\n\t\tdisplay: flex;\n\t\talign-items: center;\n\t\tjustify-content: center;\n\t\tmargin-bottom: 16rpx;\n\t}\n\t\n\t.location-icon {\n\t\tbackground-color: #4cd964;\n\t}\n\t\n\t.product-icon {\n\t\tbackground-color: #007aff;\n\t}\n\t\n\t.more-text {\n\t\tfont-size: 24rpx;\n\t\tcolor: #666666;\n\t}\n</style> ","import MiniProgramPage from 'E:/Myxiangmu/chonggou/juzitongcheng/pages/chat/detail.vue'\nwx.createPage(MiniProgramPage)"],"names":["uni","messagePollingService","getMessageList","sendMessage","markMessageRead"],"mappings":"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"}