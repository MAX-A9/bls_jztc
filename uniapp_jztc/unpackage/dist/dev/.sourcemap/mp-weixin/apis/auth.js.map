{"version":3,"file":"auth.js","sources":["apis/auth.js"],"sourcesContent":["/**\r\n * 认证API模块\r\n * 处理登录流程\r\n */\r\nimport userApi from './user';\r\nimport wxapi from '@/utils/wxapi';\r\n\r\n/**\r\n * 执行登录流程的核心逻辑\r\n * @param {Object} userInfo - 用户信息\r\n * @returns {Promise<Object>} 登录结果\r\n * @private\r\n */\r\nconst _processLogin = async (userInfo) => {\r\n  try {\r\n    // 获取微信登录凭证\r\n    const code = await wxapi.login();\r\n    \r\n    // 调用登录接口\r\n    const loginResult = await userApi.wxappLogin({\r\n      code,\r\n      userInfo\r\n    });\r\n    \r\n    // 保存登录信息\r\n    if (loginResult && loginResult.token) {\r\n      // 保存token\r\n      uni.setStorageSync('token', loginResult.token);\r\n      \r\n      // 保存用户信息\r\n      uni.setStorageSync('userInfo', JSON.stringify(userInfo));\r\n      \r\n      // 保存token过期时间\r\n      if (loginResult.expireIn) {\r\n        const expireTime = Date.now() + loginResult.expireIn * 1000;\r\n        uni.setStorageSync('tokenExpireTime', expireTime);\r\n      }\r\n      \r\n      // 保存用户ID\r\n      if (loginResult.clientId) {\r\n        uni.setStorageSync('clientId', loginResult.clientId);\r\n      }\r\n    }\r\n    \r\n    return {\r\n      success: true,\r\n      userInfo,\r\n      ...loginResult\r\n    };\r\n  } catch (error) {\r\n    console.error('登录失败:', error);\r\n    return {\r\n      success: false,\r\n      message: error.message || '登录失败',\r\n      error\r\n    };\r\n  }\r\n};\r\n\r\n/**\r\n * 执行微信小程序登录流程\r\n * 1. 获取微信登录code\r\n * 2. 获取用户信息\r\n * 3. 调用登录接口\r\n * 4. 保存token和用户信息\r\n * @returns {Promise<Object>} 登录结果\r\n */\r\nconst wxLogin = async () => {\r\n  try {\r\n    // 显示加载提示\r\n    uni.showLoading({\r\n      title: '登录中',\r\n      mask: true\r\n    });\r\n    \r\n    // 获取用户信息\r\n    const userInfo = await wxapi.getUserProfile();\r\n    \r\n    // 调用登录核心逻辑\r\n    return await _processLogin(userInfo);\r\n  } catch (error) {\r\n    console.error('登录失败:', error);\r\n    return {\r\n      success: false,\r\n      message: error.message || '登录失败',\r\n      error\r\n    };\r\n  } finally {\r\n    uni.hideLoading();\r\n  }\r\n};\r\n\r\n/**\r\n * 使用已获取的用户信息执行微信小程序登录流程\r\n * 1. 获取微信登录code\r\n * 2. 使用传入的用户信息\r\n * 3. 调用登录接口\r\n * 4. 保存token和用户信息\r\n * @param {Object} userInfo - 已获取的用户信息\r\n * @returns {Promise<Object>} 登录结果\r\n */\r\nconst wxLoginWithUserInfo = async (userInfo) => {\r\n  // 直接调用登录核心逻辑\r\n  return await _processLogin(userInfo);\r\n};\r\n\r\nexport default {\r\n  wxLogin,\r\n  wxLoginWithUserInfo\r\n}; "],"names":["wxapi","userApi","uni"],"mappings":";;;;AAaA,MAAM,gBAAgB,OAAO,aAAa;AACxC,MAAI;AAEF,UAAM,OAAO,MAAMA,kBAAM;AAGzB,UAAM,cAAc,MAAMC,UAAO,QAAC,WAAW;AAAA,MAC3C;AAAA,MACA;AAAA,IACN,CAAK;AAGD,QAAI,eAAe,YAAY,OAAO;AAEpCC,oBAAAA,MAAI,eAAe,SAAS,YAAY,KAAK;AAG7CA,oBAAG,MAAC,eAAe,YAAY,KAAK,UAAU,QAAQ,CAAC;AAGvD,UAAI,YAAY,UAAU;AACxB,cAAM,aAAa,KAAK,IAAK,IAAG,YAAY,WAAW;AACvDA,sBAAAA,MAAI,eAAe,mBAAmB,UAAU;AAAA,MACjD;AAGD,UAAI,YAAY,UAAU;AACxBA,sBAAAA,MAAI,eAAe,YAAY,YAAY,QAAQ;AAAA,MACpD;AAAA,IACF;AAED,WAAO;AAAA,MACL,SAAS;AAAA,MACT;AAAA,MACA,GAAG;AAAA,IACT;AAAA,EACG,SAAQ,OAAO;AACdA,kBAAA,MAAA,MAAA,SAAA,sBAAc,SAAS,KAAK;AAC5B,WAAO;AAAA,MACL,SAAS;AAAA,MACT,SAAS,MAAM,WAAW;AAAA,MAC1B;AAAA,IACN;AAAA,EACG;AACH;AAUA,MAAM,UAAU,YAAY;AAC1B,MAAI;AAEFA,kBAAAA,MAAI,YAAY;AAAA,MACd,OAAO;AAAA,MACP,MAAM;AAAA,IACZ,CAAK;AAGD,UAAM,WAAW,MAAMF,kBAAM;AAG7B,WAAO,MAAM,cAAc,QAAQ;AAAA,EACpC,SAAQ,OAAO;AACdE,kBAAA,MAAA,MAAA,SAAA,sBAAc,SAAS,KAAK;AAC5B,WAAO;AAAA,MACL,SAAS;AAAA,MACT,SAAS,MAAM,WAAW;AAAA,MAC1B;AAAA,IACN;AAAA,EACA,UAAY;AACRA,kBAAG,MAAC,YAAW;AAAA,EAChB;AACH;AAWA,MAAM,sBAAsB,OAAO,aAAa;AAE9C,SAAO,MAAM,cAAc,QAAQ;AACrC;AAEA,MAAe,UAAA;AAAA,EACb;AAAA,EACA;AACF;;"}