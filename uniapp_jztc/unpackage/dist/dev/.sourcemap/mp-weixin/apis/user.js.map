{"version":3,"file":"user.js","sources":["apis/user.js"],"sourcesContent":["/**\r\n * 用户相关API\r\n */\r\nimport { post, get, put } from '../utils/request.js';\r\nimport { API_PATHS } from '../utils/constants.js';\r\n\r\n/**\r\n * 微信小程序登录\r\n * @param {Object} data 请求数据，包含code和userInfo\r\n * @returns {Promise} 返回Promise对象\r\n */\r\nexport function wxappLogin(data) {\r\n  return post(API_PATHS.WXAPP_LOGIN, data)\r\n    .catch(err => {\r\n      throw err;\r\n    });\r\n}\r\n\r\n/**\r\n * 获取客户信息\r\n * @returns {Promise} 返回Promise对象，包含客户信息\r\n */\r\nexport function getClientInfo() {\r\n  return get(API_PATHS.CLIENT_INFO)\r\n    .catch(err => {\r\n      throw err;\r\n    });\r\n}\r\n\r\n/**\r\n * 更新客户个人信息\r\n * @param {Object} data 请求数据，可包含phone、realName等字段\r\n * @returns {Promise} 返回Promise对象\r\n */\r\nexport function updateClientProfile(data) {\r\n  return put(API_PATHS.CLIENT_UPDATE_PROFILE, data)\r\n    .catch(err => {\r\n      throw err;\r\n    });\r\n}\r\n\r\n/**\r\n * 获取微信登录凭证\r\n * @returns {Promise} 返回Promise对象，包含登录凭证code\r\n */\r\nexport function getWxLoginCode() {\r\n  return new Promise((resolve, reject) => {\r\n    uni.login({\r\n      provider: 'weixin',\r\n      success: (res) => {\r\n        if (res.code) {\r\n          resolve(res.code);\r\n        } else {\r\n          const error = { message: '获取微信登录凭证失败', res };\r\n          reject(error);\r\n        }\r\n      },\r\n      fail: (err) => {\r\n        reject(err || { message: '微信登录失败' });\r\n      }\r\n    });\r\n  });\r\n}\r\n\r\n/**\r\n * 获取微信用户信息\r\n * @returns {Promise} 返回Promise对象，包含用户信息\r\n */\r\nexport function getWxUserInfo() {\r\n  return new Promise((resolve, reject) => {\r\n    uni.getUserProfile({\r\n      desc: '用于完善用户资料',\r\n      success: (res) => {\r\n        if (res.userInfo) {\r\n          resolve(res.userInfo);\r\n        } else {\r\n          reject({ message: '获取用户信息失败' });\r\n        }\r\n      },\r\n      fail: (err) => {\r\n        reject(err || { message: '用户拒绝授权' });\r\n      }\r\n    });\r\n  });\r\n}\r\n\r\n/**\r\n * 获取图片base64编码\r\n * @param {String} imageUrl 图片URL\r\n * @returns {Promise<String>} 返回Promise对象，包含图片base64编码\r\n */\r\nexport function getImageBase64(imageUrl) {\r\n  return new Promise((resolve, reject) => {\r\n    uni.getImageInfo({\r\n      src: imageUrl,\r\n      success: (imgInfo) => {\r\n        // 微信小程序环境下使用传统方式处理\r\n        const canvasSize = 200; // 设置合适的尺寸\r\n        const ctx = uni.createCanvasContext('avatarCanvas');\r\n        \r\n        // 清空画布\r\n        ctx.clearRect(0, 0, canvasSize, canvasSize);\r\n        \r\n        ctx.drawImage(imgInfo.path, 0, 0, canvasSize, canvasSize);\r\n        \r\n        // 设置2秒超时，防止卡住\r\n        let drawTimeout = setTimeout(() => {\r\n          reject(new Error('Canvas绘制超时'));\r\n        }, 2000);\r\n        \r\n        ctx.draw(false, () => {\r\n          clearTimeout(drawTimeout);\r\n          \r\n          uni.canvasToTempFilePath({\r\n            canvasId: 'avatarCanvas',\r\n            fileType: 'jpg',\r\n            quality: 0.8,\r\n            success: (res) => {\r\n              // 读取临时文件为base64\r\n              uni.getFileSystemManager().readFile({\r\n                filePath: res.tempFilePath,\r\n                encoding: 'base64',\r\n                success: (base64Res) => {\r\n                  const base64Data = 'data:image/jpeg;base64,' + base64Res.data;\r\n                  resolve(base64Data);\r\n                },\r\n                fail: (err) => {\r\n                  reject(new Error('读取图片文件失败: ' + JSON.stringify(err)));\r\n                }\r\n              });\r\n            },\r\n            fail: (err) => {\r\n              reject(new Error('导出图片失败: ' + JSON.stringify(err)));\r\n            }\r\n          });\r\n        });\r\n      },\r\n      fail: (err) => {\r\n        reject(new Error('获取图片信息失败: ' + JSON.stringify(err)));\r\n      }\r\n    });\r\n  });\r\n}\r\n\r\n/**\r\n * 上传用户头像\r\n * @param {String} avatarUrl 微信返回的头像URL\r\n * @returns {Promise} 返回Promise对象\r\n */\r\nexport function uploadAvatar(avatarUrl) {\r\n  return new Promise(async (resolve, reject) => {\r\n    try {\r\n      // 1. 将头像URL转为base64编码\r\n      const base64Image = await getImageBase64(avatarUrl);\r\n      \r\n      // 2. 调用接口更新头像\r\n      const result = await put(API_PATHS.CLIENT_UPDATE_PROFILE, { \r\n        avatarUrl: base64Image\r\n      });\r\n      \r\n      resolve(result);\r\n    } catch (err) {\r\n      reject(err);\r\n    }\r\n  });\r\n}\r\n\r\n/**\r\n * 获取用户订单列表\r\n * @param {Object} params 查询参数\r\n * @param {Number} params.page 页码\r\n * @param {Number} params.pageSize 每页条数\r\n * @param {String} params.status 订单状态：all-全部 process-进行中 unpaid-待支付 completed-已完成 cancelled-已取消 refunded-已退款\r\n * @returns {Promise} 返回Promise对象\r\n */\r\nexport function getOrderList(params) {\r\n  return get('/wx/client/order/list', params);\r\n}\r\n\r\n/**\r\n * 获取订单详情\r\n * @param {Object} params 查询参数\r\n * @param {String} params.orderNo 订单编号\r\n * @returns {Promise} 返回Promise对象\r\n */\r\nexport function getOrderDetail(params) {\r\n  return get('/wx/client/order/detail', params);\r\n}\r\n\r\n/**\r\n * 取消订单\r\n * @param {Object} data 请求数据\r\n * @param {String} data.orderNo 订单编号\r\n * @param {String} data.reason 取消原因\r\n * @returns {Promise} 返回Promise对象\r\n */\r\nexport function cancelOrder(data) {\r\n  return post('/wx/client/order/cancel', data);\r\n}\r\n\r\n// 获取管家二维码图片\r\nexport function getButlerImage() {\r\n  return get('/wx/client/butler/image')\r\n} "],"names":["post","API_PATHS","get","put","uni"],"mappings":"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"}