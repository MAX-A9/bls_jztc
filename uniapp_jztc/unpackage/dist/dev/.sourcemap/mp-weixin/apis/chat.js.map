{"version":3,"file":"chat.js","sources":["apis/chat.js"],"sourcesContent":["/**\r\n * 聊天相关API\r\n */\r\nimport { get, post, put } from '../utils/request.js';\r\nimport { API_PATHS } from '../utils/constants.js';\r\nimport { getUserInfo } from '../utils/storage.js';\r\n\r\n/**\r\n * 获取聊天会话列表\r\n * @param {Object} params 查询参数\r\n * @returns {Promise} 返回Promise对象\r\n */\r\nexport function getSessionList(params = {}) {\r\n  return get('/wx/chat/session/list', params);\r\n}\r\n\r\n/**\r\n * 获取未读消息数量\r\n * @returns {Promise} 返回Promise对象\r\n */\r\nexport function getUnreadCount() {\r\n  return get('/wx/chat/unread/count');\r\n}\r\n\r\n/**\r\n * 清除所有未读消息\r\n * @returns {Promise} 返回Promise对象\r\n */\r\nexport function clearAllUnread() {\r\n  return put('/wx/chat/unread/clear-all');\r\n}\r\n\r\n/**\r\n * 清除指定会话的未读消息\r\n * @param {String} sessionId 会话ID\r\n * @returns {Promise} 返回Promise对象\r\n */\r\nexport function clearSessionUnread(sessionId) {\r\n  return put('/wx/chat/unread/clear', { sessionId });\r\n}\r\n\r\n/**\r\n * 获取聊天历史记录\r\n * @param {Object} params 查询参数\r\n * @param {String} params.sessionId 会话ID\r\n * @param {Number} params.page 页码，默认1\r\n * @param {Number} params.pageSize 每页条数，默认20\r\n * @returns {Promise} 返回Promise对象\r\n */\r\nexport function getChatHistory(params) {\r\n  if (!params.sessionId) {\r\n    return Promise.reject({ message: '会话ID不能为空' });\r\n  }\r\n  \r\n  return get('/wx/chat/history', params);\r\n}\r\n\r\n/**\r\n * 获取聊天对象信息\r\n * @param {String} sessionId 会话ID\r\n * @returns {Promise} 返回Promise对象\r\n */\r\nexport function getChatInfo(sessionId) {\r\n  if (!sessionId) {\r\n    return Promise.reject({ message: '会话ID不能为空' });\r\n  }\r\n  \r\n  return get('/wx/chat/info', { sessionId });\r\n}\r\n\r\n/**\r\n * 发送文本消息\r\n * @param {Object} data 消息数据\r\n * @param {String} data.sessionId 会话ID\r\n * @param {String} data.content 消息内容\r\n * @returns {Promise} 返回Promise对象\r\n */\r\nexport function sendTextMessage(data) {\r\n  if (!data.sessionId) {\r\n    return Promise.reject({ message: '会话ID不能为空' });\r\n  }\r\n  \r\n  if (!data.content || !data.content.trim()) {\r\n    return Promise.reject({ message: '消息内容不能为空' });\r\n  }\r\n  \r\n  return post('/wx/chat/send/text', data);\r\n}\r\n\r\n/**\r\n * 发送图片消息\r\n * @param {Object} data 消息数据\r\n * @param {String} data.sessionId 会话ID\r\n * @param {String} data.tempFilePath 图片临时路径\r\n * @returns {Promise} 返回Promise对象\r\n */\r\nexport function sendImageMessage(data) {\r\n  if (!data.sessionId) {\r\n    return Promise.reject({ message: '会话ID不能为空' });\r\n  }\r\n  \r\n  if (!data.tempFilePath) {\r\n    return Promise.reject({ message: '图片路径不能为空' });\r\n  }\r\n  \r\n  // 使用uni.uploadFile上传图片\r\n  return new Promise((resolve, reject) => {\r\n    uni.uploadFile({\r\n      url: '/wx/chat/send/image',\r\n      filePath: data.tempFilePath,\r\n      name: 'image',\r\n      formData: {\r\n        sessionId: data.sessionId\r\n      },\r\n      header: {\r\n        'Authorization': uni.getStorageSync('token') ? `Bearer ${uni.getStorageSync('token')}` : ''\r\n      },\r\n      success: (res) => {\r\n        // 需要把返回的字符串解析为JSON对象\r\n        try {\r\n          const result = JSON.parse(res.data);\r\n          resolve(result);\r\n        } catch (e) {\r\n          reject({ message: '解析响应数据失败', error: e });\r\n        }\r\n      },\r\n      fail: (err) => {\r\n        reject(err);\r\n      }\r\n    });\r\n  });\r\n}\r\n\r\n/**\r\n * 标记消息已读\r\n * @param {String} sessionId 会话ID\r\n * @returns {Promise} 返回Promise对象\r\n */\r\nexport function markMessagesRead(sessionId) {\r\n  if (!sessionId) {\r\n    return Promise.reject({ message: '会话ID不能为空' });\r\n  }\r\n  \r\n  return put('/wx/chat/messages/read', { sessionId });\r\n} "],"names":["get","put","post","uni"],"mappings":";;;AAYO,SAAS,eAAe,SAAS,IAAI;AAC1C,SAAOA,cAAG,IAAC,yBAAyB,MAAM;AAC5C;AAMO,SAAS,iBAAiB;AAC/B,SAAOA,cAAAA,IAAI,uBAAuB;AACpC;AAMO,SAAS,iBAAiB;AAC/B,SAAOC,cAAAA,IAAI,2BAA2B;AACxC;AAOO,SAAS,mBAAmB,WAAW;AAC5C,SAAOA,kBAAI,yBAAyB,EAAE,UAAW,CAAA;AACnD;AAUO,SAAS,eAAe,QAAQ;AACrC,MAAI,CAAC,OAAO,WAAW;AACrB,WAAO,QAAQ,OAAO,EAAE,SAAS,WAAY,CAAA;AAAA,EAC9C;AAED,SAAOD,cAAG,IAAC,oBAAoB,MAAM;AACvC;AAOO,SAAS,YAAY,WAAW;AACrC,MAAI,CAAC,WAAW;AACd,WAAO,QAAQ,OAAO,EAAE,SAAS,WAAY,CAAA;AAAA,EAC9C;AAED,SAAOA,kBAAI,iBAAiB,EAAE,UAAW,CAAA;AAC3C;AASO,SAAS,gBAAgB,MAAM;AACpC,MAAI,CAAC,KAAK,WAAW;AACnB,WAAO,QAAQ,OAAO,EAAE,SAAS,WAAY,CAAA;AAAA,EAC9C;AAED,MAAI,CAAC,KAAK,WAAW,CAAC,KAAK,QAAQ,QAAQ;AACzC,WAAO,QAAQ,OAAO,EAAE,SAAS,WAAY,CAAA;AAAA,EAC9C;AAED,SAAOE,cAAI,KAAC,sBAAsB,IAAI;AACxC;AASO,SAAS,iBAAiB,MAAM;AACrC,MAAI,CAAC,KAAK,WAAW;AACnB,WAAO,QAAQ,OAAO,EAAE,SAAS,WAAY,CAAA;AAAA,EAC9C;AAED,MAAI,CAAC,KAAK,cAAc;AACtB,WAAO,QAAQ,OAAO,EAAE,SAAS,WAAY,CAAA;AAAA,EAC9C;AAGD,SAAO,IAAI,QAAQ,CAAC,SAAS,WAAW;AACtCC,kBAAAA,MAAI,WAAW;AAAA,MACb,KAAK;AAAA,MACL,UAAU,KAAK;AAAA,MACf,MAAM;AAAA,MACN,UAAU;AAAA,QACR,WAAW,KAAK;AAAA,MACjB;AAAA,MACD,QAAQ;AAAA,QACN,iBAAiBA,cAAG,MAAC,eAAe,OAAO,IAAI,UAAUA,cAAAA,MAAI,eAAe,OAAO,CAAC,KAAK;AAAA,MAC1F;AAAA,MACD,SAAS,CAAC,QAAQ;AAEhB,YAAI;AACF,gBAAM,SAAS,KAAK,MAAM,IAAI,IAAI;AAClC,kBAAQ,MAAM;AAAA,QACf,SAAQ,GAAG;AACV,iBAAO,EAAE,SAAS,YAAY,OAAO,EAAG,CAAA;AAAA,QACzC;AAAA,MACF;AAAA,MACD,MAAM,CAAC,QAAQ;AACb,eAAO,GAAG;AAAA,MACX;AAAA,IACP,CAAK;AAAA,EACL,CAAG;AACH;AAOO,SAAS,iBAAiB,WAAW;AAC1C,MAAI,CAAC,WAAW;AACd,WAAO,QAAQ,OAAO,EAAE,SAAS,WAAY,CAAA;AAAA,EAC9C;AAED,SAAOF,kBAAI,0BAA0B,EAAE,UAAW,CAAA;AACpD;;;;;;;;;;;;;;"}