{"version":3,"file":"device-adapter.js","sources":["mixins/device-adapter.js"],"sourcesContent":["import deviceInfo from '@/utils/device-info.js'\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      // 缓存系统信息，避免重复获取\r\n      _windowInfo: null,\r\n      _deviceInfo: null,\r\n      _appBaseInfo: null,\r\n      _systemSetting: null,\r\n    }\r\n  },\r\n  created() {\r\n    // 在组件创建时获取一次信息，避免重复调用\r\n    try {\r\n      // 使用新的工具类获取设备信息\r\n      this._windowInfo = deviceInfo.getWindowInfo()\r\n      this._deviceInfo = deviceInfo.getDeviceInfo()\r\n      this._appBaseInfo = deviceInfo.getAppBaseInfo()\r\n      this._systemSetting = deviceInfo.getSystemSetting()\r\n    } catch (e) {\r\n      console.error('获取设备信息失败:', e)\r\n      // 使用默认值\r\n      this._windowInfo = {\r\n        windowWidth: 375,\r\n        windowHeight: 667,\r\n        screenWidth: 375,\r\n        screenHeight: 667,\r\n        statusBarHeight: 20,\r\n        safeArea: {\r\n          top: 0,\r\n          right: 375,\r\n          bottom: 667,\r\n          left: 0\r\n        }\r\n      }\r\n      this._deviceInfo = {\r\n        brand: '',\r\n        model: '',\r\n        system: '',\r\n        platform: ''\r\n      }\r\n      this._appBaseInfo = {\r\n        SDKVersion: '',\r\n        appName: '',\r\n        appVersion: '',\r\n        appLanguage: 'zh-Hans'\r\n      }\r\n    }\r\n  },\r\n  computed: {\r\n    // 获取状态栏高度\r\n    statusBarHeight() {\r\n      return this._windowInfo?.statusBarHeight || 0\r\n    },\r\n    \r\n    // 导航栏总高度\r\n    navigationBarHeight() {\r\n      const isIOS = (this._deviceInfo?.system || '').toLowerCase().includes('ios')\r\n      // iOS 和 Android 导航栏高度不同\r\n      const navHeight = isIOS ? 44 : 48\r\n      return this.statusBarHeight + navHeight\r\n    },\r\n\r\n    // 是否是小屏幕设备\r\n    isSmallScreen() {\r\n      return (this._windowInfo?.windowWidth || 0) <= 320\r\n    },\r\n\r\n    // 是否是大屏幕设备\r\n    isLargeScreen() {\r\n      return (this._windowInfo?.windowWidth || 0) >= 768\r\n    },\r\n\r\n    // 安全区域\r\n    safeAreaInsets() {\r\n      const safeArea = this._windowInfo?.safeArea || {}\r\n      return {\r\n        top: safeArea.top || 0,\r\n        bottom: safeArea.bottom || 0,\r\n        left: safeArea.left || 0,\r\n        right: safeArea.right || 0\r\n      }\r\n    },\r\n\r\n    // 屏幕尺寸\r\n    screenSize() {\r\n      return {\r\n        width: this._windowInfo?.windowWidth || 0,\r\n        height: this._windowInfo?.windowHeight || 0\r\n      }\r\n    },\r\n\r\n    // 统一布局尺寸\r\n    layoutSize() {\r\n      return {\r\n        // 底部结算栏高度(不含安全区域)\r\n        settlementHeight: 120,  // 固定120rpx\r\n        // 内容区域底部间距\r\n        contentBottom: 160,     // 固定160rpx\r\n        // 导航栏高度\r\n        navHeight: 44,         // 固定44px\r\n        // 卡片间距\r\n        cardGap: 20,           // 固定20rpx\r\n        // 内容区域水平内边距\r\n        contentPadding: 20     // 固定20rpx\r\n      }\r\n    }\r\n  },\r\n\r\n  methods: {\r\n    // 获取元素布局信息\r\n    async getElementRect(selector) {\r\n      return new Promise((resolve) => {\r\n        uni.createSelectorQuery()\r\n          .select(selector)\r\n          .boundingClientRect(data => {\r\n            resolve(data)\r\n          })\r\n          .exec()\r\n      })\r\n    },\r\n\r\n    // rpx 转 px\r\n    rpxToPx(rpx) {\r\n      const screenWidth = this._windowInfo?.windowWidth || 375\r\n      return (rpx / 750) * screenWidth\r\n    },\r\n\r\n    // px 转 rpx \r\n    pxToRpx(px) {\r\n      const screenWidth = this._windowInfo?.windowWidth || 375\r\n      return (px * 750) / screenWidth\r\n    }\r\n  }\r\n} "],"names":["deviceInfo","uni"],"mappings":"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"}